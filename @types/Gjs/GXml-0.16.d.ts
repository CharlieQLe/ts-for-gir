/**
 * GXml-0.16
 */

import type * as Gjs from './Gjs';
import type * as libxml2 from './libxml2-2.0';
import type * as Gio from './Gio-2.0';
import type * as GObject from './GObject-2.0';
import type * as GLib from './GLib-2.0';
import type * as Gee from './Gee-0.8';

export enum CssSelectorType {
    CLASS,
    ID,
    ALL,
    ELEMENT,
    ATTRIBUTE,
    ATTRIBUTE_EQUAL,
    ATTRIBUTE_CONTAINS,
    ATTRIBUTE_SUBSTRING,
    ATTRIBUTE_START_WITH,
    ATTRIBUTE_START_WITH_HYPHEN,
    ATTRIBUTE_END_WITH,
    PSEUDO,
    AND,
    INSIDE,
    PARENT,
    AFTER,
    BEFORE,
}
export enum NodeType {
    INVALID,
    ELEMENT,
    ATTRIBUTE,
    TEXT,
    CDATA_SECTION,
    ENTITY_REFERENCE,
    ENTITY,
    PROCESSING_INSTRUCTION,
    COMMENT,
    DOCUMENT,
    DOCUMENT_TYPE,
    DOCUMENT_FRAGMENT,
    NOTATION,
}
export enum XPathObjectType {
    UNDEFINED,
    NODESET,
    BOOLEAN,
    NUMBER,
    STRING,
    POINT,
    RANGE,
    LOCATIONSET,
    USERS,
    XSLT_TREE,
}
export enum CssSelectorError {
    NULL,
    ATTRIBUTE,
    INVALID,
    LENGTH,
    STRING,
    TYPE,
}
export enum DocumentError {
    INVALID_DOCUMENT_ERROR,
    INVALID_FILE,
}
export enum DomError {
    INDEX_SIZE_ERROR,
    DOMSTRING_SIZE_ERROR,
    HIERARCHY_REQUEST_ERROR,
    WRONG_DOCUMENT_ERROR,
    INVALID_CHARACTER_ERROR,
    NO_DATA_ALLOWED_ERROR,
    NO_MODIFICATION_ALLOWED_ERROR,
    NOT_FOUND_ERROR,
    NOT_SUPPORTED_ERROR,
    INUSE_ATTRIBUTE_ERROR,
    INVALID_STATE_ERROR,
    SYNTAX_ERROR,
    INVALID_MODIFICATION_ERROR,
    NAMESPACE_ERROR,
    INVALID_ACCESS_ERROR,
    VALIDATION_ERROR,
    TYPE_MISMATCH_ERROR,
    SECURITY_ERROR,
    NETWORK_ERROR,
    ABORT_ERROR,
    URL_MISMATCH_ERROR,
    QUOTA_EXCEEDED_ERROR,
    TIME_OUT_ERROR,
    INVALID_NODE_TYPE_ERROR,
    DATA_CLONE_ERROR,
}
export enum EnumerationError {
    INVALID_VALUE,
    INVALID_TEXT,
}
export enum Error {
    NOT_SUPPORTED,
    PARSER,
    WRITER,
}
export enum ParserError {
    INVALID_DATA_ERROR,
    INVALID_FILE_ERROR,
    INVALID_STREAM_ERROR,
}
export enum IXsdSchemaError {
    INVALIDATION_ERROR,
}
export enum SerializableError {
    UNSUPPORTED_TYPE_ERROR,
    STR_TO_VALUE_ERROR,
}
export enum SerializableEnumError {
    INVALID_VALUE_ERROR,
    PARSE_ERROR,
}
export enum XPathError {
    EXPRESSION_OK,
    NUMBER_ERROR,
    UNFINISHED_LITERAL_ERROR,
    START_LITERAL_ERROR,
    VARIABLE_REF_ERROR,
    UNDEF_VARIABLE_ERROR,
    INVALID_PREDICATE_ERROR,
    EXPR_ERROR,
    UNCLOSED_ERROR,
    UNKNOWN_FUNC_ERROR,
    INVALID_OPERAND,
    INVALID_TYPE,
    INVALID_ARITY,
    INVALID_CTXT_SIZE,
    INVALID_CTXT_POSITION,
    MEMORY_ERROR,
    XPTR_SYNTAX_ERROR,
    XPTR_RESOURCE_ERROR,
    XPTR_SUB_RESOURCE_ERROR,
    UNDEF_PREFIX_ERROR,
    ENCODING_ERROR,
    INVALID_CHAR_ERROR,
    INVALID_CTXT,
}
export enum TDocumentReadType {
    NEXT,
    CONTINUE,
    STOP,
}
export enum DomEventPhase {
    NONE,
    CAPTURING_PHASE,
    AT_TARGET,
    BUBBLING_PHASE,
}
export enum DomNodeNodeType {
    INVALID,
    ELEMENT_NODE,
    ATTRIBUTE_NODE,
    TEXT_NODE,
    CDATA_SECTION_NODE,
    ENTITY_REFERENCE_NODE,
    ENTITY_NODE,
    PROCESSING_INSTRUCTION_NODE,
    COMMENT_NODE,
    DOCUMENT_NODE,
    DOCUMENT_TYPE_NODE,
    DOCUMENT_FRAGMENT_NODE,
    NOTATION_NODE,
}
export enum DomRangeBoundaryPoints {
    START_TO_START,
    START_TO_END,
    END_TO_END,
    END_TO_START,
}
export enum DomEventFlags {
    STOP_PROPAGATION_FLAG,
    STOP_IMMEDIATE_PROPAGATION_FLAG,
    CANCELED_FLAG,
    INITIALIZED_FLAG,
    DISPATCH_FLAG,
}
export enum DomNodeDocumentPosition {
    NONE,
    DISCONNECTED,
    PRECEDING,
    FOLLOWING,
    CONTAINS,
    CONTAINED_BY,
    IMPLEMENTATION_SPECIFIC,
}
export interface DomMutationCallback {
    (mutations: Gee.List, observer: DomMutationObserver): void
}
export interface Attribute_ConstructProps extends GObject.Object_ConstructProps {
    namespace?: Namespace
}
export class Attribute {
    /* Properties of GXml.Attribute */
    namespace: Namespace
    readonly prefix: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Attribute */
    get_namespace(): Namespace | null
    set_namespace(value?: Namespace | null): void
    get_prefix(): string | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Attribute */
    vfunc_get_namespace(): Namespace | null
    vfunc_set_namespace(value?: Namespace | null): void
    vfunc_get_prefix(): string | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::namespace", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: Attribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Attribute_ConstructProps)
    _init (config?: Attribute_ConstructProps): void
    static $gtype: GObject.Type
}
export interface CDATA_ConstructProps extends GObject.Object_ConstructProps {
}
export class CDATA {
    /* Properties of GXml.CDATA */
    readonly str: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.CDATA */
    get_str(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.CDATA */
    vfunc_get_str(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::str", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: CDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CDATA_ConstructProps)
    _init (config?: CDATA_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Character_ConstructProps extends GObject.Object_ConstructProps {
    str?: string
}
export class Character {
    /* Properties of GXml.Character */
    str: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Character */
    get_str(): string
    set_str(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Character */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::str", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: Character, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Character_ConstructProps)
    _init (config?: Character_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Comment_ConstructProps extends GObject.Object_ConstructProps {
    str?: string
}
export class Comment {
    /* Properties of GXml.Comment */
    str: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Comment */
    get_str(): string
    set_str(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Comment */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::str", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: Comment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Comment_ConstructProps)
    _init (config?: Comment_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Document_ConstructProps extends GObject.Object_ConstructProps {
    indent?: boolean
    ns_top?: boolean
    prefix_default_ns?: boolean
    backup?: boolean
    file?: Gio.File
}
export class Document {
    /* Properties of GXml.Document */
    indent: boolean
    ns_top: boolean
    prefix_default_ns: boolean
    backup: boolean
    readonly root: Node
    file: Gio.File
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Document */
    create_element(name: string): Node
    create_text(text: string): Node
    create_comment(text: string): Node
    create_cdata(text: string): Node
    create_pi(target: string, data: string): Node
    save(cancellable?: Gio.Cancellable | null): boolean
    save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    get_indent(): boolean
    set_indent(value: boolean): void
    get_ns_top(): boolean
    set_ns_top(value: boolean): void
    get_prefix_default_ns(): boolean
    set_prefix_default_ns(value: boolean): void
    get_backup(): boolean
    set_backup(value: boolean): void
    get_root(): Node
    get_file(): Gio.File
    set_file(value: Gio.File): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Document */
    vfunc_create_element(name: string): Node
    vfunc_create_text(text: string): Node
    vfunc_create_comment(text: string): Node
    vfunc_create_cdata(text: string): Node
    vfunc_create_pi(target: string, data: string): Node
    vfunc_save(cancellable?: Gio.Cancellable | null): boolean
    vfunc_save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_ns_top(): boolean
    vfunc_set_ns_top(value: boolean): void
    vfunc_get_prefix_default_ns(): boolean
    vfunc_set_prefix_default_ns(value: boolean): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_root(): Node
    vfunc_get_file(): Gio.File
    vfunc_set_file(value: Gio.File): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::indent", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ns-top", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ns-top", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix-default-ns", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix-default-ns", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::backup", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::file", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: Document, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Document_ConstructProps)
    _init (config?: Document_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new_default(): Document
    static new_default_for_path(path: string): Document
    static new_default_for_file(f: Gio.File): Document
    static $gtype: GObject.Type
}
export interface DocumentType_ConstructProps extends GObject.Object_ConstructProps {
}
export class DocumentType {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DocumentType_ConstructProps)
    _init (config?: DocumentType_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomAttr_ConstructProps extends GObject.Object_ConstructProps {
    value?: string
}
export class DomAttr {
    /* Properties of GXml.DomAttr */
    readonly namespace_uri: string
    readonly prefix: string
    readonly local_name: string
    readonly name: string
    value: string
    readonly specified: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomAttr */
    get_namespace_uri(): string | null
    get_prefix(): string | null
    get_local_name(): string
    get_name(): string
    get_value(): string
    set_value(value: string): void
    get_specified(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomAttr */
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_specified(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::specified", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: DomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomAttr_ConstructProps)
    _init (config?: DomAttr_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomCharacterData_ConstructProps extends GObject.Object_ConstructProps {
    data?: string
}
export class DomCharacterData {
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomCharacterData */
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::data", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomCharacterData_ConstructProps)
    _init (config?: DomCharacterData_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomText_ConstructProps extends DomCharacterData_ConstructProps {
}
export class DomText {
    /* Properties of GXml.DomText */
    readonly whole_text: string
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomText */
    split_text(offset: number): DomText
    get_whole_text(): string
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomCharacterData */
    get_data(): string
    set_data(value: string): void
    /* Virtual methods of GXml.DomText */
    vfunc_split_text(offset: number): DomText
    vfunc_get_whole_text(): string
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.DomCharacterData */
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::whole-text", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomText_ConstructProps)
    _init (config?: DomText_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomProcessingInstruction_ConstructProps extends DomCharacterData_ConstructProps {
}
export class DomProcessingInstruction {
    /* Properties of GXml.DomProcessingInstruction */
    readonly target: string
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomProcessingInstruction */
    get_target(): string
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomCharacterData */
    get_data(): string
    set_data(value: string): void
    /* Virtual methods of GXml.DomProcessingInstruction */
    vfunc_get_target(): string
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.DomCharacterData */
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::target", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomProcessingInstruction_ConstructProps)
    _init (config?: DomProcessingInstruction_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomComment_ConstructProps extends DomCharacterData_ConstructProps {
}
export class DomComment {
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomCharacterData */
    get_data(): string
    set_data(value: string): void
    /* Virtual methods of GXml.DomComment */
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.DomCharacterData */
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::data", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomComment_ConstructProps)
    _init (config?: DomComment_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomNonElementParentNode_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomNonElementParentNode {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomNonElementParentNode */
    get_element_by_id(element_id: string): DomElement | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomNonElementParentNode */
    vfunc_get_element_by_id(element_id: string): DomElement | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomNonElementParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomNonElementParentNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomNonElementParentNode_ConstructProps)
    _init (config?: DomNonElementParentNode_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomParentNode_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomParentNode {
    /* Properties of GXml.DomParentNode */
    readonly children: DomHTMLCollection
    readonly first_element_child: DomElement
    readonly last_element_child: DomElement
    readonly child_element_count: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomParentNode */
    query_selector(selectors: string): DomElement | null
    query_selector_all(selectors: string): DomNodeList
    get_elements_by_property_value(property: string, value: string): DomElementList
    get_children(): DomHTMLCollection
    get_first_element_child(): DomElement | null
    get_last_element_child(): DomElement | null
    get_child_element_count(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomParentNode */
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::children", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DomParentNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomParentNode_ConstructProps)
    _init (config?: DomParentNode_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomNonDocumentTypeChildNode_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomNonDocumentTypeChildNode {
    /* Properties of GXml.DomNonDocumentTypeChildNode */
    readonly previous_element_sibling: DomElement
    readonly next_element_sibling: DomElement
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomNonDocumentTypeChildNode */
    get_previous_element_sibling(): DomElement | null
    get_next_element_sibling(): DomElement | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomNonDocumentTypeChildNode */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DomNonDocumentTypeChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomNonDocumentTypeChildNode_ConstructProps)
    _init (config?: DomNonDocumentTypeChildNode_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomChildNode_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomChildNode {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomChildNode */
    remove(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomChildNode */
    vfunc_remove(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomChildNode_ConstructProps)
    _init (config?: DomChildNode_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomNodeList_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomNodeList {
    /* Properties of GXml.DomNodeList */
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomNodeList */
    item(index: number): DomNode | null
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomNodeList */
    vfunc_item(index: number): DomNode | null
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomNodeList_ConstructProps)
    _init (config?: DomNodeList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomHTMLCollection_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomHTMLCollection {
    /* Properties of GXml.DomHTMLCollection */
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomHTMLCollection */
    get_element(index: number): DomElement | null
    to_array(): DomElement[]
    item(index: number): DomElement | null
    named_item(name: string): DomElement | null
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomHTMLCollection */
    vfunc_get_element(index: number): DomElement | null
    vfunc_to_array(): DomElement[]
    vfunc_item(index: number): DomElement | null
    vfunc_named_item(name: string): DomElement | null
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomHTMLCollection_ConstructProps)
    _init (config?: DomHTMLCollection_ConstructProps): void
    static $gtype: GObject.Type
}
export class DomNodeIterator {
    /* Properties of GXml.DomNodeIterator */
    readonly root: DomNode
    readonly reference_node: DomNode
    readonly pointer_before_reference_node: boolean
    readonly what_to_show: number
    readonly filter: DomNodeFilter
    /* Methods of GXml.DomNodeIterator */
    next_node(): DomNode | null
    previous_node(): DomNode | null
    detach(): void
    get_root(): DomNode
    get_reference_node(): DomNode
    get_pointer_before_reference_node(): boolean
    get_what_to_show(): number
    get_filter(): DomNodeFilter | null
    /* Virtual methods of GXml.DomNodeIterator */
    vfunc_next_node(): DomNode | null
    vfunc_previous_node(): DomNode | null
    vfunc_detach(): void
    vfunc_get_root(): DomNode
    vfunc_get_reference_node(): DomNode
    vfunc_get_pointer_before_reference_node(): boolean
    vfunc_get_what_to_show(): number
    vfunc_get_filter(): DomNodeFilter | null
    static name: string
}
export interface DomTreeWalker_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomTreeWalker {
    /* Properties of GXml.DomTreeWalker */
    readonly root: DomNode
    readonly what_to_show: number
    readonly filter: DomNodeFilter
    readonly current_node: DomNode
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomTreeWalker */
    parentNode(): DomNode | null
    firstChild(): DomNode | null
    lastChild(): DomNode | null
    previousSibling(): DomNode | null
    nextSibling(): DomNode | null
    previousNode(): DomNode | null
    nextNode(): DomNode | null
    get_root(): DomNode
    get_what_to_show(): number
    get_filter(): DomNodeFilter | null
    get_current_node(): DomNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomTreeWalker */
    vfunc_parentNode(): DomNode | null
    vfunc_firstChild(): DomNode | null
    vfunc_lastChild(): DomNode | null
    vfunc_previousSibling(): DomNode | null
    vfunc_nextSibling(): DomNode | null
    vfunc_previousNode(): DomNode | null
    vfunc_nextNode(): DomNode | null
    vfunc_get_root(): DomNode
    vfunc_get_what_to_show(): number
    vfunc_get_filter(): DomNodeFilter | null
    vfunc_get_current_node(): DomNode
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::root", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::what-to-show", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-node", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-node", callback: (($obj: DomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomTreeWalker_ConstructProps)
    _init (config?: DomTreeWalker_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomNamedNodeMap_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomNamedNodeMap {
    /* Properties of GXml.DomNamedNodeMap */
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomNamedNodeMap */
    item(index: number): DomNode | null
    get_named_item(name: string): DomNode | null
    set_named_item(node: DomNode): DomNode | null
    remove_named_item(name: string): DomNode | null
    remove_named_item_ns(namespace_uri: string, localName: string): DomNode | null
    get_named_item_ns(namespace_uri: string, local_name: string): DomNode | null
    set_named_item_ns(node: DomNode): DomNode | null
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomNamedNodeMap */
    vfunc_item(index: number): DomNode | null
    vfunc_get_named_item(name: string): DomNode | null
    vfunc_set_named_item(node: DomNode): DomNode | null
    vfunc_remove_named_item(name: string): DomNode | null
    vfunc_remove_named_item_ns(namespace_uri: string, localName: string): DomNode | null
    vfunc_get_named_item_ns(namespace_uri: string, local_name: string): DomNode | null
    vfunc_set_named_item_ns(node: DomNode): DomNode | null
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomNamedNodeMap_ConstructProps)
    _init (config?: DomNamedNodeMap_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomTokenList_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomTokenList {
    /* Properties of GXml.DomTokenList */
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomTokenList */
    item(index: number): string | null
    contains(token: string): boolean
    add(tokens: string[]): void
    remove(tokens: string[]): void
    toggle(token: string, force: boolean, auto: boolean): boolean
    to_string(): string
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomTokenList */
    vfunc_item(index: number): string | null
    vfunc_contains(token: string): boolean
    vfunc_add(tokens: string[]): void
    vfunc_remove(tokens: string[]): void
    vfunc_toggle(token: string, force: boolean, auto: boolean): boolean
    vfunc_to_string(): string
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomTokenList_ConstructProps)
    _init (config?: DomTokenList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomSettableTokenList_ConstructProps extends DomTokenList_ConstructProps {
    value?: string
}
export class DomSettableTokenList {
    /* Properties of GXml.DomSettableTokenList */
    value: string
    /* Properties of GXml.DomTokenList */
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomSettableTokenList */
    get_value(): string
    set_value(value: string): void
    /* Methods of GXml.DomTokenList */
    item(index: number): string | null
    contains(token: string): boolean
    add(tokens: string[]): void
    remove(tokens: string[]): void
    toggle(token: string, force: boolean, auto: boolean): boolean
    to_string(): string
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomSettableTokenList */
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_item(index: number): string | null
    vfunc_contains(token: string): boolean
    vfunc_add(tokens: string[]): void
    vfunc_remove(tokens: string[]): void
    vfunc_toggle(token: string, force: boolean, auto: boolean): boolean
    vfunc_to_string(): string
    vfunc_get_length(): number
    /* Virtual methods of GXml.DomTokenList */
    vfunc_item(index: number): string | null
    vfunc_contains(token: string): boolean
    vfunc_add(tokens: string[]): void
    vfunc_remove(tokens: string[]): void
    vfunc_toggle(token: string, force: boolean, auto: boolean): boolean
    vfunc_to_string(): string
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomSettableTokenList_ConstructProps)
    _init (config?: DomSettableTokenList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomDocument_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomDocument {
    /* Properties of GXml.DomDocument */
    readonly implementation: DomImplementation
    readonly url: string
    readonly document_uri: string
    readonly origin: string
    readonly compat_mode: string
    readonly character_set: string
    readonly content_type: string
    readonly doctype: DomDocumentType
    readonly document_element: DomElement
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomDocument */
    get_elements_by_tag_name(local_name: string): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    get_elements_by_class_name(classNames: string): DomHTMLCollection
    create_element(local_name: string): DomElement
    create_element_ns(namespace: string | null, qualified_name: string): DomElement
    create_document_fragment(): DomDocumentFragment
    create_text_node(data: string): DomText
    create_comment(data: string): DomComment
    create_processing_instruction(target: string, data: string): DomProcessingInstruction
    import_node(node: DomNode, deep: boolean): DomNode
    adopt_node(node: DomNode): DomNode
    create_event(interface: string): DomEvent
    create_range(): DomRange
    create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    get_implementation(): DomImplementation
    get_url(): string
    get_document_uri(): string
    get_origin(): string
    get_compat_mode(): string
    get_character_set(): string
    get_content_type(): string
    get_doctype(): DomDocumentType | null
    get_document_element(): DomElement | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomDocument */
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(classNames: string): DomHTMLCollection
    vfunc_create_element(local_name: string): DomElement
    vfunc_create_element_ns(namespace: string | null, qualified_name: string): DomElement
    vfunc_create_document_fragment(): DomDocumentFragment
    vfunc_create_text_node(data: string): DomText
    vfunc_create_comment(data: string): DomComment
    vfunc_create_processing_instruction(target: string, data: string): DomProcessingInstruction
    vfunc_import_node(node: DomNode, deep: boolean): DomNode
    vfunc_adopt_node(node: DomNode): DomNode
    vfunc_create_event(interface: string): DomEvent
    vfunc_create_range(): DomRange
    vfunc_create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    vfunc_create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    vfunc_get_implementation(): DomImplementation
    vfunc_get_url(): string
    vfunc_get_document_uri(): string
    vfunc_get_origin(): string
    vfunc_get_compat_mode(): string
    vfunc_get_character_set(): string
    vfunc_get_content_type(): string
    vfunc_get_doctype(): DomDocumentType | null
    vfunc_get_document_element(): DomElement | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::implementation", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::url", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-uri", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::origin", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::compat-mode", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::character-set", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-type", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::doctype", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-element", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomDocument_ConstructProps)
    _init (config?: DomDocument_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomXMLDocument_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomXMLDocument {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomXMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomXMLDocument_ConstructProps)
    _init (config?: DomXMLDocument_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomImplementation_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomImplementation {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomImplementation */
    create_document_type(qualified_name: string, public_id: string, system_id: string): DomDocumentType
    create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    create_html_document(title: string): Document
    has_feature(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomImplementation */
    vfunc_create_document_type(qualified_name: string, public_id: string, system_id: string): DomDocumentType
    vfunc_create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    vfunc_create_html_document(title: string): Document
    vfunc_has_feature(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomImplementation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomImplementation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomImplementation_ConstructProps)
    _init (config?: DomImplementation_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomDocumentFragment_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomDocumentFragment {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomDocumentFragment_ConstructProps)
    _init (config?: DomDocumentFragment_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomDocumentType_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomDocumentType {
    /* Properties of GXml.DomDocumentType */
    readonly name: string
    readonly public_id: string
    readonly system_id: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomDocumentType */
    get_name(): string
    get_public_id(): string
    get_system_id(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomDocumentType */
    vfunc_get_name(): string
    vfunc_get_public_id(): string
    vfunc_get_system_id(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::public-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::system-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: DomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomDocumentType_ConstructProps)
    _init (config?: DomDocumentType_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomHtmlDocument_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomHtmlDocument {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomHtmlDocument */
    read_from_string(str: string): void
    read_from_string_tolerant(str: string): void
    to_html(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomHtmlDocument */
    vfunc_read_from_string(str: string): void
    vfunc_read_from_string_tolerant(str: string): void
    vfunc_to_html(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomHtmlDocument_ConstructProps)
    _init (config?: DomHtmlDocument_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomElement_ConstructProps extends GObject.Object_ConstructProps {
    id?: string
    class_name?: string
}
export class DomElement {
    /* Properties of GXml.DomElement */
    readonly namespace_uri: string
    readonly prefix: string
    readonly local_name: string
    readonly tag_name: string
    id: string
    class_name: string
    readonly class_list: DomTokenList
    readonly attributes: DomNamedNodeMap
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomElement */
    get_attribute(name: string): string | null
    get_attribute_ns(namespace: string | null, local_name: string): string | null
    set_attribute(name: string, value: string): void
    set_attribute_ns(namespace: string | null, name: string, value: string): void
    remove_attribute(name: string): void
    remove_attribute_ns(namespace: string | null, local_name: string): void
    has_attribute(name: string): boolean
    has_attribute_ns(namespace: string | null, local_name: string): boolean
    get_elements_by_tag_name(local_name: string): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    get_elements_by_class_name(class_names: string): DomHTMLCollection
    get_namespace_uri(): string | null
    get_prefix(): string | null
    get_local_name(): string
    get_tag_name(): string
    get_id(): string | null
    set_id(value?: string | null): void
    get_class_name(): string | null
    set_class_name(value?: string | null): void
    get_class_list(): DomTokenList
    get_attributes(): DomNamedNodeMap
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomElement */
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomElement_ConstructProps)
    _init (config?: DomElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomEventTarget_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomEventTarget {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomEventTarget */
    add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    dispatch_event(event: DomEvent): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomEventTarget */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomEventTarget, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomEventTarget, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomEventTarget_ConstructProps)
    _init (config?: DomEventTarget_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomEventListener_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomEventListener {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomEventListener */
    handle_event(event: DomEvent): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomEventListener */
    vfunc_handle_event(event: DomEvent): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomEventListener, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomEventListener, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomEventListener_ConstructProps)
    _init (config?: DomEventListener_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomEvent_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomEvent {
    /* Properties of GXml.DomEvent */
    readonly etype: string
    readonly event_target: DomEventTarget
    readonly current_target: DomEventTarget
    readonly bubbles: boolean
    readonly cancelable: boolean
    readonly is_trusted: boolean
    readonly time_stamp: DomTimeStamp
    readonly default_prevented: boolean
    readonly event_phase: DomEventPhase
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomEvent */
    stop_propagation(): void
    stop_immediate_propagation(): void
    prevent_default(): void
    init_event(type: string, bubbles: boolean, cancelable: boolean): void
    get_etype(): string
    get_event_target(): DomEventTarget | null
    get_current_target(): DomEventTarget | null
    get_bubbles(): boolean
    get_cancelable(): boolean
    get_is_trusted(): boolean
    get_time_stamp(): DomTimeStamp
    get_default_prevented(): boolean
    get_event_phase(): DomEventPhase
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomEvent */
    vfunc_stop_propagation(): void
    vfunc_stop_immediate_propagation(): void
    vfunc_prevent_default(): void
    vfunc_init_event(type: string, bubbles: boolean, cancelable: boolean): void
    vfunc_get_etype(): string
    vfunc_get_event_target(): DomEventTarget | null
    vfunc_get_current_target(): DomEventTarget | null
    vfunc_get_bubbles(): boolean
    vfunc_get_cancelable(): boolean
    vfunc_get_is_trusted(): boolean
    vfunc_get_time_stamp(): DomTimeStamp
    vfunc_get_default_prevented(): boolean
    vfunc_get_event_phase(): DomEventPhase
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::etype", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::etype", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bubbles", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-trusted", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-trusted", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-prevented", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-prevented", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomEvent_ConstructProps)
    _init (config?: DomEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomCustomEvent_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomCustomEvent {
    /* Properties of GXml.DomCustomEvent */
    readonly detail: any
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomCustomEvent */
    init_custom_event(type: string, bubbles: boolean, cancelable: boolean, detail: any): void
    get_detail(): /* result */ any
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomCustomEvent */
    vfunc_init_custom_event(type: string, bubbles: boolean, cancelable: boolean, detail: any): void
    vfunc_get_detail(): /* result */ any
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::detail", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomCustomEvent_ConstructProps)
    _init (config?: DomCustomEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomMutationObserver_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomMutationObserver {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomMutationObserver */
    observe(target: Node, options: DomMutationObserverInit): void
    disconnect(): void
    take_records(): Gee.List
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomMutationObserver */
    vfunc_observe(target: Node, options: DomMutationObserverInit): void
    vfunc_disconnect(): void
    vfunc_take_records(): Gee.List
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomMutationObserver, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomMutationObserver, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomMutationObserver_ConstructProps)
    _init (config?: DomMutationObserver_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomMutationRecord_ConstructProps extends GObject.Object_ConstructProps {
    added_nodes?: DomNodeList
    removed_nodes?: DomNodeList
}
export class DomMutationRecord {
    /* Properties of GXml.DomMutationRecord */
    readonly mtype: string
    readonly target: DomNode
    added_nodes: DomNodeList
    removed_nodes: DomNodeList
    readonly previous_sibling: DomNode
    readonly next_sibling: DomNode
    readonly attribute_name: string
    readonly attribute_namespace: string
    readonly old_value: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomMutationRecord */
    get_mtype(): string
    get_target(): DomNode
    get_added_nodes(): DomNodeList
    set_added_nodes(value: DomNodeList): void
    get_removed_nodes(): DomNodeList
    set_removed_nodes(value: DomNodeList): void
    get_previous_sibling(): DomNode | null
    get_next_sibling(): DomNode | null
    get_attribute_name(): string | null
    get_attribute_namespace(): string | null
    get_old_value(): string | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomMutationRecord */
    vfunc_get_mtype(): string
    vfunc_get_target(): DomNode
    vfunc_get_added_nodes(): DomNodeList
    vfunc_set_added_nodes(value: DomNodeList): void
    vfunc_get_removed_nodes(): DomNodeList
    vfunc_set_removed_nodes(value: DomNodeList): void
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_attribute_name(): string | null
    vfunc_get_attribute_namespace(): string | null
    vfunc_get_old_value(): string | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::mtype", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mtype", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::added-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::added-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::removed-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::removed-nodes", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attribute-name", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-name", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attribute-namespace", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-namespace", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::old-value", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::old-value", callback: (($obj: DomMutationRecord, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomMutationRecord_ConstructProps)
    _init (config?: DomMutationRecord_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DomNode_ConstructProps extends GObject.Object_ConstructProps {
    owner_document?: DomDocument
    node_value?: string
    text_content?: string
}
export class DomNode {
    /* Properties of GXml.DomNode */
    readonly node_type: DomNodeNodeType
    readonly node_name: string
    readonly base_uri: string
    owner_document: DomDocument
    readonly parent_node: DomNode
    readonly parent_element: DomElement
    readonly child_nodes: DomNodeList
    readonly first_child: DomNode
    readonly last_child: DomNode
    readonly previous_sibling: DomNode
    readonly next_sibling: DomNode
    node_value: string
    text_content: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomNode */
    has_child_nodes(): boolean
    normalize(): void
    is_equal_node(node?: DomNode | null): boolean
    compare_document_position(other: DomNode): DomNodeDocumentPosition
    contains(other?: DomNode | null): boolean
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    is_default_namespace(nspace?: string | null): boolean
    insert_before(node: DomNode, child?: DomNode | null): DomNode
    append_child(node: DomNode): DomNode
    replace_child(node: DomNode, child: DomNode): DomNode
    remove_child(child: DomNode): DomNode
    clone_node(deep: boolean): DomNode
    get_node_type(): DomNodeNodeType
    get_node_name(): string
    get_base_uri(): string | null
    get_owner_document(): DomDocument | null
    set_owner_document(value?: DomDocument | null): void
    get_parent_node(): DomNode | null
    get_parent_element(): DomElement | null
    get_child_nodes(): DomNodeList
    get_first_child(): DomNode | null
    get_last_child(): DomNode | null
    get_previous_sibling(): DomNode | null
    get_next_sibling(): DomNode | null
    get_node_value(): string | null
    set_node_value(value?: string | null): void
    get_text_content(): string | null
    set_text_content(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomNode */
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::node-type", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomNode_ConstructProps)
    _init (config?: DomNode_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static $gtype: GObject.Type
}
export interface DomRange_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomRange {
    /* Properties of GXml.DomRange */
    readonly start_container: DomNode
    readonly start_offset: number
    readonly end_container: DomNode
    readonly end_offset: number
    readonly collapsed: boolean
    readonly common_ancestor_container: DomNode
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomRange */
    set_start(node: DomNode, offset: number): void
    set_end(node: DomNode, offset: number): void
    set_start_before(node: DomNode): void
    set_start_after(node: DomNode): void
    set_end_before(node: DomNode): void
    set_end_after(node: DomNode): void
    collapse(to_start: boolean): void
    select_node(node: DomNode): void
    select_node_contents(node: DomNode): void
    compare_boundary_points(how: DomRangeBoundaryPoints, sourceRange: DomRange): number
    delete_contents(): void
    extract_contents(): DomDocumentFragment | null
    clone_contents(): DomDocumentFragment | null
    insert_node(node: DomNode): void
    surround_contents(newParent: DomNode): void
    clone_range(): DomRange
    detach(): void
    is_point_in_range(node: DomNode, offset: number): boolean
    compare_point(node: DomNode, offset: number): number
    intersects_node(node: DomNode): boolean
    to_string(): string
    get_start_container(): DomNode
    get_start_offset(): number
    get_end_container(): DomNode
    get_end_offset(): number
    get_collapsed(): boolean
    get_common_ancestor_container(): DomNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.DomRange */
    vfunc_set_start(node: DomNode, offset: number): void
    vfunc_set_end(node: DomNode, offset: number): void
    vfunc_set_start_before(node: DomNode): void
    vfunc_set_start_after(node: DomNode): void
    vfunc_set_end_before(node: DomNode): void
    vfunc_set_end_after(node: DomNode): void
    vfunc_collapse(to_start: boolean): void
    vfunc_select_node(node: DomNode): void
    vfunc_select_node_contents(node: DomNode): void
    vfunc_compare_boundary_points(how: DomRangeBoundaryPoints, sourceRange: DomRange): number
    vfunc_delete_contents(): void
    vfunc_extract_contents(): DomDocumentFragment | null
    vfunc_clone_contents(): DomDocumentFragment | null
    vfunc_insert_node(node: DomNode): void
    vfunc_surround_contents(newParent: DomNode): void
    vfunc_clone_range(): DomRange
    vfunc_detach(): void
    vfunc_is_point_in_range(node: DomNode, offset: number): boolean
    vfunc_compare_point(node: DomNode, offset: number): number
    vfunc_intersects_node(node: DomNode): boolean
    vfunc_to_string(): string
    vfunc_get_start_container(): DomNode
    vfunc_get_start_offset(): number
    vfunc_get_end_container(): DomNode
    vfunc_get_end_offset(): number
    vfunc_get_collapsed(): boolean
    vfunc_get_common_ancestor_container(): DomNode
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::start-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::end-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::end-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-offset", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::collapsed", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::collapsed", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::common-ancestor-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::common-ancestor-container", callback: (($obj: DomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomRange_ConstructProps)
    _init (config?: DomRange_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Element_ConstructProps extends GObject.Object_ConstructProps {
    content?: string
}
export class Element {
    /* Properties of GXml.Element */
    readonly tag_name: string
    content: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Element */
    normalize(): void
    set_attr(name: string, value: string): void
    get_attr(name: string): Node | null
    remove_attr(name: string): void
    remove_ns_attr(name: string, uri: string): void
    set_ns_attr(ns: string, name: string, value: string): void
    get_ns_attr(name: string, uri: string): Node | null
    get_tag_name(): string
    get_content(): string
    set_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Element */
    vfunc_normalize(): void
    vfunc_set_attr(name: string, value: string): void
    vfunc_get_attr(name: string): Node | null
    vfunc_remove_attr(name: string): void
    vfunc_remove_ns_attr(name: string, uri: string): void
    vfunc_set_ns_attr(ns: string, name: string, value: string): void
    vfunc_get_ns_attr(name: string, uri: string): Node | null
    vfunc_get_tag_name(): string
    vfunc_get_content(): string
    vfunc_set_content(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::tag-name", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: Element, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Element_ConstructProps)
    _init (config?: Element_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GomCollection_ConstructProps extends GObject.Object_ConstructProps {
    element?: GomElement
    items_type?: GObject.Type
}
export class GomCollection {
    /* Properties of GXml.GomCollection */
    readonly nodes_index: GLib.Queue
    element: GomElement
    readonly items_name: string
    items_type: GObject.Type
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomCollection */
    search(): void
    get_item(index: number): DomElement | null
    append(node: DomElement): void
    initialize(t: GObject.Type): void
    create_item(): GomElement | null
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomCollection */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::nodes-index", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomCollection_ConstructProps)
    _init (config?: GomCollection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface MappeableElement_ConstructProps extends GObject.Object_ConstructProps {
}
export class MappeableElement {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.MappeableElement */
    get_map_key(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.MappeableElement */
    vfunc_get_map_key(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MappeableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MappeableElement_ConstructProps)
    _init (config?: MappeableElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface MappeableElementPairKey_ConstructProps extends GObject.Object_ConstructProps {
}
export class MappeableElementPairKey {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.MappeableElementPairKey */
    get_map_primary_key(): string
    get_map_secondary_key(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.MappeableElementPairKey */
    vfunc_get_map_primary_key(): string
    vfunc_get_map_secondary_key(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MappeableElementPairKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MappeableElementPairKey_ConstructProps)
    _init (config?: MappeableElementPairKey_ConstructProps): void
    static $gtype: GObject.Type
}
export interface MappeableElementThreeKey_ConstructProps extends GObject.Object_ConstructProps {
}
export class MappeableElementThreeKey {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.MappeableElementThreeKey */
    get_map_pkey(): string
    get_map_skey(): string
    get_map_tkey(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.MappeableElementThreeKey */
    vfunc_get_map_pkey(): string
    vfunc_get_map_skey(): string
    vfunc_get_map_tkey(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: MappeableElementThreeKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: MappeableElementThreeKey_ConstructProps)
    _init (config?: MappeableElementThreeKey_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GomObject_ConstructProps extends GObject.Object_ConstructProps {
}
export class GomObject {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomObject */
    get_properties_list(): GObject.ParamSpec[]
    find_property_name(pname: string): GObject.ParamSpec | null
    find_object_property_name(pname: string): GObject.ParamSpec | null
    get_property_element_list(): GObject.ParamSpec[]
    get_property_string(prop: GObject.ParamSpec): string | null
    get_attribute(name: string): string | null
    set_attribute(name: string, val: string): boolean
    get_child(name: string): DomElement | null
    find_elements(name: string): DomElementList
    remove_attribute(name: string): boolean
    set_instance_property(name: string): boolean
    clean_property_elements(name: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomObject */
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_attribute(name: string): string | null
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_remove_attribute(name: string): boolean
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomObject_ConstructProps)
    _init (config?: GomObject_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GomProperty_ConstructProps extends GObject.Object_ConstructProps {
    value?: string
}
export class GomProperty {
    /* Properties of GXml.GomProperty */
    value: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomProperty, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomProperty, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomProperty, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomProperty, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomProperty_ConstructProps)
    _init (config?: GomProperty_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Namespace_ConstructProps extends GObject.Object_ConstructProps {
}
export class Namespace {
    /* Properties of GXml.Namespace */
    readonly uri: string
    readonly prefix: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Namespace */
    get_uri(): string | null
    get_prefix(): string | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Namespace */
    vfunc_get_uri(): string | null
    vfunc_get_prefix(): string | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::uri", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: Namespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Namespace_ConstructProps)
    _init (config?: Namespace_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Node_ConstructProps extends GObject.Object_ConstructProps {
    value?: string
}
export class Node {
    /* Properties of GXml.Node */
    readonly namespaces: Gee.List
    readonly children_nodes: Gee.BidirList
    readonly attrs: Gee.Map
    readonly name: string
    value: string
    readonly type_node: NodeType
    readonly document: Document
    readonly parent: Node
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Node */
    get(key: string): Node | null
    get_elements_by_property_value(property: string, value: string): ElementList
    get_elements_by_name(name: string): ElementList
    get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    to_string(): string
    set_namespace(uri: string, prefix?: string | null): boolean
    ns_prefix(): string
    ns_uri(): string
    get_namespaces(): Gee.List
    get_children_nodes(): Gee.BidirList
    get_attrs(): Gee.Map
    get_name(): string
    get_value(): string
    set_value(value: string): void
    get_type_node(): NodeType
    get_document(): Document
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Node */
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_to_string(): string
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_attrs(): Gee.Map
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_type_node(): NodeType
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::namespaces", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attrs", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: Node, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Node_ConstructProps)
    _init (config?: Node_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static $gtype: GObject.Type
}
export interface Notation_ConstructProps extends GObject.Object_ConstructProps {
}
export class Notation {
    /* Properties of GXml.Notation */
    readonly public_id: string
    readonly external_id: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Notation */
    get_public_id(): string | null
    get_external_id(): string | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Notation */
    vfunc_get_public_id(): string | null
    vfunc_get_external_id(): string | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::public-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::external-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::external-id", callback: (($obj: Notation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Notation_ConstructProps)
    _init (config?: Notation_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Entity_ConstructProps extends GObject.Object_ConstructProps {
}
export class Entity {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Entity, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Entity_ConstructProps)
    _init (config?: Entity_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Parser_ConstructProps extends GObject.Object_ConstructProps {
    backup?: boolean
    indent?: boolean
}
export class Parser {
    /* Properties of GXml.Parser */
    backup: boolean
    indent: boolean
    readonly node: DomNode
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Parser */
    write_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    write_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_stream(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null): void
    write_stream_async(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    read_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_file_finish(_res_: Gio.AsyncResult): void
    read_stream(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_stream_async(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_stream_finish(_res_: Gio.AsyncResult): void
    read_string(str: string, cancellable?: Gio.Cancellable | null): void
    read_string_async(str: string, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_string_finish(_res_: Gio.AsyncResult): void
    create_stream(cancellable?: Gio.Cancellable | null): Gio.InputStream
    create_stream_async(cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    read_child_nodes(parent: DomNode): void
    read_child_nodes_async(parent: DomNode, _callback_?: Gio.AsyncReadyCallback | null): void
    read_child_nodes_finish(_res_: Gio.AsyncResult): void
    read_child_node(parent: DomNode): boolean
    read_child_element(parent: DomNode): boolean
    read_element_property(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    add_element_collection(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    read_child_nodes_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_child_nodes_string(str: string, cancellable?: Gio.Cancellable | null): void
    read_unparsed(): string
    move_next_node(): boolean
    current_is_empty_element(): boolean
    current_is_element(): boolean
    current_is_document(): boolean
    current_node_name(): string
    create_element(parent: DomNode): DomElement | null
    read_element(element: DomElement): void
    get_backup(): boolean
    set_backup(value: boolean): void
    get_indent(): boolean
    set_indent(value: boolean): void
    get_node(): DomNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Parser */
    vfunc_write_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    vfunc_write_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_write_file_finish(_res_: Gio.AsyncResult): void
    vfunc_write_string(): string
    vfunc_write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_write_string_finish(_res_: Gio.AsyncResult): string
    vfunc_write_stream(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_write_stream_async(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_write_stream_finish(_res_: Gio.AsyncResult): void
    vfunc_read_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    vfunc_read_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_file_finish(_res_: Gio.AsyncResult): void
    vfunc_read_stream(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_read_stream_async(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_stream_finish(_res_: Gio.AsyncResult): void
    vfunc_read_string(str: string, cancellable?: Gio.Cancellable | null): void
    vfunc_read_string_async(str: string, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_string_finish(_res_: Gio.AsyncResult): void
    vfunc_create_stream(cancellable?: Gio.Cancellable | null): Gio.InputStream
    vfunc_create_stream_async(cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    vfunc_read_child_nodes(parent: DomNode): void
    vfunc_read_child_nodes_async(parent: DomNode, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_child_nodes_finish(_res_: Gio.AsyncResult): void
    vfunc_read_child_node(parent: DomNode): boolean
    vfunc_read_child_element(parent: DomNode): boolean
    vfunc_read_element_property(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    vfunc_add_element_collection(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    vfunc_read_child_nodes_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_read_child_nodes_string(str: string, cancellable?: Gio.Cancellable | null): void
    vfunc_read_unparsed(): string
    vfunc_move_next_node(): boolean
    vfunc_current_is_empty_element(): boolean
    vfunc_current_is_element(): boolean
    vfunc_current_is_document(): boolean
    vfunc_current_node_name(): string
    vfunc_create_element(parent: DomNode): DomElement | null
    vfunc_read_element(element: DomElement): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_node(): DomNode
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::backup", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indent", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node", callback: (($obj: Parser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Parser_ConstructProps)
    _init (config?: Parser_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ProcessingInstruction_ConstructProps extends GObject.Object_ConstructProps {
    data?: string
}
export class ProcessingInstruction {
    /* Properties of GXml.ProcessingInstruction */
    readonly target: string
    data: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.ProcessingInstruction */
    get_target(): string
    get_data(): string
    set_data(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.ProcessingInstruction */
    vfunc_get_target(): string
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::target", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: ProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ProcessingInstruction_ConstructProps)
    _init (config?: ProcessingInstruction_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdSchema_ConstructProps extends GObject.Object_ConstructProps {
    element_definitions?: IXsdListElements
    simple_type_definitions?: IXsdListSimpleTypes
    complex_type_definitions?: IXsdListComplexTypes
}
export class IXsdSchema {
    /* Properties of GXml.IXsdSchema */
    element_definitions: IXsdListElements
    simple_type_definitions: IXsdListSimpleTypes
    complex_type_definitions: IXsdListComplexTypes
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdSchema */
    get_element_definitions(): IXsdListElements
    set_element_definitions(value: IXsdListElements): void
    get_simple_type_definitions(): IXsdListSimpleTypes
    set_simple_type_definitions(value: IXsdListSimpleTypes): void
    get_complex_type_definitions(): IXsdListComplexTypes
    set_complex_type_definitions(value: IXsdListComplexTypes): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdSchema */
    vfunc_get_element_definitions(): IXsdListElements
    vfunc_set_element_definitions(value: IXsdListElements): void
    vfunc_get_simple_type_definitions(): IXsdListSimpleTypes
    vfunc_set_simple_type_definitions(value: IXsdListSimpleTypes): void
    vfunc_get_complex_type_definitions(): IXsdListComplexTypes
    vfunc_set_complex_type_definitions(value: IXsdListComplexTypes): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::element-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::simple-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::complex-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type-definitions", callback: (($obj: IXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdSchema_ConstructProps)
    _init (config?: IXsdSchema_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdBaseType_ConstructProps extends GObject.Object_ConstructProps {
    anotation?: IXsdAnnotation
}
export class IXsdBaseType {
    /* Properties of GXml.IXsdBaseType */
    anotation: IXsdAnnotation
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdBaseType */
    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdBaseType */
    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: IXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdBaseType_ConstructProps)
    _init (config?: IXsdBaseType_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdSimpleType_ConstructProps extends GObject.Object_ConstructProps {
    final?: string
    id?: string
    name?: string
    annotation?: IXsdAnnotation
    list?: IXsdTypeList
    union?: IXsdTypeUnion
    restriction?: IXsdTypeRestriction
}
export class IXsdSimpleType {
    /* Properties of GXml.IXsdSimpleType */
    final: string
    id: string
    name: string
    annotation: IXsdAnnotation
    list: IXsdTypeList
    union: IXsdTypeUnion
    restriction: IXsdTypeRestriction
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdSimpleType */
    get_final(): string
    set_final(value: string): void
    get_id(): string
    set_id(value: string): void
    get_name(): string
    set_name(value: string): void
    get_annotation(): IXsdAnnotation
    set_annotation(value: IXsdAnnotation): void
    get_list(): IXsdTypeList
    set_list(value: IXsdTypeList): void
    get_union(): IXsdTypeUnion
    set_union(value: IXsdTypeUnion): void
    get_restriction(): IXsdTypeRestriction
    set_restriction(value: IXsdTypeRestriction): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdSimpleType */
    vfunc_get_final(): string
    vfunc_set_final(value: string): void
    vfunc_get_id(): string
    vfunc_set_id(value: string): void
    vfunc_get_name(): string
    vfunc_set_name(value: string): void
    vfunc_get_annotation(): IXsdAnnotation
    vfunc_set_annotation(value: IXsdAnnotation): void
    vfunc_get_list(): IXsdTypeList
    vfunc_set_list(value: IXsdTypeList): void
    vfunc_get_union(): IXsdTypeUnion
    vfunc_set_union(value: IXsdTypeUnion): void
    vfunc_get_restriction(): IXsdTypeRestriction
    vfunc_set_restriction(value: IXsdTypeRestriction): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::final", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::annotation", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::list", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::list", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::union", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::union", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::restriction", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::restriction", callback: (($obj: IXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdSimpleType_ConstructProps)
    _init (config?: IXsdSimpleType_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeDef_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeDef {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeDef, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeDef_ConstructProps)
    _init (config?: IXsdTypeDef_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestriction_ConstructProps extends GObject.Object_ConstructProps {
    base?: string
    id?: string
    simple_type?: IXsdSimpleType
    enumerations?: IXsdListTypeRestrictionEnumerations
    white_spaces?: IXsdListTypeRestrictionWhiteSpaces
}
export class IXsdTypeRestriction {
    /* Properties of GXml.IXsdTypeRestriction */
    base: string
    id: string
    simple_type: IXsdSimpleType
    enumerations: IXsdListTypeRestrictionEnumerations
    white_spaces: IXsdListTypeRestrictionWhiteSpaces
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdTypeRestriction */
    get_base(): string
    set_base(value: string): void
    get_id(): string
    set_id(value: string): void
    get_simple_type(): IXsdSimpleType
    set_simple_type(value: IXsdSimpleType): void
    get_enumerations(): IXsdListTypeRestrictionEnumerations
    set_enumerations(value: IXsdListTypeRestrictionEnumerations): void
    get_white_spaces(): IXsdListTypeRestrictionWhiteSpaces
    set_white_spaces(value: IXsdListTypeRestrictionWhiteSpaces): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdTypeRestriction */
    vfunc_get_base(): string
    vfunc_set_base(value: string): void
    vfunc_get_id(): string
    vfunc_set_id(value: string): void
    vfunc_get_simple_type(): IXsdSimpleType
    vfunc_set_simple_type(value: IXsdSimpleType): void
    vfunc_get_enumerations(): IXsdListTypeRestrictionEnumerations
    vfunc_set_enumerations(value: IXsdListTypeRestrictionEnumerations): void
    vfunc_get_white_spaces(): IXsdListTypeRestrictionWhiteSpaces
    vfunc_set_white_spaces(value: IXsdListTypeRestrictionWhiteSpaces): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::base", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::simple-type", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enumerations", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enumerations", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::white-spaces", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::white-spaces", callback: (($obj: IXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestriction_ConstructProps)
    _init (config?: IXsdTypeRestriction_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeList_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeList {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeList_ConstructProps)
    _init (config?: IXsdTypeList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeUnion_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeUnion {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeUnion_ConstructProps)
    _init (config?: IXsdTypeUnion_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionDef_ConstructProps extends GObject.Object_ConstructProps {
    annotation?: IXsdAnnotation
}
export class IXsdTypeRestrictionDef {
    /* Properties of GXml.IXsdTypeRestrictionDef */
    annotation: IXsdAnnotation
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdTypeRestrictionDef */
    get_annotation(): IXsdAnnotation
    set_annotation(value: IXsdAnnotation): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdTypeRestrictionDef */
    vfunc_get_annotation(): IXsdAnnotation
    vfunc_set_annotation(value: IXsdAnnotation): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: IXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionDef_ConstructProps)
    _init (config?: IXsdTypeRestrictionDef_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionMinExclusive_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionMinExclusive {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionMinExclusive_ConstructProps)
    _init (config?: IXsdTypeRestrictionMinExclusive_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionMinInclusive_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionMinInclusive {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionMinInclusive_ConstructProps)
    _init (config?: IXsdTypeRestrictionMinInclusive_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionMaxExclusive_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionMaxExclusive {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionMaxExclusive_ConstructProps)
    _init (config?: IXsdTypeRestrictionMaxExclusive_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionMaxInclusive_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionMaxInclusive {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionMaxInclusive_ConstructProps)
    _init (config?: IXsdTypeRestrictionMaxInclusive_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionTotalDigits_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionTotalDigits {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionTotalDigits_ConstructProps)
    _init (config?: IXsdTypeRestrictionTotalDigits_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionFractionDigits_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionFractionDigits {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionFractionDigits_ConstructProps)
    _init (config?: IXsdTypeRestrictionFractionDigits_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionLength_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionLength {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionLength_ConstructProps)
    _init (config?: IXsdTypeRestrictionLength_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionMinLength_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionMinLength {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionMinLength_ConstructProps)
    _init (config?: IXsdTypeRestrictionMinLength_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionMaxLength_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionMaxLength {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionMaxLength_ConstructProps)
    _init (config?: IXsdTypeRestrictionMaxLength_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionEnumeration_ConstructProps extends GObject.Object_ConstructProps {
    id?: string
    value?: string
}
export class IXsdTypeRestrictionEnumeration {
    /* Properties of GXml.IXsdTypeRestrictionEnumeration */
    id: string
    value: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdTypeRestrictionEnumeration */
    get_id(): string
    set_id(value: string): void
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdTypeRestrictionEnumeration */
    vfunc_get_id(): string
    vfunc_set_id(value: string): void
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionEnumeration_ConstructProps)
    _init (config?: IXsdTypeRestrictionEnumeration_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionWhiteSpace_ConstructProps extends GObject.Object_ConstructProps {
    fixed?: boolean
    id?: string
    value?: string
}
export class IXsdTypeRestrictionWhiteSpace {
    /* Properties of GXml.IXsdTypeRestrictionWhiteSpace */
    fixed: boolean
    id: string
    value: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdTypeRestrictionWhiteSpace */
    get_fixed(): boolean
    set_fixed(value: boolean): void
    get_id(): string
    set_id(value: string): void
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdTypeRestrictionWhiteSpace */
    vfunc_get_fixed(): boolean
    vfunc_set_fixed(value: boolean): void
    vfunc_get_id(): string
    vfunc_set_id(value: string): void
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::fixed", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: IXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionWhiteSpace_ConstructProps)
    _init (config?: IXsdTypeRestrictionWhiteSpace_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionPattern_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionPattern {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionPattern_ConstructProps)
    _init (config?: IXsdTypeRestrictionPattern_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionAssertion_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionAssertion {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionAssertion_ConstructProps)
    _init (config?: IXsdTypeRestrictionAssertion_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdTypeRestrictionExplicitTimezone_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdTypeRestrictionExplicitTimezone {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdTypeRestrictionExplicitTimezone_ConstructProps)
    _init (config?: IXsdTypeRestrictionExplicitTimezone_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdComplexType_ConstructProps extends GObject.Object_ConstructProps {
    abstract?: boolean
    block?: string
    final?: string
    mixed?: boolean
    name?: string
    default_attributes_apply?: boolean
    content_type?: IXsdBaseContent
}
export class IXsdComplexType {
    /* Properties of GXml.IXsdComplexType */
    abstract: boolean
    block: string
    final: string
    mixed: boolean
    name: string
    default_attributes_apply: boolean
    content_type: IXsdBaseContent
    readonly type_attributes: IXsdListAttributes
    readonly group_attributes: IXsdListAttributesGroup
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdComplexType */
    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string
    set_block(value: string): void
    get_final(): string
    set_final(value: string): void
    get_mixed(): boolean
    set_mixed(value: boolean): void
    get_name(): string
    set_name(value: string): void
    get_default_attributes_apply(): boolean
    set_default_attributes_apply(value: boolean): void
    get_content_type(): IXsdBaseContent
    set_content_type(value: IXsdBaseContent): void
    get_type_attributes(): IXsdListAttributes
    get_group_attributes(): IXsdListAttributesGroup
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdComplexType */
    vfunc_get_abstract(): boolean
    vfunc_set_abstract(value: boolean): void
    vfunc_get_block(): string
    vfunc_set_block(value: string): void
    vfunc_get_final(): string
    vfunc_set_final(value: string): void
    vfunc_get_mixed(): boolean
    vfunc_set_mixed(value: boolean): void
    vfunc_get_name(): string
    vfunc_set_name(value: string): void
    vfunc_get_default_attributes_apply(): boolean
    vfunc_set_default_attributes_apply(value: boolean): void
    vfunc_get_content_type(): IXsdBaseContent
    vfunc_set_content_type(value: IXsdBaseContent): void
    vfunc_get_type_attributes(): IXsdListAttributes
    vfunc_get_group_attributes(): IXsdListAttributesGroup
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::abstract", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::block", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::final", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mixed", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mixed", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-attributes-apply", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-attributes-apply", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-type", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::group-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::group-attributes", callback: (($obj: IXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdComplexType_ConstructProps)
    _init (config?: IXsdComplexType_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdExtension_ConstructProps extends GObject.Object_ConstructProps {
    base?: string
}
export class IXsdExtension {
    /* Properties of GXml.IXsdExtension */
    base: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdExtension */
    get_base(): string
    set_base(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdExtension */
    vfunc_get_base(): string
    vfunc_set_base(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::base", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: IXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdExtension_ConstructProps)
    _init (config?: IXsdExtension_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdElement_ConstructProps extends GObject.Object_ConstructProps {
    abstract?: boolean
    block?: string
    "default"?: string
    final?: string
    fixed?: string
    form?: string
    id?: string
    maxOccurs?: string
    minOccurs?: string
    name?: string
    nillable?: boolean
    ref?: string
    substitution_group?: DomTokenList
    target_namespace?: string
    object_type?: string
    anotation?: IXsdAnnotation
    simple_type?: IXsdSimpleType
    complex_type?: IXsdComplexType
}
export class IXsdElement {
    /* Properties of GXml.IXsdElement */
    abstract: boolean
    block: string
    "default": string
    final: string
    fixed: string
    form: string
    id: string
    maxOccurs: string
    minOccurs: string
    name: string
    nillable: boolean
    ref: string
    substitution_group: DomTokenList
    target_namespace: string
    object_type: string
    anotation: IXsdAnnotation
    simple_type: IXsdSimpleType
    complex_type: IXsdComplexType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdElement */
    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string
    set_block(value: string): void
    get_default(): string
    set_default(value: string): void
    get_final(): string
    set_final(value: string): void
    get_fixed(): string
    set_fixed(value: string): void
    get_form(): string
    set_form(value: string): void
    get_id(): string | null
    set_id(value?: string | null): void
    get_maxOccurs(): string
    set_maxOccurs(value: string): void
    get_minOccurs(): string
    set_minOccurs(value: string): void
    get_name(): string
    set_name(value: string): void
    get_nillable(): boolean
    set_nillable(value: boolean): void
    get_ref(): string
    set_ref(value: string): void
    get_substitution_group(): DomTokenList
    set_substitution_group(value: DomTokenList): void
    get_target_namespace(): string
    set_target_namespace(value: string): void
    get_object_type(): string
    set_object_type(value: string): void
    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void
    get_simple_type(): IXsdSimpleType
    set_simple_type(value: IXsdSimpleType): void
    get_complex_type(): IXsdComplexType
    set_complex_type(value: IXsdComplexType): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdElement */
    vfunc_get_abstract(): boolean
    vfunc_set_abstract(value: boolean): void
    vfunc_get_block(): string
    vfunc_set_block(value: string): void
    vfunc_get_default(): string
    vfunc_set_default(value: string): void
    vfunc_get_final(): string
    vfunc_set_final(value: string): void
    vfunc_get_fixed(): string
    vfunc_set_fixed(value: string): void
    vfunc_get_form(): string
    vfunc_set_form(value: string): void
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_maxOccurs(): string
    vfunc_set_maxOccurs(value: string): void
    vfunc_get_minOccurs(): string
    vfunc_set_minOccurs(value: string): void
    vfunc_get_name(): string
    vfunc_set_name(value: string): void
    vfunc_get_nillable(): boolean
    vfunc_set_nillable(value: boolean): void
    vfunc_get_ref(): string
    vfunc_set_ref(value: string): void
    vfunc_get_substitution_group(): DomTokenList
    vfunc_set_substitution_group(value: DomTokenList): void
    vfunc_get_target_namespace(): string
    vfunc_set_target_namespace(value: string): void
    vfunc_get_object_type(): string
    vfunc_set_object_type(value: string): void
    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void
    vfunc_get_simple_type(): IXsdSimpleType
    vfunc_set_simple_type(value: IXsdSimpleType): void
    vfunc_get_complex_type(): IXsdComplexType
    vfunc_set_complex_type(value: IXsdComplexType): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::abstract", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::block", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::final", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fixed", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::maxOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::maxOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::minOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::minOccurs", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nillable", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nillable", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ref", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ref", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::substitution-group", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::substitution-group", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target-namespace", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target-namespace", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::object-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::anotation", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::simple-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::complex-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type", callback: (($obj: IXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdElement_ConstructProps)
    _init (config?: IXsdElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdAnnotation_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdAnnotation {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdAnnotation_ConstructProps)
    _init (config?: IXsdAnnotation_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdBaseContent_ConstructProps extends GObject.Object_ConstructProps {
    anotation?: IXsdAnnotation
}
export class IXsdBaseContent {
    /* Properties of GXml.IXsdBaseContent */
    anotation: IXsdAnnotation
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdBaseContent */
    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdBaseContent */
    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: IXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdBaseContent_ConstructProps)
    _init (config?: IXsdBaseContent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdSimpleContent_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdSimpleContent {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdSimpleContent_ConstructProps)
    _init (config?: IXsdSimpleContent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdComplexContent_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdComplexContent {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdComplexContent_ConstructProps)
    _init (config?: IXsdComplexContent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdOpenContent_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdOpenContent {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdOpenContent_ConstructProps)
    _init (config?: IXsdOpenContent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdBaseAttribute_ConstructProps extends GObject.Object_ConstructProps {
    anotation?: IXsdAnnotation
}
export class IXsdBaseAttribute {
    /* Properties of GXml.IXsdBaseAttribute */
    anotation: IXsdAnnotation
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdBaseAttribute */
    get_anotation(): IXsdAnnotation
    set_anotation(value: IXsdAnnotation): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdBaseAttribute */
    vfunc_get_anotation(): IXsdAnnotation
    vfunc_set_anotation(value: IXsdAnnotation): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: IXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: IXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdBaseAttribute_ConstructProps)
    _init (config?: IXsdBaseAttribute_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdAttribute_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdAttribute {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdAttribute_ConstructProps)
    _init (config?: IXsdAttribute_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdAttributeGroup_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdAttributeGroup {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdAttributeGroup_ConstructProps)
    _init (config?: IXsdAttributeGroup_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdList_ConstructProps extends GObject.Object_ConstructProps {
    element?: DomElement
    items_type?: GObject.Type
    items_name?: GObject.Type
}
export class IXsdList {
    /* Properties of GXml.IXsdList */
    element: DomElement
    items_type: GObject.Type
    items_name: GObject.Type
    readonly length: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.IXsdList */
    get_item(index: number): DomElement | null
    append(element: DomElement): void
    remove(index: number): void
    index_of(element: DomElement): number
    get_element(): DomElement
    set_element(value: DomElement): void
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_items_name(): GObject.Type
    set_items_name(value: GObject.Type): void
    get_length(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.IXsdList */
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(element: DomElement): void
    vfunc_remove(index: number): void
    vfunc_index_of(element: DomElement): number
    vfunc_get_element(): DomElement
    vfunc_set_element(value: DomElement): void
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_items_name(): GObject.Type
    vfunc_set_items_name(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::element", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: IXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdList_ConstructProps)
    _init (config?: IXsdList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdListElements_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdListElements {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdListElements_ConstructProps)
    _init (config?: IXsdListElements_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdListSimpleTypes_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdListSimpleTypes {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdListSimpleTypes_ConstructProps)
    _init (config?: IXsdListSimpleTypes_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdListComplexTypes_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdListComplexTypes {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdListComplexTypes_ConstructProps)
    _init (config?: IXsdListComplexTypes_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdListAttributes_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdListAttributes {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdListAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdListAttributes_ConstructProps)
    _init (config?: IXsdListAttributes_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdListAttributesGroup_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdListAttributesGroup {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdListAttributesGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdListAttributesGroup_ConstructProps)
    _init (config?: IXsdListAttributesGroup_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdListTypeRestrictionEnumerations_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdListTypeRestrictionEnumerations {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdListTypeRestrictionEnumerations_ConstructProps)
    _init (config?: IXsdListTypeRestrictionEnumerations_ConstructProps): void
    static $gtype: GObject.Type
}
export interface IXsdListTypeRestrictionWhiteSpaces_ConstructProps extends GObject.Object_ConstructProps {
}
export class IXsdListTypeRestrictionWhiteSpaces {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: IXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: IXsdListTypeRestrictionWhiteSpaces_ConstructProps)
    _init (config?: IXsdListTypeRestrictionWhiteSpaces_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Serializable_ConstructProps extends GObject.Object_ConstructProps {
    serialized_xml_node_value?: string
}
export class Serializable {
    /* Properties of GXml.Serializable */
    readonly unknown_serializable_properties: Gee.Map
    readonly unknown_serializable_nodes: Gee.Collection
    serialized_xml_node_value: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Serializable */
    get_enable_unknown_serializable_property(): boolean
    set_default_namespace(node: Node): boolean
    serialize_use_xml_node_value(): boolean
    node_name(): string
    property_use_nick(): boolean
    serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    find_property_spec(property_name: string): GObject.ParamSpec | null
    default_find_property_spec(property_name: string): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    default_list_serializable_properties(): GObject.ParamSpec[]
    get_unknown_serializable_properties(): Gee.Map
    get_unknown_serializable_nodes(): Gee.Collection
    get_serialized_xml_node_value(): string | null
    set_serialized_xml_node_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Serializable */
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_node_name(): string
    vfunc_property_use_nick(): boolean
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_default_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GXml.Serializable */
    connect(sigName: "serialize-unknown-property", callback: (($obj: Serializable, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property", callback: (($obj: Serializable, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "serialize-unknown-property-type", callback: (($obj: Serializable, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property-type", callback: (($obj: Serializable, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property-type", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property", callback: (($obj: Serializable, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property", callback: (($obj: Serializable, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property-type", callback: (($obj: Serializable, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property-type", callback: (($obj: Serializable, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property-type", node: Node, prop: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: Serializable, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Serializable_ConstructProps)
    _init (config?: Serializable_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static string_to_gvalue(str: string, dest: any): [ /* returnType */ boolean, /* dest */ any ]
    static gvalue_to_string(val: any): string
    static $gtype: GObject.Type
}
export interface SerializableCollection_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableCollection {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableCollection */
    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    is_collection(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.SerializableCollection */
    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_is_collection(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableCollection_ConstructProps)
    _init (config?: SerializableCollection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface SerializableMapDualKey_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableMapDualKey {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableMapDualKey */
    get_map_primary_key(): object | null
    get_map_secondary_key(): object | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.SerializableMapDualKey */
    vfunc_get_map_primary_key(): object | null
    vfunc_get_map_secondary_key(): object | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableMapDualKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableMapDualKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableMapDualKey_ConstructProps)
    _init (config?: SerializableMapDualKey_ConstructProps): void
    static $gtype: GObject.Type
}
export interface SerializableMapKey_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableMapKey {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableMapKey */
    get_map_key(): object | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.SerializableMapKey */
    vfunc_get_map_key(): object | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableMapKey, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableMapKey, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableMapKey_ConstructProps)
    _init (config?: SerializableMapKey_ConstructProps): void
    static $gtype: GObject.Type
}
export interface SerializableProperty_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableProperty {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableProperty */
    get_serializable_property_value(): string
    set_serializable_property_value(val?: string | null): void
    deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_serialize_property(element: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.SerializableProperty */
    vfunc_get_serializable_property_value(): string
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableProperty, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableProperty, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableProperty_ConstructProps)
    _init (config?: SerializableProperty_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Text_ConstructProps extends GObject.Object_ConstructProps {
    str?: string
}
export class Text {
    /* Properties of GXml.Text */
    str: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.Text */
    get_str(): string
    set_str(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.Text */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::str", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: Text, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Text_ConstructProps)
    _init (config?: Text_ConstructProps): void
    static $gtype: GObject.Type
}
export interface XPathContext_ConstructProps extends GObject.Object_ConstructProps {
}
export class XPathContext {
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.XPathContext */
    evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.XPathContext */
    vfunc_evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: XPathContext, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: XPathContext, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: XPathContext_ConstructProps)
    _init (config?: XPathContext_ConstructProps): void
    static $gtype: GObject.Type
}
export interface XPathObject_ConstructProps extends GObject.Object_ConstructProps {
}
export class XPathObject {
    /* Properties of GXml.XPathObject */
    readonly object_type: XPathObjectType
    readonly boolean_value: boolean
    readonly string_value: string
    readonly number_value: number
    readonly nodeset: DomHTMLCollection
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.XPathObject */
    get_object_type(): XPathObjectType
    get_boolean_value(): boolean
    get_string_value(): string
    get_number_value(): number
    get_nodeset(): DomHTMLCollection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.XPathObject */
    vfunc_get_object_type(): XPathObjectType
    vfunc_get_boolean_value(): boolean
    vfunc_get_string_value(): string
    vfunc_get_number_value(): number
    vfunc_get_nodeset(): DomHTMLCollection
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::object-type", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::boolean-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::boolean-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::string-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::string-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::number-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::number-value", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodeset", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodeset", callback: (($obj: XPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: XPathObject_ConstructProps)
    _init (config?: XPathObject_ConstructProps): void
    static $gtype: GObject.Type
}
export interface CssSelectorData_ConstructProps extends GObject.Object_ConstructProps {
    selector_type?: CssSelectorType
    data?: string
    value?: string
}
export class CssSelectorData {
    /* Properties of GXml.CssSelectorData */
    selector_type: CssSelectorType
    data: string
    value: string
    /* Fields of GXml.CssSelectorData */
    parent_instance: GObject.Object
    priv: CssSelectorDataPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.CssSelectorData */
    get_selector_type(): CssSelectorType
    set_selector_type(value: CssSelectorType): void
    get_data(): string
    set_data(value: string): void
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::selector-type", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selector-type", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: CssSelectorData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CssSelectorData_ConstructProps)
    _init (config?: CssSelectorData_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static with_values(t: CssSelectorType, data: string, val: string): CssSelectorData
    static new(): CssSelectorData
    static $gtype: GObject.Type
}
export interface CssSelectorParser_ConstructProps extends GObject.Object_ConstructProps {
}
export class CssSelectorParser {
    /* Properties of GXml.CssSelectorParser */
    readonly selectors: Gee.List
    /* Fields of GXml.CssSelectorParser */
    parent_instance: GObject.Object
    priv: CssSelectorParserPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.CssSelectorParser */
    parse(query: string): void
    match(element: DomElement): boolean
    get_selectors(): Gee.List
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: CssSelectorParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: CssSelectorParser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::selectors", callback: (($obj: CssSelectorParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selectors", callback: (($obj: CssSelectorParser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: CssSelectorParser_ConstructProps)
    _init (config?: CssSelectorParser_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): CssSelectorParser
    static $gtype: GObject.Type
}
export interface DomNodeFilter_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomNodeFilter {
    /* Fields of GXml.DomNodeFilter */
    parent_instance: GObject.Object
    priv: DomNodeFilterPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomNodeFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomNodeFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomNodeFilter_ConstructProps)
    _init (config?: DomNodeFilter_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DomNodeFilter
    static $gtype: GObject.Type
}
export interface DomElementList_ConstructProps extends Gee.ArrayList_ConstructProps {
}
export class DomElementList {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.DomHTMLCollection */
    readonly length: number
    /* Fields of GXml.DomElementList */
    parent_instance: Gee.ArrayList
    priv: DomElementListPrivate
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomHTMLCollection */
    get_element(index: number): DomElement | null
    to_array(): DomElement[]
    item(index: number): DomElement | null
    named_item(name: string): DomElement | null
    get_length(): number
    /* Virtual methods of GXml.DomElementList */
    vfunc_get_element(index: number): DomElement | null
    vfunc_to_array(): DomElement[]
    vfunc_to_array(): object[]
    vfunc_item(index: number): DomElement | null
    vfunc_named_item(name: string): DomElement | null
    vfunc_get_length(): number
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DomElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomElementList_ConstructProps)
    _init (config?: DomElementList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DomElementList
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): DomElementList
    static $gtype: GObject.Type
}
export interface DomEventInit_ConstructProps extends GObject.Object_ConstructProps {
    bubbles?: boolean
    cancelable?: boolean
}
export class DomEventInit {
    /* Properties of GXml.DomEventInit */
    bubbles: boolean
    cancelable: boolean
    /* Fields of GXml.DomEventInit */
    parent_instance: GObject.Object
    priv: DomEventInitPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomEventInit */
    get_bubbles(): boolean
    set_bubbles(value: boolean): void
    get_cancelable(): boolean
    set_cancelable(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::bubbles", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomEventInit_ConstructProps)
    _init (config?: DomEventInit_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DomEventInit
    static $gtype: GObject.Type
}
export interface DomCustomEventInit_ConstructProps extends DomEventInit_ConstructProps {
    detail?: any
}
export class DomCustomEventInit {
    /* Properties of GXml.DomCustomEventInit */
    detail: any
    /* Properties of GXml.DomEventInit */
    bubbles: boolean
    cancelable: boolean
    /* Fields of GXml.DomCustomEventInit */
    parent_instance: DomEventInit
    priv: DomCustomEventInitPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomCustomEventInit */
    get_detail(): /* result */ any
    set_detail(value: any): void
    /* Methods of GXml.DomEventInit */
    get_bubbles(): boolean
    set_bubbles(value: boolean): void
    get_cancelable(): boolean
    set_cancelable(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::detail", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bubbles", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DomCustomEventInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomCustomEventInit_ConstructProps)
    _init (config?: DomCustomEventInit_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DomCustomEventInit
    static $gtype: GObject.Type
}
export interface DomTimeStamp_ConstructProps extends GObject.Object_ConstructProps {
    time?: GLib.DateTime
}
export class DomTimeStamp {
    /* Properties of GXml.DomTimeStamp */
    time: GLib.DateTime
    /* Fields of GXml.DomTimeStamp */
    parent_instance: GObject.Object
    priv: DomTimeStampPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomTimeStamp */
    to_string(): string
    get_time(): GLib.DateTime
    set_time(value: GLib.DateTime): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomTimeStamp, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomTimeStamp, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::time", callback: (($obj: DomTimeStamp, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time", callback: (($obj: DomTimeStamp, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomTimeStamp_ConstructProps)
    _init (config?: DomTimeStamp_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DomTimeStamp
    static $gtype: GObject.Type
}
export interface DomMutationObserverInit_ConstructProps extends GObject.Object_ConstructProps {
    child_list?: boolean
    attributes?: boolean
    character_data?: boolean
    subtree?: boolean
    attribute_old_value?: boolean
    character_data_old_value?: boolean
    attribute_filter?: Gee.List
}
export class DomMutationObserverInit {
    /* Properties of GXml.DomMutationObserverInit */
    child_list: boolean
    attributes: boolean
    character_data: boolean
    subtree: boolean
    attribute_old_value: boolean
    character_data_old_value: boolean
    attribute_filter: Gee.List
    /* Fields of GXml.DomMutationObserverInit */
    parent_instance: GObject.Object
    priv: DomMutationObserverInitPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomMutationObserverInit */
    get_child_list(): boolean
    set_child_list(value: boolean): void
    get_attributes(): boolean
    set_attributes(value: boolean): void
    get_character_data(): boolean
    set_character_data(value: boolean): void
    get_subtree(): boolean
    set_subtree(value: boolean): void
    get_attribute_old_value(): boolean
    set_attribute_old_value(value: boolean): void
    get_character_data_old_value(): boolean
    set_character_data_old_value(value: boolean): void
    get_attribute_filter(): Gee.List
    set_attribute_filter(value: Gee.List): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child-list", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-list", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::character-data", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-data", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::subtree", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::subtree", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attribute-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::character-data-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-data-old-value", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attribute-filter", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-filter", callback: (($obj: DomMutationObserverInit, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomMutationObserverInit_ConstructProps)
    _init (config?: DomMutationObserverInit_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DomMutationObserverInit
    static $gtype: GObject.Type
}
export interface DomErrorName_ConstructProps extends GObject.Object_ConstructProps {
}
export class DomErrorName {
    /* Fields of GXml.DomErrorName */
    parent_instance: GObject.Object
    priv: DomErrorNamePrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.DomErrorName */
    get_name(error_code: number): string
    get_code(error_name: string): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DomErrorName, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DomErrorName, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DomErrorName_ConstructProps)
    _init (config?: DomErrorName_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): DomErrorName
    static $gtype: GObject.Type
}
export interface ElementList_ConstructProps extends Gee.ArrayList_ConstructProps {
}
export class ElementList {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.DomHTMLCollection */
    readonly length: number
    /* Fields of GXml.ElementList */
    parent_instance: Gee.ArrayList
    priv: ElementListPrivate
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomHTMLCollection */
    get_element(index: number): DomElement | null
    to_array(): DomElement[]
    item(index: number): DomElement | null
    named_item(name: string): DomElement | null
    get_length(): number
    /* Virtual methods of GXml.ElementList */
    vfunc_get_element(index: number): DomElement | null
    vfunc_to_array(): DomElement[]
    vfunc_to_array(): object[]
    vfunc_item(index: number): DomElement | null
    vfunc_named_item(name: string): DomElement | null
    vfunc_get_length(): number
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: ElementList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ElementList_ConstructProps)
    _init (config?: ElementList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ElementList
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): ElementList
    static $gtype: GObject.Type
}
export interface GHtmlDocument_ConstructProps extends GDocument_ConstructProps {
}
export class GHtmlDocument {
    /* Properties of GXml.GHtmlDocument */
    readonly default_options: number
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Fields of GXml.GHtmlDocument */
    parent_instance: GDocument
    priv: GHtmlDocumentPrivate
    /* Fields of GXml.GDocument */
    doc: object | null
    _buffer: any
    _implementation: GImplementation
    _url: string
    _origin: string
    _compat_mode: string
    _character_set: string
    _content_type: string
    _constructor: DomEvent
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GDocument */
    libxml_to_string(): string
    save(cancellable?: Gio.Cancellable | null): boolean
    save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomHtmlDocument */
    read_from_string(str: string): void
    read_from_string_tolerant(str: string): void
    to_html(): string
    /* Virtual methods of GXml.GHtmlDocument */
    vfunc_read_from_string(str: string): void
    vfunc_read_from_string_tolerant(str: string): void
    vfunc_to_html(): string
    vfunc_create_element(name: string): Node
    vfunc_create_element(local_name: string): DomElement
    vfunc_create_comment(text: string): Node
    vfunc_create_comment(data: string): DomComment
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    /* Virtual methods of GXml.GDocument */
    vfunc_save(cancellable?: Gio.Cancellable | null): boolean
    vfunc_save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    vfunc_create_element(name: string): Node
    vfunc_create_element(local_name: string): DomElement
    vfunc_create_text(text: string): Node
    vfunc_create_comment(text: string): Node
    vfunc_create_comment(data: string): DomComment
    vfunc_create_cdata(text: string): Node
    vfunc_create_pi(target: string, data: string): Node
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_ns_top(): boolean
    vfunc_set_ns_top(value: boolean): void
    vfunc_get_prefix_default_ns(): boolean
    vfunc_set_prefix_default_ns(value: boolean): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_root(): Node
    vfunc_get_file(): Gio.File
    vfunc_set_file(value: Gio.File): void
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_element_by_id(element_id: string): DomElement | null
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(classNames: string): DomHTMLCollection
    vfunc_create_element_ns(namespace: string | null, qualified_name: string): DomElement
    vfunc_create_document_fragment(): DomDocumentFragment
    vfunc_create_text_node(data: string): DomText
    vfunc_create_processing_instruction(target: string, data: string): DomProcessingInstruction
    vfunc_import_node(node: DomNode, deep: boolean): DomNode
    vfunc_adopt_node(node: DomNode): DomNode
    vfunc_create_event(interface: string): DomEvent
    vfunc_create_range(): DomRange
    vfunc_create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    vfunc_create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    vfunc_get_implementation(): DomImplementation
    vfunc_get_url(): string
    vfunc_get_document_uri(): string
    vfunc_get_origin(): string
    vfunc_get_compat_mode(): string
    vfunc_get_character_set(): string
    vfunc_get_content_type(): string
    vfunc_get_doctype(): DomDocumentType | null
    vfunc_get_document_element(): DomElement | null
    vfunc_evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::default-options", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-options", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attrs", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GHtmlDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GHtmlDocument_ConstructProps)
    _init (config?: GHtmlDocument_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static from_path(path: string, options: number): GHtmlDocument
    static from_uri(uri: string, options: number): GHtmlDocument
    static from_file(file: Gio.File, options: number, cancel?: Gio.Cancellable | null): GHtmlDocument
    static from_string(html: string, options: number): GHtmlDocument
    static from_string_context(html: string, options: number): GHtmlDocument
    static from_string_doc(html: string, options: number): GHtmlDocument
    static new(): GHtmlDocument
    static get_default_options(): number
    static $gtype: GObject.Type
}
export interface GomAttr_ConstructProps extends GomNode_ConstructProps {
    value?: string
}
export class GomAttr {
    /* Properties of GXml.DomAttr */
    readonly namespace_uri: string
    readonly prefix: string
    readonly local_name: string
    readonly name: string
    value: string
    readonly specified: boolean
    /* Fields of GXml.GomAttr */
    parent_instance: GomNode
    priv: GomAttrPrivate
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomAttr */
    get_namespace_uri(): string | null
    get_prefix(): string | null
    get_local_name(): string
    get_name(): string
    get_value(): string
    set_value(value: string): void
    get_specified(): boolean
    /* Virtual methods of GXml.GomAttr */
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_specified(): boolean
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::namespace-uri", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::specified", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: GomAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomAttr_ConstructProps)
    _init (config?: GomAttr_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(element: DomElement, name: string, value: string): GomAttr
    static new(): GomAttr
    static namespace(element: DomElement, namespace_uri: string, prefix: string | null, name: string, value: string): GomAttr
    static $gtype: GObject.Type
}
export interface BaseCollection_ConstructProps extends GObject.Object_ConstructProps {
    items_type?: GObject.Type
    element?: GomElement
}
export class BaseCollection {
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Fields of GXml.BaseCollection */
    parent_instance: GObject.Object
    priv: BaseCollectionPrivate
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::items-name", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: BaseCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: BaseCollection_ConstructProps)
    _init (config?: BaseCollection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GomArrayList_ConstructProps extends BaseCollection_ConstructProps {
    element?: GomElement
    items_type?: GObject.Type
}
export class GomArrayList {
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Properties of GXml.GomCollection */
    readonly length: number
    /* Fields of GXml.GomArrayList */
    parent_instance: BaseCollection
    priv: GomArrayListPrivate
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.GomCollection */
    get_item(index: number): DomElement | null
    initialize(t: GObject.Type): void
    create_item(): GomElement | null
    get_length(): number
    /* Virtual methods of GXml.GomArrayList */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::items-name", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomArrayList_ConstructProps)
    _init (config?: GomArrayList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomArrayList
    static $gtype: GObject.Type
}
export interface GomHashMap_ConstructProps extends BaseCollection_ConstructProps {
    attribute_key?: string
    element?: GomElement
    items_type?: GObject.Type
}
export class GomHashMap {
    /* Properties of GXml.GomHashMap */
    attribute_key: string
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Properties of GXml.GomCollection */
    readonly length: number
    /* Fields of GXml.GomHashMap */
    parent_instance: BaseCollection
    priv: GomHashMapPrivate
    _hashtable: Gee.HashMap
    _attribute_key: string
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomHashMap */
    initialize_element_with_key(element: GomElement, items_type: GObject.Type, attribute_key: string): void
    initialize_with_key(items_type: GObject.Type, attribute_key: string): void
    get(key: string): DomElement | null
    has_key(key: string): boolean
    get_keys(): string[]
    get_attribute_key(): string
    set_attribute_key(value: string): void
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.GomCollection */
    get_item(index: number): DomElement | null
    initialize(t: GObject.Type): void
    create_item(): GomElement | null
    get_length(): number
    /* Virtual methods of GXml.GomHashMap */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attribute-key", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-key", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomHashMap_ConstructProps)
    _init (config?: GomHashMap_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomHashMap
    static $gtype: GObject.Type
}
export interface GomHashPairedMap_ConstructProps extends BaseCollection_ConstructProps {
    attribute_primary_key?: string
    attribute_secondary_key?: string
    element?: GomElement
    items_type?: GObject.Type
}
export class GomHashPairedMap {
    /* Properties of GXml.GomHashPairedMap */
    attribute_primary_key: string
    attribute_secondary_key: string
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Properties of GXml.GomCollection */
    readonly length: number
    /* Fields of GXml.GomHashPairedMap */
    parent_instance: BaseCollection
    priv: GomHashPairedMapPrivate
    _hashtable: Gee.HashMap
    _attribute_primary_key: string
    _attribute_secondary_key: string
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomHashPairedMap */
    initialize_element_with_keys(element: GomElement, items_type: GObject.Type, attribute_primary_key: string, attribute_secondary_key: string): void
    initialize_with_keys(items_type: GObject.Type, attribute_primary_key: string, attribute_secondary_key: string): void
    get(primary_key: string, secondary_key: string): DomElement | null
    has_primary_key(key: string): boolean
    has_secondary_key(pkey: string, key: string): boolean
    get_primary_keys(): string[]
    get_secondary_keys(pkey: string): string[]
    get_attribute_primary_key(): string
    set_attribute_primary_key(value: string): void
    get_attribute_secondary_key(): string
    set_attribute_secondary_key(value: string): void
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.GomCollection */
    get_item(index: number): DomElement | null
    initialize(t: GObject.Type): void
    create_item(): GomElement | null
    get_length(): number
    /* Virtual methods of GXml.GomHashPairedMap */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomHashPairedMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomHashPairedMap_ConstructProps)
    _init (config?: GomHashPairedMap_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomHashPairedMap
    static $gtype: GObject.Type
}
export interface GomHashThreeMap_ConstructProps extends BaseCollection_ConstructProps {
    attribute_primary_key?: string
    attribute_secondary_key?: string
    attribute_third_key?: string
    element?: GomElement
    items_type?: GObject.Type
}
export class GomHashThreeMap {
    /* Properties of GXml.GomHashThreeMap */
    attribute_primary_key: string
    attribute_secondary_key: string
    attribute_third_key: string
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Properties of GXml.GomCollection */
    readonly length: number
    /* Fields of GXml.GomHashThreeMap */
    parent_instance: BaseCollection
    priv: GomHashThreeMapPrivate
    _hashtable: Gee.HashMap
    _attribute_primary_key: string
    _attribute_secondary_key: string
    _attribute_third_key: string
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomHashThreeMap */
    initialize_element_with_keys(element: GomElement, items_type: GObject.Type, attribute_primary_key: string, attribute_secondary_key: string, attribute_third_key: string): void
    initialize_with_keys(items_type: GObject.Type, attribute_primary_key: string, attribute_secondary_key: string, attribute_third_key: string): void
    get(primary_key: string, secondary_key: string, third_key: string): DomElement | null
    has_primary_key(key: string): boolean
    has_secondary_key(pkey: string, key: string): boolean
    has_third_key(pkey: string, skey: string, key: string): boolean
    get_primary_keys(): string[]
    get_secondary_keys(pkey: string): string[]
    get_third_keys(pkey: string, skey: string): string[]
    get_attribute_primary_key(): string
    set_attribute_primary_key(value: string): void
    get_attribute_secondary_key(): string
    set_attribute_secondary_key(value: string): void
    get_attribute_third_key(): string
    set_attribute_third_key(value: string): void
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.GomCollection */
    get_item(index: number): DomElement | null
    initialize(t: GObject.Type): void
    create_item(): GomElement | null
    get_length(): number
    /* Virtual methods of GXml.GomHashThreeMap */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-primary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-secondary-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attribute-third-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attribute-third-key", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomHashThreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomHashThreeMap_ConstructProps)
    _init (config?: GomHashThreeMap_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomHashThreeMap
    static $gtype: GObject.Type
}
export interface GomDocument_ConstructProps extends GomNode_ConstructProps {
}
export class GomDocument {
    /* Properties of GXml.DomParentNode */
    readonly children: DomHTMLCollection
    readonly first_element_child: DomElement
    readonly last_element_child: DomElement
    readonly child_element_count: number
    /* Properties of GXml.DomDocument */
    readonly implementation: DomImplementation
    readonly url: string
    readonly document_uri: string
    readonly origin: string
    readonly compat_mode: string
    readonly character_set: string
    readonly content_type: string
    readonly doctype: DomDocumentType
    readonly document_element: DomElement
    /* Fields of GXml.GomDocument */
    parent_instance: GomNode
    priv: GomDocumentPrivate
    _implementation: DomImplementation
    _url: string
    _origin: string
    _compat_mode: string
    _character_set: string
    _content_type: string
    _constructor: DomEvent
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomDocument */
    write_file(file: Gio.File): void
    write_file_async(file: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    read_from_file(file: Gio.File): void
    read_from_file_async(file: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomParentNode */
    query_selector(selectors: string): DomElement | null
    query_selector_all(selectors: string): DomNodeList
    get_elements_by_property_value(property: string, value: string): DomElementList
    get_children(): DomHTMLCollection
    get_first_element_child(): DomElement | null
    get_last_element_child(): DomElement | null
    get_child_element_count(): number
    /* Methods of GXml.DomNonElementParentNode */
    get_element_by_id(element_id: string): DomElement | null
    /* Methods of GXml.DomDocument */
    get_elements_by_tag_name(local_name: string): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    get_elements_by_class_name(classNames: string): DomHTMLCollection
    create_element(local_name: string): DomElement
    create_element_ns(namespace: string | null, qualified_name: string): DomElement
    create_document_fragment(): DomDocumentFragment
    create_text_node(data: string): DomText
    create_comment(data: string): DomComment
    create_processing_instruction(target: string, data: string): DomProcessingInstruction
    import_node(node: DomNode, deep: boolean): DomNode
    adopt_node(node: DomNode): DomNode
    create_event(interface: string): DomEvent
    create_range(): DomRange
    create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    get_implementation(): DomImplementation
    get_url(): string
    get_document_uri(): string
    get_origin(): string
    get_compat_mode(): string
    get_character_set(): string
    get_content_type(): string
    get_doctype(): DomDocumentType | null
    get_document_element(): DomElement | null
    /* Virtual methods of GXml.GomDocument */
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_element_by_id(element_id: string): DomElement | null
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(classNames: string): DomHTMLCollection
    vfunc_create_element(local_name: string): DomElement
    vfunc_create_element_ns(namespace: string | null, qualified_name: string): DomElement
    vfunc_create_document_fragment(): DomDocumentFragment
    vfunc_create_text_node(data: string): DomText
    vfunc_create_comment(data: string): DomComment
    vfunc_create_processing_instruction(target: string, data: string): DomProcessingInstruction
    vfunc_import_node(node: DomNode, deep: boolean): DomNode
    vfunc_adopt_node(node: DomNode): DomNode
    vfunc_create_event(interface: string): DomEvent
    vfunc_create_range(): DomRange
    vfunc_create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    vfunc_create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    vfunc_get_implementation(): DomImplementation
    vfunc_get_url(): string
    vfunc_get_document_uri(): string
    vfunc_get_origin(): string
    vfunc_get_compat_mode(): string
    vfunc_get_character_set(): string
    vfunc_get_content_type(): string
    vfunc_get_doctype(): DomDocumentType | null
    vfunc_get_document_element(): DomElement | null
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::children", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::implementation", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::url", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-uri", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::origin", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::compat-mode", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::character-set", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-type", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::doctype", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-element", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: GomDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomDocument_ConstructProps)
    _init (config?: GomDocument_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomDocument
    static from_path(path: string): GomDocument
    static from_uri(uri: string): GomDocument
    static from_file(file: Gio.File): GomDocument
    static from_stream(stream: Gio.InputStream): GomDocument
    static from_string(str: string): GomDocument
    static $gtype: GObject.Type
}
export interface GomImplementation_ConstructProps extends GObject.Object_ConstructProps {
}
export class GomImplementation {
    /* Fields of GXml.GomImplementation */
    parent_instance: GObject.Object
    priv: GomImplementationPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomImplementation */
    create_document_type(qualified_name: string, public_id: string, system_id: string): DomDocumentType
    create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    create_html_document(title: string): Document
    has_feature(): boolean
    /* Virtual methods of GXml.GomImplementation */
    vfunc_create_document_type(qualified_name: string, public_id: string, system_id: string): DomDocumentType
    vfunc_create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    vfunc_create_html_document(title: string): Document
    vfunc_has_feature(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomImplementation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomImplementation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomImplementation_ConstructProps)
    _init (config?: GomImplementation_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomImplementation
    static $gtype: GObject.Type
}
export interface GomDocumentType_ConstructProps extends GomNode_ConstructProps {
}
export class GomDocumentType {
    /* Properties of GXml.DomDocumentType */
    readonly name: string
    readonly public_id: string
    readonly system_id: string
    /* Fields of GXml.GomDocumentType */
    parent_instance: GomNode
    priv: GomDocumentTypePrivate
    _name: string
    _public_id: string
    _system_id: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomChildNode */
    remove(): void
    /* Methods of GXml.DomDocumentType */
    get_name(): string
    get_public_id(): string
    get_system_id(): string
    /* Virtual methods of GXml.GomDocumentType */
    vfunc_remove(): void
    vfunc_get_name(): string
    vfunc_get_public_id(): string
    vfunc_get_system_id(): string
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::public-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::system-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: GomDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomDocumentType_ConstructProps)
    _init (config?: GomDocumentType_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: DomDocument, name: string, public_id?: string | null, system_id?: string | null): GomDocumentType
    static new(): GomDocumentType
    static with_name(doc: DomDocument, name: string): GomDocumentType
    static with_ids(doc: DomDocument, name: string, public_id: string, system_id: string): GomDocumentType
    static $gtype: GObject.Type
}
export interface GomDocumentFragment_ConstructProps extends GomNode_ConstructProps {
}
export class GomDocumentFragment {
    /* Properties of GXml.DomParentNode */
    readonly children: DomHTMLCollection
    readonly first_element_child: DomElement
    readonly last_element_child: DomElement
    readonly child_element_count: number
    /* Fields of GXml.GomDocumentFragment */
    parent_instance: GomNode
    priv: GomDocumentFragmentPrivate
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomParentNode */
    query_selector(selectors: string): DomElement | null
    query_selector_all(selectors: string): DomNodeList
    get_elements_by_property_value(property: string, value: string): DomElementList
    get_children(): DomHTMLCollection
    get_first_element_child(): DomElement | null
    get_last_element_child(): DomElement | null
    get_child_element_count(): number
    /* Methods of GXml.DomNonElementParentNode */
    get_element_by_id(element_id: string): DomElement | null
    /* Virtual methods of GXml.GomDocumentFragment */
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_element_by_id(element_id: string): DomElement | null
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::children", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GomDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomDocumentFragment_ConstructProps)
    _init (config?: GomDocumentFragment_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: DomDocument): GomDocumentFragment
    static new(): GomDocumentFragment
    static $gtype: GObject.Type
}
export interface GomElement_ConstructProps extends GomNode_ConstructProps {
    parse_children?: boolean
    unparsed?: string
    id?: string
    class_name?: string
}
export class GomElement {
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Properties of GXml.DomNonDocumentTypeChildNode */
    readonly previous_element_sibling: DomElement
    readonly next_element_sibling: DomElement
    /* Properties of GXml.DomParentNode */
    readonly children: DomHTMLCollection
    readonly first_element_child: DomElement
    readonly last_element_child: DomElement
    readonly child_element_count: number
    /* Properties of GXml.DomElement */
    readonly namespace_uri: string
    readonly prefix: string
    readonly local_name: string
    readonly tag_name: string
    id: string
    class_name: string
    readonly class_list: DomTokenList
    readonly attributes: DomNamedNodeMap
    /* Fields of GXml.GomElement */
    parent_instance: GomNode
    priv: GomElementPrivate
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomChildNode */
    remove(): void
    /* Methods of GXml.DomNonDocumentTypeChildNode */
    get_previous_element_sibling(): DomElement | null
    get_next_element_sibling(): DomElement | null
    /* Methods of GXml.DomParentNode */
    query_selector(selectors: string): DomElement | null
    query_selector_all(selectors: string): DomNodeList
    get_elements_by_property_value(property: string, value: string): DomElementList
    get_children(): DomHTMLCollection
    get_first_element_child(): DomElement | null
    get_last_element_child(): DomElement | null
    get_child_element_count(): number
    /* Methods of GXml.DomElement */
    get_attribute(name: string): string | null
    get_attribute_ns(namespace: string | null, local_name: string): string | null
    set_attribute(name: string, value: string): void
    set_attribute_ns(namespace: string | null, name: string, value: string): void
    remove_attribute(name: string): void
    remove_attribute_ns(namespace: string | null, local_name: string): void
    has_attribute(name: string): boolean
    has_attribute_ns(namespace: string | null, local_name: string): boolean
    get_elements_by_tag_name(local_name: string): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    get_elements_by_class_name(class_names: string): DomHTMLCollection
    get_namespace_uri(): string | null
    get_prefix(): string | null
    get_local_name(): string
    get_tag_name(): string
    get_id(): string | null
    set_id(value?: string | null): void
    get_class_name(): string | null
    set_class_name(value?: string | null): void
    get_class_list(): DomTokenList
    get_attributes(): DomNamedNodeMap
    /* Methods of GXml.GomObject */
    get_properties_list(): GObject.ParamSpec[]
    find_property_name(pname: string): GObject.ParamSpec | null
    find_object_property_name(pname: string): GObject.ParamSpec | null
    get_property_element_list(): GObject.ParamSpec[]
    get_property_string(prop: GObject.ParamSpec): string | null
    set_attribute(name: string, val: string): boolean
    get_child(name: string): DomElement | null
    find_elements(name: string): DomElementList
    remove_attribute(name: string): boolean
    set_instance_property(name: string): boolean
    clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: GomElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomElement_ConstructProps)
    _init (config?: GomElement_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomElement
    static $gtype: GObject.Type
}
export interface GomElementAttributes_ConstructProps extends Gee.HashMap_ConstructProps {
}
export class GomElementAttributes {
    /* Properties of Gee.AbstractMap */
    readonly size: number
    readonly read_only: boolean
    readonly keys: Gee.Set
    readonly values: Gee.Collection
    readonly entries: Gee.Set
    readonly read_only_view: Gee.Map
    /* Properties of GXml.DomNamedNodeMap */
    readonly length: number
    /* Fields of GXml.GomElementAttributes */
    parent_instance: Gee.HashMap
    priv: GomElementAttributesPrivate
    _element: GomElement
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.HashMap */
    get_key_hash_func(): [ /* returnType */ Gee.HashDataFunc, /* result_target */ object | null ]
    get_key_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    get_value_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractMap */
    has_key(key?: object | null): boolean
    has(key?: object | null, value?: object | null): boolean
    get(key?: object | null): object | null
    set(key?: object | null, value?: object | null): void
    unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    map_iterator(): Gee.MapIterator
    clear(): void
    foreach(f: Gee.ForallFunc): boolean
    stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_size(): number
    get_read_only(): boolean
    get_keys(): Gee.Set
    get_values(): Gee.Collection
    get_entries(): Gee.Set
    get_read_only_view(): Gee.Map
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNamedNodeMap */
    item(index: number): DomNode | null
    get_named_item(name: string): DomNode | null
    set_named_item(node: DomNode): DomNode | null
    remove_named_item(name: string): DomNode | null
    remove_named_item_ns(namespace_uri: string, localName: string): DomNode | null
    get_named_item_ns(namespace_uri: string, local_name: string): DomNode | null
    set_named_item_ns(node: DomNode): DomNode | null
    get_length(): number
    /* Virtual methods of GXml.GomElementAttributes */
    vfunc_item(index: number): DomNode | null
    vfunc_get_named_item(name: string): DomNode | null
    vfunc_set_named_item(node: DomNode): DomNode | null
    vfunc_remove_named_item(name: string): DomNode | null
    vfunc_remove_named_item_ns(namespace_uri: string, localName: string): DomNode | null
    vfunc_get_named_item_ns(namespace_uri: string, local_name: string): DomNode | null
    vfunc_set_named_item_ns(node: DomNode): DomNode | null
    vfunc_get_length(): number
    /* Virtual methods of Gee.AbstractMap */
    vfunc_has_key(key?: object | null): boolean
    vfunc_has(key?: object | null, value?: object | null): boolean
    vfunc_get(key?: object | null): object | null
    vfunc_set(key?: object | null, value?: object | null): void
    vfunc_unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    vfunc_map_iterator(): Gee.MapIterator
    vfunc_clear(): void
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_keys(): Gee.Set
    vfunc_get_values(): Gee.Collection
    vfunc_get_entries(): Gee.Set
    vfunc_get_read_only_view(): Gee.Map
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_iterator(): Gee.Iterator
    vfunc_set_all(map: Gee.Map): void
    vfunc_unset_all(map: Gee.Map): boolean
    vfunc_has_all(map: Gee.Map): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::size", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::keys", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::values", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::entries", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only-view", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomElementAttributes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomElementAttributes_ConstructProps)
    _init (config?: GomElementAttributes_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(element: GomElement): GomElementAttributes
    static new(k_type: GObject.Type, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.Type, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify, key_hash_func: Gee.HashDataFunc | null, key_equal_func: Gee.EqualDataFunc | null, value_equal_func: Gee.EqualDataFunc | null): GomElementAttributes
    static $gtype: GObject.Type
}
export interface GomNode_ConstructProps extends GObject.Object_ConstructProps {
    owner_document?: DomDocument
    node_value?: string
    text_content?: string
}
export class GomNode {
    /* Properties of GXml.DomNode */
    readonly node_type: DomNodeNodeType
    readonly node_name: string
    readonly base_uri: string
    owner_document: DomDocument
    readonly parent_node: DomNode
    readonly parent_element: DomElement
    readonly child_nodes: DomNodeList
    readonly first_child: DomNode
    readonly last_child: DomNode
    readonly previous_sibling: DomNode
    readonly next_sibling: DomNode
    node_value: string
    text_content: string
    /* Fields of GXml.GomNode */
    parent_instance: GObject.Object
    priv: GomNodePrivate
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomEventTarget */
    add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    dispatch_event(event: DomEvent): boolean
    /* Methods of GXml.DomNode */
    has_child_nodes(): boolean
    normalize(): void
    is_equal_node(node?: DomNode | null): boolean
    compare_document_position(other: DomNode): DomNodeDocumentPosition
    contains(other?: DomNode | null): boolean
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    is_default_namespace(nspace?: string | null): boolean
    insert_before(node: DomNode, child?: DomNode | null): DomNode
    append_child(node: DomNode): DomNode
    replace_child(node: DomNode, child: DomNode): DomNode
    remove_child(child: DomNode): DomNode
    clone_node(deep: boolean): DomNode
    get_node_type(): DomNodeNodeType
    get_node_name(): string
    get_base_uri(): string | null
    get_owner_document(): DomDocument | null
    set_owner_document(value?: DomDocument | null): void
    get_parent_node(): DomNode | null
    get_parent_element(): DomElement | null
    get_child_nodes(): DomNodeList
    get_first_child(): DomNode | null
    get_last_child(): DomNode | null
    get_previous_sibling(): DomNode | null
    get_next_sibling(): DomNode | null
    get_node_value(): string | null
    set_node_value(value?: string | null): void
    get_text_content(): string | null
    set_text_content(value?: string | null): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::node-type", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GomNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomNode_ConstructProps)
    _init (config?: GomNode_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomNode
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static $gtype: GObject.Type
}
export interface GomNodeList_ConstructProps extends Gee.ArrayList_ConstructProps {
}
export class GomNodeList {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.DomNodeList */
    readonly length: number
    /* Fields of GXml.GomNodeList */
    parent_instance: Gee.ArrayList
    priv: GomNodeListPrivate
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNodeList */
    item(index: number): DomNode | null
    get_length(): number
    /* Virtual methods of GXml.GomNodeList */
    vfunc_item(index: number): DomNode | null
    vfunc_get_length(): number
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomNodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomNodeList_ConstructProps)
    _init (config?: GomNodeList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomNodeList
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): GomNodeList
    static $gtype: GObject.Type
}
export interface GomBaseProperty_ConstructProps extends GObject.Object_ConstructProps {
    value?: string
}
export class GomBaseProperty {
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomBaseProperty */
    parent_instance: GObject.Object
    priv: GomBasePropertyPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomBaseProperty, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomBaseProperty, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomBaseProperty, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomBaseProperty, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomBaseProperty_ConstructProps)
    _init (config?: GomBaseProperty_ConstructProps): void
    static $gtype: GObject.Type
}
export interface GomString_ConstructProps extends GomBaseProperty_ConstructProps {
}
export class GomString {
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomString */
    parent_instance: GomBaseProperty
    priv: GomStringPrivate
    _value: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomString, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomString_ConstructProps)
    _init (config?: GomString_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomString
    static $gtype: GObject.Type
}
export interface GomArrayString_ConstructProps extends GomBaseProperty_ConstructProps {
}
export class GomArrayString {
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomArrayString */
    parent_instance: GomBaseProperty
    priv: GomArrayStringPrivate
    _value: string
    _values: string[]
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomArrayString */
    get_values(): string[]
    initialize_strings(strs: string[]): void
    is_valid_value(): boolean
    select(index: number): void
    search(str: string): boolean
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomArrayString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomArrayString, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomArrayString_ConstructProps)
    _init (config?: GomArrayString_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomArrayString
    static $gtype: GObject.Type
}
export interface GomXsdArrayString_ConstructProps extends GomArrayString_ConstructProps {
    simple_type?: string
    source?: Gio.File
}
export class GomXsdArrayString {
    /* Properties of GXml.GomXsdArrayString */
    simple_type: string
    source: Gio.File
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomXsdArrayString */
    parent_instance: GomArrayString
    priv: GomXsdArrayStringPrivate
    _source: Gio.File
    _simple_type: string
    /* Fields of GXml.GomArrayString */
    _value: string
    _values: string[]
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdArrayString */
    load(): void
    get_simple_type(): string
    set_simple_type(value: string): void
    get_source(): Gio.File
    set_source(value: Gio.File): void
    /* Methods of GXml.GomArrayString */
    get_values(): string[]
    initialize_strings(strs: string[]): void
    is_valid_value(): boolean
    select(index: number): void
    search(str: string): boolean
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::simple-type", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::source", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::source", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdArrayString, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdArrayString_ConstructProps)
    _init (config?: GomXsdArrayString_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdArrayString
    static $gtype: GObject.Type
}
export interface GomDouble_ConstructProps extends GomBaseProperty_ConstructProps {
    decimals?: number
}
export class GomDouble {
    /* Properties of GXml.GomDouble */
    decimals: number
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomDouble */
    parent_instance: GomBaseProperty
    priv: GomDoublePrivate
    _value: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomDouble */
    get_double(): number
    set_double(value: number): void
    get_decimals(): number
    set_decimals(value: number): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::decimals", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decimals", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomDouble, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomDouble_ConstructProps)
    _init (config?: GomDouble_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomDouble
    static $gtype: GObject.Type
}
export interface GomFloat_ConstructProps extends GomDouble_ConstructProps {
}
export class GomFloat {
    /* Properties of GXml.GomDouble */
    decimals: number
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomFloat */
    parent_instance: GomDouble
    priv: GomFloatPrivate
    /* Fields of GXml.GomDouble */
    _value: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomFloat */
    get_float(): number
    set_float(value: number): void
    /* Methods of GXml.GomDouble */
    get_double(): number
    set_double(value: number): void
    get_decimals(): number
    set_decimals(value: number): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::decimals", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::decimals", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomFloat, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomFloat_ConstructProps)
    _init (config?: GomFloat_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomFloat
    static $gtype: GObject.Type
}
export interface GomInt_ConstructProps extends GomBaseProperty_ConstructProps {
}
export class GomInt {
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomInt */
    parent_instance: GomBaseProperty
    priv: GomIntPrivate
    _value: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomInt */
    get_integer(): number
    set_integer(value: number): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomInt, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomInt, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomInt, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomInt, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomInt_ConstructProps)
    _init (config?: GomInt_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomInt
    static $gtype: GObject.Type
}
export interface GomBoolean_ConstructProps extends GomBaseProperty_ConstructProps {
}
export class GomBoolean {
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomBoolean */
    parent_instance: GomBaseProperty
    priv: GomBooleanPrivate
    _value: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomBoolean */
    get_boolean(): boolean
    set_boolean(value: boolean): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomBoolean, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomBoolean, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomBoolean, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomBoolean, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomBoolean_ConstructProps)
    _init (config?: GomBoolean_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomBoolean
    static $gtype: GObject.Type
}
export interface GomEnum_ConstructProps extends GomBaseProperty_ConstructProps {
    enum_type?: GObject.Type
}
export class GomEnum {
    /* Properties of GXml.GomEnum */
    enum_type: GObject.Type
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomEnum */
    parent_instance: GomBaseProperty
    priv: GomEnumPrivate
    _value: number
    _enum_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomEnum */
    initialize_enum(enum_type: GObject.Type): void
    get_enum(): number
    set_enum(value: number): void
    get_enum_type(): GObject.Type
    set_enum_type(value: GObject.Type): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::enum-type", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enum-type", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomEnum, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomEnum_ConstructProps)
    _init (config?: GomEnum_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomEnum
    static $gtype: GObject.Type
}
export interface GomDate_ConstructProps extends GomBaseProperty_ConstructProps {
}
export class GomDate {
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomDate */
    parent_instance: GomBaseProperty
    priv: GomDatePrivate
    _value: GLib.Date
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomDate */
    get_date(): /* result */ GLib.Date
    set_date(date: GLib.Date): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomDate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomDate, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomDate, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomDate, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomDate_ConstructProps)
    _init (config?: GomDate_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomDate
    static $gtype: GObject.Type
}
export interface GomDateTime_ConstructProps extends GomBaseProperty_ConstructProps {
    format?: string
}
export class GomDateTime {
    /* Properties of GXml.GomDateTime */
    format: string
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomDateTime */
    parent_instance: GomBaseProperty
    priv: GomDateTimePrivate
    _value: GLib.DateTime
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomDateTime */
    get_datetime(): GLib.DateTime
    set_datetime(dt: GLib.DateTime): void
    get_format(): string
    set_format(value: string): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::format", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::format", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomDateTime, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomDateTime_ConstructProps)
    _init (config?: GomDateTime_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomDateTime
    static $gtype: GObject.Type
}
export interface GomXsdSchema_ConstructProps extends GomElement_ConstructProps {
    element_definitions?: GomXsdListElements
    simple_type_definitions?: GomXsdListSimpleTypes
    complex_type_definitions?: GomXsdListComplexTypes
}
export class GomXsdSchema {
    /* Properties of GXml.GomXsdSchema */
    element_definitions: GomXsdListElements
    simple_type_definitions: GomXsdListSimpleTypes
    complex_type_definitions: GomXsdListComplexTypes
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdSchema */
    parent_instance: GomElement
    priv: GomXsdSchemaPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdSchema */
    get_element_definitions(): GomXsdListElements
    set_element_definitions(value: GomXsdListElements): void
    get_simple_type_definitions(): GomXsdListSimpleTypes
    set_simple_type_definitions(value: GomXsdListSimpleTypes): void
    get_complex_type_definitions(): GomXsdListComplexTypes
    set_complex_type_definitions(value: GomXsdListComplexTypes): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdSchema */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::element-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::simple-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::complex-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type-definitions", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdSchema, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdSchema_ConstructProps)
    _init (config?: GomXsdSchema_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdSchema
    static $gtype: GObject.Type
}
export interface GomXsdSimpleType_ConstructProps extends GomElement_ConstructProps {
    final?: string
    name?: string
    annotation?: GomXsdAnnotation
    list?: GomXsdTypeList
    union?: GomXsdTypeUnion
    restriction?: GomXsdTypeRestriction
}
export class GomXsdSimpleType {
    /* Properties of GXml.GomXsdSimpleType */
    final: string
    name: string
    annotation: GomXsdAnnotation
    list: GomXsdTypeList
    union: GomXsdTypeUnion
    restriction: GomXsdTypeRestriction
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdSimpleType */
    parent_instance: GomElement
    priv: GomXsdSimpleTypePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdSimpleType */
    get_final(): string
    set_final(value: string): void
    get_name(): string
    set_name(value: string): void
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    get_list(): GomXsdTypeList
    set_list(value: GomXsdTypeList): void
    get_union(): GomXsdTypeUnion
    set_union(value: GomXsdTypeUnion): void
    get_restriction(): GomXsdTypeRestriction
    set_restriction(value: GomXsdTypeRestriction): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdSimpleType */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::final", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::list", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::list", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::union", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::union", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::restriction", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::restriction", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdSimpleType_ConstructProps)
    _init (config?: GomXsdSimpleType_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdSimpleType
    static $gtype: GObject.Type
}
export interface GomXsdTypeDefinition_ConstructProps extends GomElement_ConstructProps {
    annotation?: GomXsdAnnotation
}
export class GomXsdTypeDefinition {
    /* Properties of GXml.GomXsdTypeDefinition */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeDefinition */
    parent_instance: GomElement
    priv: GomXsdTypeDefinitionPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeDefinition */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeDefinition */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeDefinition, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeDefinition_ConstructProps)
    _init (config?: GomXsdTypeDefinition_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeDefinition
    static $gtype: GObject.Type
}
export interface GomXsdTypeList_ConstructProps extends GomXsdTypeDefinition_ConstructProps {
}
export class GomXsdTypeList {
    /* Properties of GXml.GomXsdTypeDefinition */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeList */
    parent_instance: GomXsdTypeDefinition
    priv: GomXsdTypeListPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeDefinition */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeList */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeDefinition */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeList_ConstructProps)
    _init (config?: GomXsdTypeList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeList
    static $gtype: GObject.Type
}
export interface GomXsdTypeUnion_ConstructProps extends GomXsdTypeDefinition_ConstructProps {
}
export class GomXsdTypeUnion {
    /* Properties of GXml.GomXsdTypeDefinition */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeUnion */
    parent_instance: GomXsdTypeDefinition
    priv: GomXsdTypeUnionPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeDefinition */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeUnion */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeDefinition */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeUnion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeUnion_ConstructProps)
    _init (config?: GomXsdTypeUnion_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeUnion
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestriction_ConstructProps extends GomXsdTypeDefinition_ConstructProps {
    base?: string
    simple_type?: GomXsdSimpleType
    enumerations?: GomXsdListTypeRestrictionEnumerations
    white_spaces?: GomXsdListTypeRestrictionWhiteSpaces
}
export class GomXsdTypeRestriction {
    /* Properties of GXml.GomXsdTypeRestriction */
    base: string
    simple_type: GomXsdSimpleType
    enumerations: GomXsdListTypeRestrictionEnumerations
    white_spaces: GomXsdListTypeRestrictionWhiteSpaces
    /* Properties of GXml.GomXsdTypeDefinition */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestriction */
    parent_instance: GomXsdTypeDefinition
    priv: GomXsdTypeRestrictionPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestriction */
    get_base(): string
    set_base(value: string): void
    get_simple_type(): GomXsdSimpleType
    set_simple_type(value: GomXsdSimpleType): void
    get_enumerations(): GomXsdListTypeRestrictionEnumerations
    set_enumerations(value: GomXsdListTypeRestrictionEnumerations): void
    get_white_spaces(): GomXsdListTypeRestrictionWhiteSpaces
    set_white_spaces(value: GomXsdListTypeRestrictionWhiteSpaces): void
    /* Methods of GXml.GomXsdTypeDefinition */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestriction */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeDefinition */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::base", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::simple-type", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enumerations", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enumerations", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::white-spaces", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::white-spaces", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestriction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestriction_ConstructProps)
    _init (config?: GomXsdTypeRestriction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestriction
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionDef_ConstructProps extends GomElement_ConstructProps {
    annotation?: GomXsdAnnotation
}
export class GomXsdTypeRestrictionDef {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionDef */
    parent_instance: GomElement
    priv: GomXsdTypeRestrictionDefPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionDef, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionDef_ConstructProps)
    _init (config?: GomXsdTypeRestrictionDef_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionDef
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionMinExclusive_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionMinExclusive {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionMinExclusive */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionMinExclusivePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionMinExclusive */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinExclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionMinExclusive_ConstructProps)
    _init (config?: GomXsdTypeRestrictionMinExclusive_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionMinExclusive
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionMinInclusive_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionMinInclusive {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionMinInclusive */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionMinInclusivePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionMinInclusive */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinInclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionMinInclusive_ConstructProps)
    _init (config?: GomXsdTypeRestrictionMinInclusive_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionMinInclusive
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionMaxExclusive_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionMaxExclusive {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionMaxExclusive */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionMaxExclusivePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionMaxExclusive */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxExclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionMaxExclusive_ConstructProps)
    _init (config?: GomXsdTypeRestrictionMaxExclusive_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionMaxExclusive
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionMaxInclusive_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionMaxInclusive {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionMaxInclusive */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionMaxInclusivePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionMaxInclusive */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxInclusive, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionMaxInclusive_ConstructProps)
    _init (config?: GomXsdTypeRestrictionMaxInclusive_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionMaxInclusive
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionTotalDigits_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionTotalDigits {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionTotalDigits */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionTotalDigitsPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionTotalDigits */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionTotalDigits, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionTotalDigits_ConstructProps)
    _init (config?: GomXsdTypeRestrictionTotalDigits_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionTotalDigits
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionFractionDigits_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionFractionDigits {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionFractionDigits */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionFractionDigitsPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionFractionDigits */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionFractionDigits, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionFractionDigits_ConstructProps)
    _init (config?: GomXsdTypeRestrictionFractionDigits_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionFractionDigits
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionLength_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionLength {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionLength */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionLengthPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionLength */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionLength_ConstructProps)
    _init (config?: GomXsdTypeRestrictionLength_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionLength
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionMinLength_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionMinLength {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionMinLength */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionMinLengthPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionMinLength */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMinLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionMinLength_ConstructProps)
    _init (config?: GomXsdTypeRestrictionMinLength_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionMinLength
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionMaxLength_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionMaxLength {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionMaxLength */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionMaxLengthPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionMaxLength */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionMaxLength, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionMaxLength_ConstructProps)
    _init (config?: GomXsdTypeRestrictionMaxLength_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionMaxLength
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionEnumeration_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
    value?: string
}
export class GomXsdTypeRestrictionEnumeration {
    /* Properties of GXml.GomXsdTypeRestrictionEnumeration */
    value: string
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionEnumeration */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionEnumerationPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionEnumeration */
    get_value(): string
    set_value(value: string): void
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionEnumeration */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionEnumeration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionEnumeration_ConstructProps)
    _init (config?: GomXsdTypeRestrictionEnumeration_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionEnumeration
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionWhiteSpace_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
    fixed?: GomXsdTypeRestrictionWhiteSpaceFixed
    value?: string
}
export class GomXsdTypeRestrictionWhiteSpace {
    /* Properties of GXml.GomXsdTypeRestrictionWhiteSpace */
    fixed: GomXsdTypeRestrictionWhiteSpaceFixed
    value: string
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionWhiteSpace */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionWhiteSpacePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionWhiteSpace */
    get_fixed(): GomXsdTypeRestrictionWhiteSpaceFixed
    set_fixed(value: GomXsdTypeRestrictionWhiteSpaceFixed): void
    get_value(): string
    set_value(value: string): void
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionWhiteSpace */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::fixed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionWhiteSpace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionWhiteSpace_ConstructProps)
    _init (config?: GomXsdTypeRestrictionWhiteSpace_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionWhiteSpace
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionWhiteSpaceFixed_ConstructProps extends GomBoolean_ConstructProps {
}
export class GomXsdTypeRestrictionWhiteSpaceFixed {
    /* Properties of GXml.GomBaseProperty */
    value: string
    /* Fields of GXml.GomXsdTypeRestrictionWhiteSpaceFixed */
    parent_instance: GomBoolean
    priv: GomXsdTypeRestrictionWhiteSpaceFixedPrivate
    /* Fields of GXml.GomBoolean */
    _value: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomBoolean */
    get_boolean(): boolean
    set_boolean(value: boolean): void
    /* Methods of GXml.GomBaseProperty */
    validate_value(val: string): boolean
    get_value(): string | null
    set_value(value?: string | null): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomBaseProperty */
    vfunc_validate_value(val: string): boolean
    vfunc_get_value(): string | null
    vfunc_set_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionWhiteSpaceFixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionWhiteSpaceFixed, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpaceFixed, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GomXsdTypeRestrictionWhiteSpaceFixed, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionWhiteSpaceFixed_ConstructProps)
    _init (config?: GomXsdTypeRestrictionWhiteSpaceFixed_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionWhiteSpaceFixed
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionPattern_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionPattern {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionPattern */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionPatternPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionPattern */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionPattern, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionPattern_ConstructProps)
    _init (config?: GomXsdTypeRestrictionPattern_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionPattern
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionAssertion_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionAssertion {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionAssertion */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionAssertionPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionAssertion */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionAssertion, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionAssertion_ConstructProps)
    _init (config?: GomXsdTypeRestrictionAssertion_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionAssertion
    static $gtype: GObject.Type
}
export interface GomXsdTypeRestrictionExplicitTimezone_ConstructProps extends GomXsdTypeRestrictionDef_ConstructProps {
}
export class GomXsdTypeRestrictionExplicitTimezone {
    /* Properties of GXml.GomXsdTypeRestrictionDef */
    annotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdTypeRestrictionExplicitTimezone */
    parent_instance: GomXsdTypeRestrictionDef
    priv: GomXsdTypeRestrictionExplicitTimezonePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdTypeRestrictionDef */
    get_annotation(): GomXsdAnnotation
    set_annotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdTypeRestrictionExplicitTimezone */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdTypeRestrictionDef */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::annotation", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdTypeRestrictionExplicitTimezone, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdTypeRestrictionExplicitTimezone_ConstructProps)
    _init (config?: GomXsdTypeRestrictionExplicitTimezone_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdTypeRestrictionExplicitTimezone
    static $gtype: GObject.Type
}
export interface GomXsdComplexType_ConstructProps extends GomXsdBaseType_ConstructProps {
    abstract?: boolean
    block?: string
    final?: string
    mixed?: boolean
    name?: string
    default_attributes_apply?: boolean
    content_type?: GomXsdBaseContent
}
export class GomXsdComplexType {
    /* Properties of GXml.GomXsdComplexType */
    abstract: boolean
    block: string
    final: string
    mixed: boolean
    name: string
    default_attributes_apply: boolean
    content_type: GomXsdBaseContent
    readonly type_attributes: GomXsdList
    readonly group_attributes: GomXsdList
    /* Properties of GXml.GomXsdBaseType */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdComplexType */
    parent_instance: GomXsdBaseType
    priv: GomXsdComplexTypePrivate
    _type_attributes: GomXsdList
    _group_attributes: GomXsdList
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdComplexType */
    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string
    set_block(value: string): void
    get_final(): string
    set_final(value: string): void
    get_mixed(): boolean
    set_mixed(value: boolean): void
    get_name(): string
    set_name(value: string): void
    get_default_attributes_apply(): boolean
    set_default_attributes_apply(value: boolean): void
    get_content_type(): GomXsdBaseContent
    set_content_type(value: GomXsdBaseContent): void
    get_type_attributes(): GomXsdList
    get_group_attributes(): GomXsdList
    /* Methods of GXml.GomXsdBaseType */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdComplexType */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdBaseType */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::abstract", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::block", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::final", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mixed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mixed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-attributes-apply", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-attributes-apply", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-type", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::group-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::group-attributes", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdComplexType_ConstructProps)
    _init (config?: GomXsdComplexType_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdComplexType
    static $gtype: GObject.Type
}
export interface GomXsdExtension_ConstructProps extends GomElement_ConstructProps {
    base?: string
}
export class GomXsdExtension {
    /* Properties of GXml.GomXsdExtension */
    base: string
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdExtension */
    parent_instance: GomElement
    priv: GomXsdExtensionPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdExtension */
    get_base(): string
    set_base(value: string): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdExtension */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::base", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdExtension, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdExtension_ConstructProps)
    _init (config?: GomXsdExtension_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdExtension
    static $gtype: GObject.Type
}
export interface GomXsdElement_ConstructProps extends GomElement_ConstructProps {
    abstract?: boolean
    block?: string
    "default"?: string
    final?: string
    fixed?: string
    form?: string
    max_occurs?: string
    min_occurs?: string
    name?: string
    nillable?: boolean
    ref?: string
    substitution_group?: DomTokenList
    target_namespace?: string
    object_type?: string
    anotation?: GomXsdAnnotation
    simple_type?: GomXsdSimpleType
    complex_type?: GomXsdComplexType
}
export class GomXsdElement {
    /* Properties of GXml.GomXsdElement */
    abstract: boolean
    block: string
    "default": string
    final: string
    fixed: string
    form: string
    max_occurs: string
    min_occurs: string
    name: string
    nillable: boolean
    ref: string
    substitution_group: DomTokenList
    target_namespace: string
    object_type: string
    anotation: GomXsdAnnotation
    simple_type: GomXsdSimpleType
    complex_type: GomXsdComplexType
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdElement */
    parent_instance: GomElement
    priv: GomXsdElementPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdElement */
    get_abstract(): boolean
    set_abstract(value: boolean): void
    get_block(): string
    set_block(value: string): void
    get_default(): string
    set_default(value: string): void
    get_final(): string
    set_final(value: string): void
    get_fixed(): string
    set_fixed(value: string): void
    get_form(): string
    set_form(value: string): void
    get_max_occurs(): string
    set_max_occurs(value: string): void
    get_min_occurs(): string
    set_min_occurs(value: string): void
    get_name(): string
    set_name(value: string): void
    get_nillable(): boolean
    set_nillable(value: boolean): void
    get_ref(): string
    set_ref(value: string): void
    get_substitution_group(): DomTokenList
    set_substitution_group(value: DomTokenList): void
    get_target_namespace(): string
    set_target_namespace(value: string): void
    get_object_type(): string
    set_object_type(value: string): void
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    get_simple_type(): GomXsdSimpleType
    set_simple_type(value: GomXsdSimpleType): void
    get_complex_type(): GomXsdComplexType
    set_complex_type(value: GomXsdComplexType): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdElement */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::abstract", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abstract", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::block", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::block", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::final", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::final", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fixed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fixed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min-occurs", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nillable", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nillable", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ref", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ref", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::substitution-group", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::substitution-group", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target-namespace", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target-namespace", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::object-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::simple-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::simple-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::complex-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complex-type", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdElement_ConstructProps)
    _init (config?: GomXsdElement_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdElement
    static $gtype: GObject.Type
}
export interface GomXsdAnnotation_ConstructProps extends GomElement_ConstructProps {
}
export class GomXsdAnnotation {
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdAnnotation */
    parent_instance: GomElement
    priv: GomXsdAnnotationPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdAnnotation */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdAnnotation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdAnnotation_ConstructProps)
    _init (config?: GomXsdAnnotation_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdAnnotation
    static $gtype: GObject.Type
}
export interface GomXsdBaseType_ConstructProps extends GomElement_ConstructProps {
    anotation?: GomXsdAnnotation
}
export class GomXsdBaseType {
    /* Properties of GXml.GomXsdBaseType */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdBaseType */
    parent_instance: GomElement
    priv: GomXsdBaseTypePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseType */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdBaseType */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdBaseType_ConstructProps)
    _init (config?: GomXsdBaseType_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdBaseType
    static $gtype: GObject.Type
}
export interface GomXsdBaseContent_ConstructProps extends GomElement_ConstructProps {
    anotation?: GomXsdAnnotation
}
export class GomXsdBaseContent {
    /* Properties of GXml.GomXsdBaseContent */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdBaseContent */
    parent_instance: GomElement
    priv: GomXsdBaseContentPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseContent */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdBaseContent */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdBaseContent_ConstructProps)
    _init (config?: GomXsdBaseContent_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdBaseContent
    static $gtype: GObject.Type
}
export interface GomXsdSimpleContent_ConstructProps extends GomXsdBaseContent_ConstructProps {
}
export class GomXsdSimpleContent {
    /* Properties of GXml.GomXsdBaseContent */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdSimpleContent */
    parent_instance: GomXsdBaseContent
    priv: GomXsdSimpleContentPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseContent */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdSimpleContent */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdBaseContent */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdSimpleContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdSimpleContent_ConstructProps)
    _init (config?: GomXsdSimpleContent_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdSimpleContent
    static $gtype: GObject.Type
}
export interface GomXsdComplexContent_ConstructProps extends GomXsdBaseContent_ConstructProps {
}
export class GomXsdComplexContent {
    /* Properties of GXml.GomXsdBaseContent */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdComplexContent */
    parent_instance: GomXsdBaseContent
    priv: GomXsdComplexContentPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseContent */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdComplexContent */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdBaseContent */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdComplexContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdComplexContent_ConstructProps)
    _init (config?: GomXsdComplexContent_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdComplexContent
    static $gtype: GObject.Type
}
export interface GomXsdOpenContent_ConstructProps extends GomXsdBaseContent_ConstructProps {
}
export class GomXsdOpenContent {
    /* Properties of GXml.GomXsdBaseContent */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdOpenContent */
    parent_instance: GomXsdBaseContent
    priv: GomXsdOpenContentPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseContent */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdOpenContent */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdBaseContent */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdOpenContent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdOpenContent_ConstructProps)
    _init (config?: GomXsdOpenContent_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdOpenContent
    static $gtype: GObject.Type
}
export interface GomXsdBaseAttribute_ConstructProps extends GomElement_ConstructProps {
    anotation?: GomXsdAnnotation
}
export class GomXsdBaseAttribute {
    /* Properties of GXml.GomXsdBaseAttribute */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdBaseAttribute */
    parent_instance: GomElement
    priv: GomXsdBaseAttributePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseAttribute */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdBaseAttribute */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdBaseAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdBaseAttribute_ConstructProps)
    _init (config?: GomXsdBaseAttribute_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdBaseAttribute
    static $gtype: GObject.Type
}
export interface GomXsdAttribute_ConstructProps extends GomXsdBaseAttribute_ConstructProps {
}
export class GomXsdAttribute {
    /* Properties of GXml.GomXsdBaseAttribute */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdAttribute */
    parent_instance: GomXsdBaseAttribute
    priv: GomXsdAttributePrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseAttribute */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdAttribute */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdBaseAttribute */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdAttribute_ConstructProps)
    _init (config?: GomXsdAttribute_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdAttribute
    static $gtype: GObject.Type
}
export interface GomXsdAttributeGroup_ConstructProps extends GomXsdBaseAttribute_ConstructProps {
}
export class GomXsdAttributeGroup {
    /* Properties of GXml.GomXsdBaseAttribute */
    anotation: GomXsdAnnotation
    /* Properties of GXml.GomElement */
    parse_children: boolean
    unparsed: string
    /* Fields of GXml.GomXsdAttributeGroup */
    parent_instance: GomXsdBaseAttribute
    priv: GomXsdAttributeGroupPrivate
    /* Fields of GXml.GomElement */
    _attributes: GomElementAttributes
    _namespace_uri: string
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdBaseAttribute */
    get_anotation(): GomXsdAnnotation
    set_anotation(value: GomXsdAnnotation): void
    /* Methods of GXml.GomElement */
    read_from_uri(uri: string): void
    read_from_uri_async(uri: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_uri_finish(_res_: Gio.AsyncResult): void
    read_from_file(f: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_from_file_async(f: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_file_finish(_res_: Gio.AsyncResult): void
    read_from_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_from_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_stream_finish(_res_: Gio.AsyncResult): void
    read_from_string(str: string): void
    read_from_string_async(str: string, _callback_?: Gio.AsyncReadyCallback | null): void
    read_from_string_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_file(f: Gio.File): void
    write_file_async(f: Gio.File, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_stream(stream: Gio.OutputStream): void
    write_stream_async(stream: Gio.OutputStream, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    create_stream(): Gio.InputStream
    create_stream_async(_callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    initialize(local_name: string): void
    initialize_document(doc: DomDocument, local_name: string): void
    initialize_with_namespace(namespace_uri: string | null, prefix: string | null, local_name: string): void
    initialize_document_with_namespace(doc: DomDocument, namespace_uri: string | null, prefix: string | null, local_name: string): void
    read_unparsed(): void
    get_parse_children(): boolean
    set_parse_children(value: boolean): void
    get_unparsed(): string
    set_unparsed(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomXsdAttributeGroup */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomXsdBaseAttribute */
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    /* Virtual methods of GXml.GomElement */
    vfunc_remove(): void
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute(name: string, val: string): boolean
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute(name: string): boolean
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_get_properties_list(): GObject.ParamSpec[]
    vfunc_find_property_name(pname: string): GObject.ParamSpec | null
    vfunc_find_object_property_name(pname: string): GObject.ParamSpec | null
    vfunc_get_property_element_list(): GObject.ParamSpec[]
    vfunc_get_property_string(prop: GObject.ParamSpec): string | null
    vfunc_get_child(name: string): DomElement | null
    vfunc_find_elements(name: string): DomElementList
    vfunc_set_instance_property(name: string): boolean
    vfunc_clean_property_elements(name: string): void
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anotation", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anotation", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parse-children", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parse-children", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unparsed", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unparsed", callback: (($obj: GomXsdAttributeGroup, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdAttributeGroup_ConstructProps)
    _init (config?: GomXsdAttributeGroup_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdAttributeGroup
    static $gtype: GObject.Type
}
export interface GomXsdList_ConstructProps extends GomArrayList_ConstructProps {
}
export class GomXsdList {
    /* Properties of GXml.GomXsdList */
    readonly length: number
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Fields of GXml.GomXsdList */
    parent_instance: GomArrayList
    priv: GomXsdListPrivate
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdList */
    remove(index: number): void
    index_of(element: DomElement): number
    get_length(): number
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomArrayList */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomXsdList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdList_ConstructProps)
    _init (config?: GomXsdList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdList
    static $gtype: GObject.Type
}
export interface GomXsdListElements_ConstructProps extends GomXsdList_ConstructProps {
}
export class GomXsdListElements {
    /* Properties of GXml.GomXsdList */
    readonly length: number
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Fields of GXml.GomXsdListElements */
    parent_instance: GomXsdList
    priv: GomXsdListElementsPrivate
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdList */
    remove(index: number): void
    index_of(element: DomElement): number
    get_length(): number
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomArrayList */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomXsdListElements, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdListElements_ConstructProps)
    _init (config?: GomXsdListElements_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdListElements
    static $gtype: GObject.Type
}
export interface GomXsdListSimpleTypes_ConstructProps extends GomXsdList_ConstructProps {
}
export class GomXsdListSimpleTypes {
    /* Properties of GXml.GomXsdList */
    readonly length: number
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Fields of GXml.GomXsdListSimpleTypes */
    parent_instance: GomXsdList
    priv: GomXsdListSimpleTypesPrivate
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdList */
    remove(index: number): void
    index_of(element: DomElement): number
    get_length(): number
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomArrayList */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomXsdListSimpleTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdListSimpleTypes_ConstructProps)
    _init (config?: GomXsdListSimpleTypes_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdListSimpleTypes
    static $gtype: GObject.Type
}
export interface GomXsdListComplexTypes_ConstructProps extends GomXsdList_ConstructProps {
}
export class GomXsdListComplexTypes {
    /* Properties of GXml.GomXsdList */
    readonly length: number
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Fields of GXml.GomXsdListComplexTypes */
    parent_instance: GomXsdList
    priv: GomXsdListComplexTypesPrivate
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdList */
    remove(index: number): void
    index_of(element: DomElement): number
    get_length(): number
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomArrayList */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomXsdListComplexTypes, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdListComplexTypes_ConstructProps)
    _init (config?: GomXsdListComplexTypes_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdListComplexTypes
    static $gtype: GObject.Type
}
export interface GomXsdListTypeRestrictionEnumerations_ConstructProps extends GomXsdList_ConstructProps {
}
export class GomXsdListTypeRestrictionEnumerations {
    /* Properties of GXml.GomXsdList */
    readonly length: number
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Fields of GXml.GomXsdListTypeRestrictionEnumerations */
    parent_instance: GomXsdList
    priv: GomXsdListTypeRestrictionEnumerationsPrivate
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdList */
    remove(index: number): void
    index_of(element: DomElement): number
    get_length(): number
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomArrayList */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomXsdListTypeRestrictionEnumerations, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdListTypeRestrictionEnumerations_ConstructProps)
    _init (config?: GomXsdListTypeRestrictionEnumerations_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdListTypeRestrictionEnumerations
    static $gtype: GObject.Type
}
export interface GomXsdListTypeRestrictionWhiteSpaces_ConstructProps extends GomXsdList_ConstructProps {
}
export class GomXsdListTypeRestrictionWhiteSpaces {
    /* Properties of GXml.GomXsdList */
    readonly length: number
    /* Properties of GXml.BaseCollection */
    readonly items_name: string
    items_type: GObject.Type
    readonly nodes_index: GLib.Queue
    element: GomElement
    /* Fields of GXml.GomXsdListTypeRestrictionWhiteSpaces */
    parent_instance: GomXsdList
    priv: GomXsdListTypeRestrictionWhiteSpacesPrivate
    /* Fields of GXml.BaseCollection */
    _nodes_index: GLib.Queue
    _element: GomElement
    _items_name: string
    _items_type: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GomXsdList */
    remove(index: number): void
    index_of(element: DomElement): number
    get_length(): number
    /* Methods of GXml.BaseCollection */
    initialize(items_type: GObject.Type): void
    initialize_element(e: GomElement): void
    append(node: DomElement): void
    search(): void
    validate_append(index: number, element: DomElement): boolean
    clear(): void
    get_items_name(): string
    get_items_type(): GObject.Type
    set_items_type(value: GObject.Type): void
    get_nodes_index(): GLib.Queue
    get_element(): GomElement
    set_element(value: GomElement): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GomArrayList */
    vfunc_search(): void
    vfunc_get_item(index: number): DomElement | null
    vfunc_append(node: DomElement): void
    vfunc_initialize(t: GObject.Type): void
    vfunc_create_item(): GomElement | null
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    vfunc_get_nodes_index(): GLib.Queue
    vfunc_get_element(): GomElement
    vfunc_set_element(value: GomElement): void
    vfunc_get_items_name(): string
    vfunc_get_items_type(): GObject.Type
    vfunc_set_items_type(value: GObject.Type): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.BaseCollection */
    vfunc_validate_append(index: number, element: DomElement): boolean
    vfunc_clear(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-name", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-name", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::items-type", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::items-type", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodes-index", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodes-index", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::element", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::element", callback: (($obj: GomXsdListTypeRestrictionWhiteSpaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomXsdListTypeRestrictionWhiteSpaces_ConstructProps)
    _init (config?: GomXsdListTypeRestrictionWhiteSpaces_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomXsdListTypeRestrictionWhiteSpaces
    static $gtype: GObject.Type
}
export interface GomCharacterData_ConstructProps extends GomNode_ConstructProps {
    data?: string
}
export class GomCharacterData {
    /* Properties of GXml.DomNonDocumentTypeChildNode */
    readonly previous_element_sibling: DomElement
    readonly next_element_sibling: DomElement
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GXml.GomCharacterData */
    parent_instance: GomNode
    priv: GomCharacterDataPrivate
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNonDocumentTypeChildNode */
    get_previous_element_sibling(): DomElement | null
    get_next_element_sibling(): DomElement | null
    /* Methods of GXml.DomChildNode */
    remove(): void
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Virtual methods of GXml.GomCharacterData */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_remove(): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomCharacterData_ConstructProps)
    _init (config?: GomCharacterData_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GomCharacterData
    static $gtype: GObject.Type
}
export interface GomText_ConstructProps extends GomCharacterData_ConstructProps {
    data?: string
}
export class GomText {
    /* Properties of GXml.DomText */
    readonly whole_text: string
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GXml.GomText */
    parent_instance: GomCharacterData
    priv: GomTextPrivate
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomText */
    split_text(offset: number): DomText
    get_whole_text(): string
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Virtual methods of GXml.GomText */
    vfunc_split_text(offset: number): DomText
    vfunc_get_whole_text(): string
    /* Virtual methods of GXml.GomCharacterData */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_remove(): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::whole-text", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomText_ConstructProps)
    _init (config?: GomText_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: DomDocument, data: string): GomText
    static new(): GomText
    static $gtype: GObject.Type
}
export interface GomProcessingInstruction_ConstructProps extends GomCharacterData_ConstructProps {
    data?: string
}
export class GomProcessingInstruction {
    /* Properties of GXml.DomProcessingInstruction */
    readonly target: string
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GXml.GomProcessingInstruction */
    parent_instance: GomCharacterData
    priv: GomProcessingInstructionPrivate
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomProcessingInstruction */
    get_target(): string
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Virtual methods of GXml.GomProcessingInstruction */
    vfunc_get_target(): string
    /* Virtual methods of GXml.GomCharacterData */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_remove(): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::target", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomProcessingInstruction_ConstructProps)
    _init (config?: GomProcessingInstruction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: DomDocument, target: string, data: string): GomProcessingInstruction
    static new(): GomProcessingInstruction
    static $gtype: GObject.Type
}
export interface GomComment_ConstructProps extends GomCharacterData_ConstructProps {
    data?: string
}
export class GomComment {
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GXml.GomComment */
    parent_instance: GomCharacterData
    priv: GomCommentPrivate
    /* Fields of GXml.GomNode */
    _local_name: string
    _prefix: string
    _base_uri: string
    _node_value: string
    _parent: DomNode
    _node_type: DomNodeNodeType
    _child_nodes: GomNodeList
    _document: DomDocument
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Virtual methods of GXml.GomCharacterData */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    vfunc_remove(): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GomNode */
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::data", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GomComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GomComment_ConstructProps)
    _init (config?: GomComment_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: DomDocument, data: string): GomComment
    static new(): GomComment
    static $gtype: GObject.Type
}
export interface GAttribute_ConstructProps extends GNode_ConstructProps {
    namespace?: Namespace
    value?: string
}
export class GAttribute {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.Attribute */
    namespace: Namespace
    readonly prefix: string
    /* Properties of GXml.DomAttr */
    readonly namespace_uri: string
    readonly local_name: string
    readonly specified: boolean
    /* Fields of GXml.GAttribute */
    parent_instance: GNode
    priv: GAttributePrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Attribute */
    get_namespace(): Namespace | null
    set_namespace(value?: Namespace | null): void
    get_prefix(): string | null
    /* Methods of GXml.DomAttr */
    get_namespace_uri(): string | null
    get_local_name(): string
    get_specified(): boolean
    /* Virtual methods of GXml.GAttribute */
    vfunc_get_namespace(): Namespace | null
    vfunc_set_namespace(value?: Namespace | null): void
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_get_prefix(): string | null
    vfunc_get_namespace_uri(): string | null
    vfunc_get_local_name(): string
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_specified(): boolean
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::specified", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: GAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GAttribute_ConstructProps)
    _init (config?: GAttribute_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GAttribute
    static $gtype: GObject.Type
}
export interface GCDATA_ConstructProps extends GNode_ConstructProps {
}
export class GCDATA {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.CDATA */
    readonly str: string
    /* Fields of GXml.GCDATA */
    parent_instance: GNode
    priv: GCDATAPrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.CDATA */
    get_str(): string
    /* Virtual methods of GXml.GCDATA */
    vfunc_get_str(): string
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::str", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GCDATA_ConstructProps)
    _init (config?: GCDATA_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GCDATA
    static $gtype: GObject.Type
}
export interface GCharacterData_ConstructProps extends GNonDocumentChildNode_ConstructProps {
    str?: string
    data?: string
}
export class GCharacterData {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.Character */
    str: string
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GXml.GCharacterData */
    parent_instance: GNonDocumentChildNode
    priv: GCharacterDataPrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Character */
    get_str(): string
    set_str(value: string): void
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Virtual methods of GXml.GCharacterData */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GNonDocumentChildNode */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::str", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GCharacterData_ConstructProps)
    _init (config?: GCharacterData_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GCharacterData
    static $gtype: GObject.Type
}
export interface GChildNode_ConstructProps extends GNode_ConstructProps {
}
export class GChildNode {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Fields of GXml.GChildNode */
    parent_instance: GNode
    priv: GChildNodePrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomChildNode */
    remove(): void
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GChildNode_ConstructProps)
    _init (config?: GChildNode_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GChildNode
    static $gtype: GObject.Type
}
export interface GNonDocumentChildNode_ConstructProps extends GChildNode_ConstructProps {
}
export class GNonDocumentChildNode {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.DomNonDocumentTypeChildNode */
    readonly previous_element_sibling: DomElement
    readonly next_element_sibling: DomElement
    /* Fields of GXml.GNonDocumentChildNode */
    parent_instance: GChildNode
    priv: GNonDocumentChildNodePrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNonDocumentTypeChildNode */
    get_previous_element_sibling(): DomElement | null
    get_next_element_sibling(): DomElement | null
    /* Virtual methods of GXml.GNonDocumentChildNode */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: GNonDocumentChildNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GNonDocumentChildNode_ConstructProps)
    _init (config?: GNonDocumentChildNode_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GNonDocumentChildNode
    static $gtype: GObject.Type
}
export interface GComment_ConstructProps extends GCharacterData_ConstructProps {
    str?: string
    data?: string
}
export class GComment {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.Comment */
    str: string
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GXml.GComment */
    parent_instance: GCharacterData
    priv: GCommentPrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Comment */
    get_str(): string
    set_str(value: string): void
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Virtual methods of GXml.GComment */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    /* Virtual methods of GXml.GCharacterData */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GNonDocumentChildNode */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::str", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GComment_ConstructProps)
    _init (config?: GComment_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GComment
    static new(): GComment
    static $gtype: GObject.Type
}
export interface GDocument_ConstructProps extends GNode_ConstructProps {
    indent?: boolean
    ns_top?: boolean
    prefix_default_ns?: boolean
    backup?: boolean
    file?: Gio.File
}
export class GDocument {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.Document */
    indent: boolean
    ns_top: boolean
    prefix_default_ns: boolean
    backup: boolean
    readonly root: Node
    file: Gio.File
    /* Properties of GXml.DomParentNode */
    readonly children: DomHTMLCollection
    readonly first_element_child: DomElement
    readonly last_element_child: DomElement
    readonly child_element_count: number
    /* Properties of GXml.DomDocument */
    readonly implementation: DomImplementation
    readonly url: string
    readonly document_uri: string
    readonly origin: string
    readonly compat_mode: string
    readonly character_set: string
    readonly content_type: string
    readonly doctype: DomDocumentType
    readonly document_element: DomElement
    /* Fields of GXml.GDocument */
    parent_instance: GNode
    priv: GDocumentPrivate
    doc: object | null
    _buffer: any
    _implementation: GImplementation
    _url: string
    _origin: string
    _compat_mode: string
    _character_set: string
    _content_type: string
    _constructor: DomEvent
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GDocument */
    libxml_to_string(): string
    save(cancellable?: Gio.Cancellable | null): boolean
    save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Document */
    create_element(name: string): Node
    create_text(text: string): Node
    create_comment(text: string): Node
    create_cdata(text: string): Node
    create_pi(target: string, data: string): Node
    get_indent(): boolean
    set_indent(value: boolean): void
    get_ns_top(): boolean
    set_ns_top(value: boolean): void
    get_prefix_default_ns(): boolean
    set_prefix_default_ns(value: boolean): void
    get_backup(): boolean
    set_backup(value: boolean): void
    get_root(): Node
    get_file(): Gio.File
    set_file(value: Gio.File): void
    /* Methods of GXml.DomParentNode */
    query_selector(selectors: string): DomElement | null
    query_selector_all(selectors: string): DomNodeList
    get_elements_by_property_value(property: string, value: string): DomElementList
    get_children(): DomHTMLCollection
    get_first_element_child(): DomElement | null
    get_last_element_child(): DomElement | null
    get_child_element_count(): number
    /* Methods of GXml.DomNonElementParentNode */
    get_element_by_id(element_id: string): DomElement | null
    /* Methods of GXml.DomDocument */
    get_elements_by_tag_name(local_name: string): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    get_elements_by_class_name(classNames: string): DomHTMLCollection
    create_element(local_name: string): DomElement
    create_element_ns(namespace: string | null, qualified_name: string): DomElement
    create_document_fragment(): DomDocumentFragment
    create_text_node(data: string): DomText
    create_comment(data: string): DomComment
    create_processing_instruction(target: string, data: string): DomProcessingInstruction
    import_node(node: DomNode, deep: boolean): DomNode
    adopt_node(node: DomNode): DomNode
    create_event(interface: string): DomEvent
    create_range(): DomRange
    create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    get_implementation(): DomImplementation
    get_url(): string
    get_document_uri(): string
    get_origin(): string
    get_compat_mode(): string
    get_character_set(): string
    get_content_type(): string
    get_doctype(): DomDocumentType | null
    get_document_element(): DomElement | null
    /* Methods of GXml.XPathContext */
    evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Virtual methods of GXml.GDocument */
    vfunc_save(cancellable?: Gio.Cancellable | null): boolean
    vfunc_save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    vfunc_create_element(name: string): Node
    vfunc_create_element(local_name: string): DomElement
    vfunc_create_text(text: string): Node
    vfunc_create_comment(text: string): Node
    vfunc_create_comment(data: string): DomComment
    vfunc_create_cdata(text: string): Node
    vfunc_create_pi(target: string, data: string): Node
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_ns_top(): boolean
    vfunc_set_ns_top(value: boolean): void
    vfunc_get_prefix_default_ns(): boolean
    vfunc_set_prefix_default_ns(value: boolean): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_root(): Node
    vfunc_get_file(): Gio.File
    vfunc_set_file(value: Gio.File): void
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_element_by_id(element_id: string): DomElement | null
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(classNames: string): DomHTMLCollection
    vfunc_create_element_ns(namespace: string | null, qualified_name: string): DomElement
    vfunc_create_document_fragment(): DomDocumentFragment
    vfunc_create_text_node(data: string): DomText
    vfunc_create_processing_instruction(target: string, data: string): DomProcessingInstruction
    vfunc_import_node(node: DomNode, deep: boolean): DomNode
    vfunc_adopt_node(node: DomNode): DomNode
    vfunc_create_event(interface: string): DomEvent
    vfunc_create_range(): DomRange
    vfunc_create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    vfunc_create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    vfunc_get_implementation(): DomImplementation
    vfunc_get_url(): string
    vfunc_get_document_uri(): string
    vfunc_get_origin(): string
    vfunc_get_compat_mode(): string
    vfunc_get_character_set(): string
    vfunc_get_content_type(): string
    vfunc_get_doctype(): DomDocumentType | null
    vfunc_get_document_element(): DomElement | null
    vfunc_evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ns-top", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ns-top", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix-default-ns", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix-default-ns", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::backup", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::file", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::implementation", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::url", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-uri", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::origin", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::compat-mode", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::character-set", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-type", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::doctype", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-element", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: GDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDocument_ConstructProps)
    _init (config?: GDocument_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GDocument
    static from_path(path: string, options: number): GDocument
    static from_uri(uri: string, options: number): GDocument
    static from_file(file: Gio.File, options: number, cancel?: Gio.Cancellable | null): GDocument
    static from_string(str: string, options: number): GDocument
    static from_stream(istream: Gio.InputStream): GDocument
    static from_doc(doc: libxml2.Doc): GDocument
    static new_default(): Document
    static new_default_for_path(path: string): Document
    static new_default_for_file(f: Gio.File): Document
    static $gtype: GObject.Type
}
export interface GImplementation_ConstructProps extends GObject.Object_ConstructProps {
}
export class GImplementation {
    /* Fields of GXml.GImplementation */
    parent_instance: GObject.Object
    priv: GImplementationPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomImplementation */
    create_document_type(qualified_name: string, public_id: string, system_id: string): DomDocumentType
    create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    create_html_document(title: string): Document
    has_feature(): boolean
    /* Virtual methods of GXml.GImplementation */
    vfunc_create_document_type(qualified_name: string, public_id: string, system_id: string): DomDocumentType
    vfunc_create_document(nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null): DomXMLDocument
    vfunc_create_html_document(title: string): Document
    vfunc_has_feature(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GImplementation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GImplementation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GImplementation_ConstructProps)
    _init (config?: GImplementation_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GImplementation
    static $gtype: GObject.Type
}
export interface GDocumentType_ConstructProps extends GChildNode_ConstructProps {
    owner_document?: DomDocument
    node_value?: string
    text_content?: string
}
export class GDocumentType {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.DomNode */
    readonly node_type: DomNodeNodeType
    readonly node_name: string
    readonly base_uri: string
    owner_document: DomDocument
    readonly parent_node: DomNode
    readonly parent_element: DomElement
    readonly child_nodes: DomNodeList
    readonly first_child: DomNode
    readonly last_child: DomNode
    readonly previous_sibling: DomNode
    readonly next_sibling: DomNode
    node_value: string
    text_content: string
    /* Properties of GXml.DomDocumentType */
    readonly public_id: string
    readonly system_id: string
    /* Fields of GXml.GDocumentType */
    parent_instance: GChildNode
    priv: GDocumentTypePrivate
    _name: string
    _public_id: string
    _system_id: string
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNode */
    has_child_nodes(): boolean
    normalize(): void
    is_equal_node(node?: DomNode | null): boolean
    compare_document_position(other: DomNode): DomNodeDocumentPosition
    contains(other?: DomNode | null): boolean
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    is_default_namespace(nspace?: string | null): boolean
    insert_before(node: DomNode, child?: DomNode | null): DomNode
    append_child(node: DomNode): DomNode
    replace_child(node: DomNode, child: DomNode): DomNode
    remove_child(child: DomNode): DomNode
    clone_node(deep: boolean): DomNode
    get_node_type(): DomNodeNodeType
    get_node_name(): string
    get_base_uri(): string | null
    get_owner_document(): DomDocument | null
    set_owner_document(value?: DomDocument | null): void
    get_parent_node(): DomNode | null
    get_parent_element(): DomElement | null
    get_child_nodes(): DomNodeList
    get_first_child(): DomNode | null
    get_last_child(): DomNode | null
    get_previous_sibling(): DomNode | null
    get_next_sibling(): DomNode | null
    get_node_value(): string | null
    set_node_value(value?: string | null): void
    get_text_content(): string | null
    set_text_content(value?: string | null): void
    /* Methods of GXml.DomChildNode */
    remove(): void
    /* Methods of GXml.DomDocumentType */
    get_public_id(): string
    get_system_id(): string
    /* Virtual methods of GXml.GDocumentType */
    vfunc_get_name(): string
    vfunc_get_public_id(): string
    vfunc_get_system_id(): string
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::public-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::system-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: GDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDocumentType_ConstructProps)
    _init (config?: GDocumentType_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static with_name(name: string): GDocumentType
    static with_ids(name: string, public_id: string, system_id: string): GDocumentType
    static new(): GDocumentType
    static $gtype: GObject.Type
}
export interface GDocumentFragment_ConstructProps extends GDocument_ConstructProps {
}
export class GDocumentFragment {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Fields of GXml.GDocumentFragment */
    parent_instance: GDocument
    priv: GDocumentFragmentPrivate
    /* Fields of GXml.GDocument */
    doc: object | null
    _buffer: any
    _implementation: GImplementation
    _url: string
    _origin: string
    _compat_mode: string
    _character_set: string
    _content_type: string
    _constructor: DomEvent
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GDocument */
    libxml_to_string(): string
    save(cancellable?: Gio.Cancellable | null): boolean
    save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GDocumentFragment */
    vfunc_create_element(name: string): Node
    vfunc_create_element(local_name: string): DomElement
    vfunc_create_comment(text: string): Node
    vfunc_create_comment(data: string): DomComment
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    /* Virtual methods of GXml.GDocument */
    vfunc_save(cancellable?: Gio.Cancellable | null): boolean
    vfunc_save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    vfunc_create_element(name: string): Node
    vfunc_create_element(local_name: string): DomElement
    vfunc_create_text(text: string): Node
    vfunc_create_comment(text: string): Node
    vfunc_create_comment(data: string): DomComment
    vfunc_create_cdata(text: string): Node
    vfunc_create_pi(target: string, data: string): Node
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_ns_top(): boolean
    vfunc_set_ns_top(value: boolean): void
    vfunc_get_prefix_default_ns(): boolean
    vfunc_set_prefix_default_ns(value: boolean): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_root(): Node
    vfunc_get_file(): Gio.File
    vfunc_set_file(value: Gio.File): void
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_element_by_id(element_id: string): DomElement | null
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(classNames: string): DomHTMLCollection
    vfunc_create_element_ns(namespace: string | null, qualified_name: string): DomElement
    vfunc_create_document_fragment(): DomDocumentFragment
    vfunc_create_text_node(data: string): DomText
    vfunc_create_processing_instruction(target: string, data: string): DomProcessingInstruction
    vfunc_import_node(node: DomNode, deep: boolean): DomNode
    vfunc_adopt_node(node: DomNode): DomNode
    vfunc_create_event(interface: string): DomEvent
    vfunc_create_range(): DomRange
    vfunc_create_node_iterator(root: DomNode, whatToShow: number, filter?: DomNodeFilter | null): DomNodeIterator
    vfunc_create_tree_walker(root: DomNode, what_to_show: number, filter?: DomNodeFilter | null): DomTreeWalker
    vfunc_get_implementation(): DomImplementation
    vfunc_get_url(): string
    vfunc_get_document_uri(): string
    vfunc_get_origin(): string
    vfunc_get_compat_mode(): string
    vfunc_get_character_set(): string
    vfunc_get_content_type(): string
    vfunc_get_doctype(): DomDocumentType | null
    vfunc_get_document_element(): DomElement | null
    vfunc_evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDocumentFragment_ConstructProps)
    _init (config?: GDocumentFragment_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(d: GDocument): GDocumentFragment
    static new(): GDocumentFragment
    static $gtype: GObject.Type
}
export interface GDomNodeIterator_ConstructProps extends GObject.Object_ConstructProps {
}
export class GDomNodeIterator {
    /* Properties of GXml.DomNodeIterator */
    readonly root: DomNode
    readonly reference_node: DomNode
    readonly pointer_before_reference_node: boolean
    readonly what_to_show: number
    readonly filter: DomNodeFilter
    /* Fields of GXml.GDomNodeIterator */
    parent_instance: GObject.Object
    priv: GDomNodeIteratorPrivate
    _root: DomNode
    _reference_node: DomNode
    _pointer_before_reference_node: boolean
    _what_to_show: number
    _filter: DomNodeFilter
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNodeIterator */
    next_node(): DomNode | null
    previous_node(): DomNode | null
    detach(): void
    get_root(): DomNode
    get_reference_node(): DomNode
    get_pointer_before_reference_node(): boolean
    get_what_to_show(): number
    get_filter(): DomNodeFilter | null
    /* Virtual methods of GXml.GDomNodeIterator */
    vfunc_next_node(): DomNode | null
    vfunc_previous_node(): DomNode | null
    vfunc_detach(): void
    vfunc_get_root(): DomNode
    vfunc_get_reference_node(): DomNode
    vfunc_get_pointer_before_reference_node(): boolean
    vfunc_get_what_to_show(): number
    vfunc_get_filter(): DomNodeFilter | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::root", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pointer-before-reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-before-reference-node", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::what-to-show", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: GDomNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomNodeIterator_ConstructProps)
    _init (config?: GDomNodeIterator_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(n: DomNode, what_to_show: number, filter: DomNodeFilter): GDomNodeIterator
    static $gtype: GObject.Type
}
export interface GDomTreeWalker_ConstructProps extends GObject.Object_ConstructProps {
}
export class GDomTreeWalker {
    /* Properties of GXml.DomTreeWalker */
    readonly root: DomNode
    readonly what_to_show: number
    readonly filter: DomNodeFilter
    readonly current_node: DomNode
    /* Fields of GXml.GDomTreeWalker */
    parent_instance: GObject.Object
    priv: GDomTreeWalkerPrivate
    _root: DomNode
    _what_to_show: number
    _filter: DomNodeFilter | null
    _current_node: DomNode
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomTreeWalker */
    parentNode(): DomNode | null
    firstChild(): DomNode | null
    lastChild(): DomNode | null
    previousSibling(): DomNode | null
    nextSibling(): DomNode | null
    previousNode(): DomNode | null
    nextNode(): DomNode | null
    get_root(): DomNode
    get_what_to_show(): number
    get_filter(): DomNodeFilter | null
    get_current_node(): DomNode
    /* Virtual methods of GXml.GDomTreeWalker */
    vfunc_parentNode(): DomNode | null
    vfunc_firstChild(): DomNode | null
    vfunc_lastChild(): DomNode | null
    vfunc_previousSibling(): DomNode | null
    vfunc_nextSibling(): DomNode | null
    vfunc_previousNode(): DomNode | null
    vfunc_nextNode(): DomNode | null
    vfunc_get_root(): DomNode
    vfunc_get_what_to_show(): number
    vfunc_get_filter(): DomNodeFilter | null
    vfunc_get_current_node(): DomNode
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::root", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::what-to-show", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-node", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-node", callback: (($obj: GDomTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomTreeWalker_ConstructProps)
    _init (config?: GDomTreeWalker_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(r: DomNode, w: number, f: DomNodeFilter): GDomTreeWalker
    static $gtype: GObject.Type
}
export interface GDomTokenList_ConstructProps extends Gee.ArrayList_ConstructProps {
}
export class GDomTokenList {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.DomTokenList */
    readonly length: number
    /* Fields of GXml.GDomTokenList */
    parent_instance: Gee.ArrayList
    priv: GDomTokenListPrivate
    _element: DomElement
    _attr: string
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GDomTokenList */
    update(): void
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomTokenList */
    item(index: number): string | null
    contains(token: string): boolean
    add(tokens: string[]): void
    remove(tokens: string[]): void
    toggle(token: string, force: boolean, auto: boolean): boolean
    to_string(): string
    get_length(): number
    /* Virtual methods of GXml.GDomTokenList */
    vfunc_item(index: number): string | null
    vfunc_contains(token: string): boolean
    vfunc_contains(item?: object | null): boolean
    vfunc_add(tokens: string[]): void
    vfunc_add(item?: object | null): boolean
    vfunc_remove(tokens: string[]): void
    vfunc_remove(item?: object | null): boolean
    vfunc_toggle(token: string, force: boolean, auto: boolean): boolean
    vfunc_to_string(): string
    vfunc_get_length(): number
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GDomTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomTokenList_ConstructProps)
    _init (config?: GDomTokenList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(e: DomElement, attr?: string | null): GDomTokenList
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): GDomTokenList
    static $gtype: GObject.Type
}
export interface GDomSettableTokenList_ConstructProps extends GDomTokenList_ConstructProps {
    value?: string
}
export class GDomSettableTokenList {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.DomSettableTokenList */
    value: string
    /* Properties of GXml.DomTokenList */
    readonly length: number
    /* Fields of GXml.GDomSettableTokenList */
    parent_instance: GDomTokenList
    priv: GDomSettableTokenListPrivate
    /* Fields of GXml.GDomTokenList */
    _element: DomElement
    _attr: string
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GDomTokenList */
    update(): void
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomSettableTokenList */
    get_value(): string
    set_value(value: string): void
    /* Methods of GXml.DomTokenList */
    item(index: number): string | null
    contains(token: string): boolean
    add(tokens: string[]): void
    remove(tokens: string[]): void
    toggle(token: string, force: boolean, auto: boolean): boolean
    to_string(): string
    get_length(): number
    /* Virtual methods of GXml.GDomSettableTokenList */
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_contains(token: string): boolean
    vfunc_contains(item?: object | null): boolean
    vfunc_add(tokens: string[]): void
    vfunc_add(item?: object | null): boolean
    vfunc_remove(tokens: string[]): void
    vfunc_remove(item?: object | null): boolean
    /* Virtual methods of GXml.GDomTokenList */
    vfunc_item(index: number): string | null
    vfunc_contains(token: string): boolean
    vfunc_contains(item?: object | null): boolean
    vfunc_add(tokens: string[]): void
    vfunc_add(item?: object | null): boolean
    vfunc_remove(tokens: string[]): void
    vfunc_remove(item?: object | null): boolean
    vfunc_toggle(token: string, force: boolean, auto: boolean): boolean
    vfunc_to_string(): string
    vfunc_get_length(): number
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GDomSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomSettableTokenList_ConstructProps)
    _init (config?: GDomSettableTokenList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(e: DomElement, attr?: string | null): GDomSettableTokenList
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): GDomSettableTokenList
    static $gtype: GObject.Type
}
export interface GDomHTMLCollection_ConstructProps extends Gee.ArrayList_ConstructProps {
}
export class GDomHTMLCollection {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.DomHTMLCollection */
    readonly length: number
    /* Fields of GXml.GDomHTMLCollection */
    parent_instance: Gee.ArrayList
    priv: GDomHTMLCollectionPrivate
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomHTMLCollection */
    get_element(index: number): DomElement | null
    to_array(): DomElement[]
    item(index: number): DomElement | null
    named_item(name: string): DomElement | null
    get_length(): number
    /* Virtual methods of GXml.GDomHTMLCollection */
    vfunc_get_element(index: number): DomElement | null
    vfunc_to_array(): DomElement[]
    vfunc_to_array(): object[]
    vfunc_item(index: number): DomElement | null
    vfunc_named_item(name: string): DomElement | null
    vfunc_get_length(): number
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GDomHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomHTMLCollection_ConstructProps)
    _init (config?: GDomHTMLCollection_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GDomHTMLCollection
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): GDomHTMLCollection
    static $gtype: GObject.Type
}
export interface GDomEvent_ConstructProps extends GObject.Object_ConstructProps {
}
export class GDomEvent {
    /* Properties of GXml.DomEvent */
    readonly etype: string
    readonly event_target: DomEventTarget
    readonly current_target: DomEventTarget
    readonly bubbles: boolean
    readonly cancelable: boolean
    readonly is_trusted: boolean
    readonly time_stamp: DomTimeStamp
    readonly default_prevented: boolean
    readonly event_phase: DomEventPhase
    /* Fields of GXml.GDomEvent */
    parent_instance: GObject.Object
    priv: GDomEventPrivate
    _etype: string
    _event_target: DomEventTarget
    _current_target: DomEventTarget
    _bubbles: boolean
    _cancelable: boolean
    _is_trusted: boolean
    _time_stamp: DomTimeStamp
    _default_prevented: boolean
    _event_phase: DomEventPhase
    _flags: DomEventFlags
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomEvent */
    stop_propagation(): void
    stop_immediate_propagation(): void
    prevent_default(): void
    init_event(type: string, bubbles: boolean, cancelable: boolean): void
    get_etype(): string
    get_event_target(): DomEventTarget | null
    get_current_target(): DomEventTarget | null
    get_bubbles(): boolean
    get_cancelable(): boolean
    get_is_trusted(): boolean
    get_time_stamp(): DomTimeStamp
    get_default_prevented(): boolean
    get_event_phase(): DomEventPhase
    /* Virtual methods of GXml.GDomEvent */
    vfunc_stop_propagation(): void
    vfunc_stop_immediate_propagation(): void
    vfunc_prevent_default(): void
    vfunc_init_event(type: string, bubbles: boolean, cancelable: boolean): void
    vfunc_get_etype(): string
    vfunc_get_event_target(): DomEventTarget | null
    vfunc_get_current_target(): DomEventTarget | null
    vfunc_get_bubbles(): boolean
    vfunc_get_cancelable(): boolean
    vfunc_get_is_trusted(): boolean
    vfunc_get_time_stamp(): DomTimeStamp
    vfunc_get_default_prevented(): boolean
    vfunc_get_event_phase(): DomEventPhase
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::etype", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::etype", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bubbles", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-trusted", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-trusted", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-prevented", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-prevented", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: GDomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomEvent_ConstructProps)
    _init (config?: GDomEvent_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GDomEvent
    static $gtype: GObject.Type
}
export interface GDomCustomEvent_ConstructProps extends GDomEvent_ConstructProps {
}
export class GDomCustomEvent {
    /* Properties of GXml.GDomCustomEvent */
    readonly detail: any
    /* Fields of GXml.GDomCustomEvent */
    parent_instance: GDomEvent
    priv: GDomCustomEventPrivate
    _detail: any
    /* Fields of GXml.GDomEvent */
    _etype: string
    _event_target: DomEventTarget
    _current_target: DomEventTarget
    _bubbles: boolean
    _cancelable: boolean
    _is_trusted: boolean
    _time_stamp: DomTimeStamp
    _default_prevented: boolean
    _event_phase: DomEventPhase
    _flags: DomEventFlags
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GDomCustomEvent */
    init_custom_event(type: string, bubbles: boolean, cancelable: boolean, detail?: any | null): void
    get_detail(): /* result */ any
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GDomEvent */
    vfunc_stop_propagation(): void
    vfunc_stop_immediate_propagation(): void
    vfunc_prevent_default(): void
    vfunc_init_event(type: string, bubbles: boolean, cancelable: boolean): void
    vfunc_get_etype(): string
    vfunc_get_event_target(): DomEventTarget | null
    vfunc_get_current_target(): DomEventTarget | null
    vfunc_get_bubbles(): boolean
    vfunc_get_cancelable(): boolean
    vfunc_get_is_trusted(): boolean
    vfunc_get_time_stamp(): DomTimeStamp
    vfunc_get_default_prevented(): boolean
    vfunc_get_event_phase(): DomEventPhase
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::detail", callback: (($obj: GDomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: GDomCustomEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomCustomEvent_ConstructProps)
    _init (config?: GDomCustomEvent_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): GDomCustomEvent
    static $gtype: GObject.Type
}
export interface GDomRange_ConstructProps extends GObject.Object_ConstructProps {
}
export class GDomRange {
    /* Properties of GXml.DomRange */
    readonly start_container: DomNode
    readonly start_offset: number
    readonly end_container: DomNode
    readonly end_offset: number
    readonly collapsed: boolean
    readonly common_ancestor_container: DomNode
    /* Fields of GXml.GDomRange */
    parent_instance: GObject.Object
    priv: GDomRangePrivate
    _document: DomDocument
    _start_container: DomNode
    _start_offset: number
    _end_container: DomNode
    _end_offset: number
    _collapse: boolean
    _common_ancestor_container: DomNode
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomRange */
    set_start(node: DomNode, offset: number): void
    set_end(node: DomNode, offset: number): void
    set_start_before(node: DomNode): void
    set_start_after(node: DomNode): void
    set_end_before(node: DomNode): void
    set_end_after(node: DomNode): void
    collapse(to_start: boolean): void
    select_node(node: DomNode): void
    select_node_contents(node: DomNode): void
    compare_boundary_points(how: DomRangeBoundaryPoints, sourceRange: DomRange): number
    delete_contents(): void
    extract_contents(): DomDocumentFragment | null
    clone_contents(): DomDocumentFragment | null
    insert_node(node: DomNode): void
    surround_contents(newParent: DomNode): void
    clone_range(): DomRange
    detach(): void
    is_point_in_range(node: DomNode, offset: number): boolean
    compare_point(node: DomNode, offset: number): number
    intersects_node(node: DomNode): boolean
    to_string(): string
    get_start_container(): DomNode
    get_start_offset(): number
    get_end_container(): DomNode
    get_end_offset(): number
    get_collapsed(): boolean
    get_common_ancestor_container(): DomNode
    /* Virtual methods of GXml.GDomRange */
    vfunc_set_start(node: DomNode, offset: number): void
    vfunc_set_end(node: DomNode, offset: number): void
    vfunc_set_start_before(node: DomNode): void
    vfunc_set_start_after(node: DomNode): void
    vfunc_set_end_before(node: DomNode): void
    vfunc_set_end_after(node: DomNode): void
    vfunc_collapse(to_start: boolean): void
    vfunc_select_node(node: DomNode): void
    vfunc_select_node_contents(node: DomNode): void
    vfunc_compare_boundary_points(how: DomRangeBoundaryPoints, sourceRange: DomRange): number
    vfunc_delete_contents(): void
    vfunc_extract_contents(): DomDocumentFragment | null
    vfunc_clone_contents(): DomDocumentFragment | null
    vfunc_insert_node(node: DomNode): void
    vfunc_surround_contents(newParent: DomNode): void
    vfunc_clone_range(): DomRange
    vfunc_detach(): void
    vfunc_is_point_in_range(node: DomNode, offset: number): boolean
    vfunc_compare_point(node: DomNode, offset: number): number
    vfunc_intersects_node(node: DomNode): boolean
    vfunc_to_string(): string
    vfunc_get_start_container(): DomNode
    vfunc_get_start_offset(): number
    vfunc_get_end_container(): DomNode
    vfunc_get_end_offset(): number
    vfunc_get_collapsed(): boolean
    vfunc_get_common_ancestor_container(): DomNode
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::start-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::end-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::end-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-offset", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::collapsed", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::collapsed", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::common-ancestor-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::common-ancestor-container", callback: (($obj: GDomRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GDomRange_ConstructProps)
    _init (config?: GDomRange_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: DomDocument): GDomRange
    static $gtype: GObject.Type
}
export interface GElement_ConstructProps extends GNonDocumentChildNode_ConstructProps {
    id?: string
    class_name?: string
    content?: string
}
export class GElement {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.DomParentNode */
    readonly children: DomHTMLCollection
    readonly first_element_child: DomElement
    readonly last_element_child: DomElement
    readonly child_element_count: number
    /* Properties of GXml.DomElement */
    readonly namespace_uri: string
    readonly prefix: string
    readonly local_name: string
    readonly tag_name: string
    id: string
    class_name: string
    readonly class_list: DomTokenList
    readonly attributes: DomNamedNodeMap
    /* Properties of GXml.Element */
    content: string
    /* Fields of GXml.GElement */
    parent_instance: GNonDocumentChildNode
    priv: GElementPrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomParentNode */
    query_selector(selectors: string): DomElement | null
    query_selector_all(selectors: string): DomNodeList
    get_elements_by_property_value(property: string, value: string): DomElementList
    get_children(): DomHTMLCollection
    get_first_element_child(): DomElement | null
    get_last_element_child(): DomElement | null
    get_child_element_count(): number
    /* Methods of GXml.DomElement */
    get_attribute(name: string): string | null
    get_attribute_ns(namespace: string | null, local_name: string): string | null
    set_attribute(name: string, value: string): void
    set_attribute_ns(namespace: string | null, name: string, value: string): void
    remove_attribute(name: string): void
    remove_attribute_ns(namespace: string | null, local_name: string): void
    has_attribute(name: string): boolean
    has_attribute_ns(namespace: string | null, local_name: string): boolean
    get_elements_by_tag_name(local_name: string): DomHTMLCollection
    get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    get_elements_by_class_name(class_names: string): DomHTMLCollection
    get_namespace_uri(): string | null
    get_prefix(): string | null
    get_local_name(): string
    get_tag_name(): string
    get_id(): string | null
    set_id(value?: string | null): void
    get_class_name(): string | null
    set_class_name(value?: string | null): void
    get_class_list(): DomTokenList
    get_attributes(): DomNamedNodeMap
    /* Methods of GXml.Element */
    normalize(): void
    set_attr(name: string, value: string): void
    get_attr(name: string): Node | null
    remove_attr(name: string): void
    remove_ns_attr(name: string, uri: string): void
    set_ns_attr(ns: string, name: string, value: string): void
    get_ns_attr(name: string, uri: string): Node | null
    get_content(): string
    set_content(value: string): void
    /* Methods of GXml.XPathContext */
    evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Virtual methods of GXml.GElement */
    vfunc_query_selector(selectors: string): DomElement | null
    vfunc_query_selector_all(selectors: string): DomNodeList
    vfunc_get_elements_by_property_value(property: string, value: string): DomElementList
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_children(): DomHTMLCollection
    vfunc_get_first_element_child(): DomElement | null
    vfunc_get_last_element_child(): DomElement | null
    vfunc_get_child_element_count(): number
    vfunc_get_attribute(name: string): string | null
    vfunc_get_attribute_ns(namespace: string | null, local_name: string): string | null
    vfunc_set_attribute(name: string, value: string): void
    vfunc_set_attribute_ns(namespace: string | null, name: string, value: string): void
    vfunc_remove_attribute(name: string): void
    vfunc_remove_attribute_ns(namespace: string | null, local_name: string): void
    vfunc_has_attribute(name: string): boolean
    vfunc_has_attribute_ns(namespace: string | null, local_name: string): boolean
    vfunc_get_elements_by_tag_name(local_name: string): DomHTMLCollection
    vfunc_get_elements_by_tag_name_ns(namespace: string | null, local_name: string): DomHTMLCollection
    vfunc_get_elements_by_class_name(class_names: string): DomHTMLCollection
    vfunc_get_namespace_uri(): string | null
    vfunc_get_prefix(): string | null
    vfunc_get_local_name(): string
    vfunc_get_tag_name(): string
    vfunc_get_id(): string | null
    vfunc_set_id(value?: string | null): void
    vfunc_get_class_name(): string | null
    vfunc_set_class_name(value?: string | null): void
    vfunc_get_class_list(): DomTokenList
    vfunc_get_attributes(): DomNamedNodeMap
    vfunc_normalize(): void
    vfunc_set_attr(name: string, value: string): void
    vfunc_get_attr(name: string): Node | null
    vfunc_remove_attr(name: string): void
    vfunc_remove_ns_attr(name: string, uri: string): void
    vfunc_set_ns_attr(ns: string, name: string, value: string): void
    vfunc_get_ns_attr(name: string, uri: string): Node | null
    vfunc_get_content(): string
    vfunc_set_content(value: string): void
    vfunc_evaluate(expression: string, resolver?: Gee.List | null): XPathObject
    /* Virtual methods of GXml.GNonDocumentChildNode */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: GElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GElement_ConstructProps)
    _init (config?: GElement_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GElement
    static new(): GElement
    static $gtype: GObject.Type
}
export interface GHashMapAttr_ConstructProps extends Gee.AbstractMap_ConstructProps {
}
export class GHashMapAttr {
    /* Properties of Gee.AbstractMap */
    readonly size: number
    readonly read_only: boolean
    readonly keys: Gee.Set
    readonly values: Gee.Collection
    readonly entries: Gee.Set
    readonly read_only_view: Gee.Map
    /* Properties of GXml.DomNamedNodeMap */
    readonly length: number
    /* Fields of GXml.GHashMapAttr */
    parent_instance: Gee.AbstractMap
    priv: GHashMapAttrPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.AbstractMap */
    has_key(key?: object | null): boolean
    has(key?: object | null, value?: object | null): boolean
    get(key?: object | null): object | null
    set(key?: object | null, value?: object | null): void
    unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    map_iterator(): Gee.MapIterator
    clear(): void
    foreach(f: Gee.ForallFunc): boolean
    stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_size(): number
    get_read_only(): boolean
    get_keys(): Gee.Set
    get_values(): Gee.Collection
    get_entries(): Gee.Set
    get_read_only_view(): Gee.Map
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNamedNodeMap */
    item(index: number): DomNode | null
    get_named_item(name: string): DomNode | null
    set_named_item(node: DomNode): DomNode | null
    remove_named_item(name: string): DomNode | null
    remove_named_item_ns(namespace_uri: string, localName: string): DomNode | null
    get_named_item_ns(namespace_uri: string, local_name: string): DomNode | null
    set_named_item_ns(node: DomNode): DomNode | null
    get_length(): number
    /* Virtual methods of GXml.GHashMapAttr */
    vfunc_item(index: number): DomNode | null
    vfunc_get_named_item(name: string): DomNode | null
    vfunc_set_named_item(node: DomNode): DomNode | null
    vfunc_remove_named_item(name: string): DomNode | null
    vfunc_remove_named_item_ns(namespace_uri: string, localName: string): DomNode | null
    vfunc_get_named_item_ns(namespace_uri: string, local_name: string): DomNode | null
    vfunc_set_named_item_ns(node: DomNode): DomNode | null
    vfunc_get_length(): number
    /* Virtual methods of Gee.AbstractMap */
    vfunc_has_key(key?: object | null): boolean
    vfunc_has(key?: object | null, value?: object | null): boolean
    vfunc_get(key?: object | null): object | null
    vfunc_set(key?: object | null, value?: object | null): void
    vfunc_unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    vfunc_map_iterator(): Gee.MapIterator
    vfunc_clear(): void
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_keys(): Gee.Set
    vfunc_get_values(): Gee.Collection
    vfunc_get_entries(): Gee.Set
    vfunc_get_read_only_view(): Gee.Map
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_iterator(): Gee.Iterator
    vfunc_set_all(map: Gee.Map): void
    vfunc_unset_all(map: Gee.Map): boolean
    vfunc_has_all(map: Gee.Map): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::size", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::keys", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::values", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::entries", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only-view", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GHashMapAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GHashMapAttr_ConstructProps)
    _init (config?: GHashMapAttr_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GHashMapAttr
    static $gtype: GObject.Type
}
export interface GHashMapAttrEntry_ConstructProps extends Gee.MapEntry_ConstructProps {
}
export class GHashMapAttrEntry {
    /* Properties of Gee.MapEntry */
    readonly key: object
    value: object
    readonly read_only: boolean
    /* Fields of GXml.GHashMapAttrEntry */
    parent_instance: Gee.MapEntry
    priv: GHashMapAttrEntryPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.MapEntry */
    get_key(): object | null
    get_value(): object | null
    set_value(value?: object | null): void
    get_read_only(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gee.MapEntry */
    vfunc_get_key(): object | null
    vfunc_get_value(): object | null
    vfunc_set_value(value?: object | null): void
    vfunc_get_read_only(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::key", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GHashMapAttrEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GHashMapAttrEntry_ConstructProps)
    _init (config?: GHashMapAttrEntry_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, attr?: object | null): GHashMapAttrEntry
    static $gtype: GObject.Type
}
export interface GHashMapAttrIterator_ConstructProps extends GObject.Object_ConstructProps {
}
export class GHashMapAttrIterator {
    /* Properties of Gee.MapIterator */
    readonly valid: boolean
    readonly mutable: boolean
    readonly read_only: boolean
    /* Fields of GXml.GHashMapAttrIterator */
    parent_instance: GObject.Object
    priv: GHashMapAttrIteratorPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gee.MapIterator */
    next(): boolean
    has_next(): boolean
    get_key(): object | null
    get_value(): object | null
    set_value(value?: object | null): void
    unset(): void
    fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldMapFunc, seed?: object | null): object | null
    foreach(f: Gee.ForallMapFunc): boolean
    get_valid(): boolean
    get_mutable(): boolean
    get_read_only(): boolean
    /* Virtual methods of GXml.GHashMapAttrIterator */
    vfunc_next(): boolean
    vfunc_has_next(): boolean
    vfunc_get_key(): object | null
    vfunc_get_value(): object | null
    vfunc_set_value(value?: object | null): void
    vfunc_unset(): void
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldMapFunc, seed?: object | null): object | null
    vfunc_foreach(f: Gee.ForallMapFunc): boolean
    vfunc_get_valid(): boolean
    vfunc_get_mutable(): boolean
    vfunc_get_read_only(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::valid", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valid", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mutable", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mutable", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GHashMapAttrIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GHashMapAttrIterator_ConstructProps)
    _init (config?: GHashMapAttrIterator_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GHashMapAttrIterator
    static $gtype: GObject.Type
}
export interface GListChildren_ConstructProps extends Gee.AbstractBidirList_ConstructProps {
}
export class GListChildren {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.DomNodeList */
    readonly length: number
    /* Fields of GXml.GListChildren */
    parent_instance: Gee.AbstractBidirList
    priv: GListChildrenPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomNodeList */
    item(index: number): DomNode | null
    get_length(): number
    /* Methods of GXml.DomHTMLCollection */
    get_element(index: number): DomElement | null
    to_array(): DomElement[]
    item(index: number): DomElement | null
    named_item(name: string): DomElement | null
    /* Virtual methods of GXml.GListChildren */
    vfunc_item(index: number): DomNode | null
    vfunc_item(index: number): DomElement | null
    vfunc_get_length(): number
    vfunc_get_element(index: number): DomElement | null
    vfunc_to_array(): DomElement[]
    vfunc_to_array(): object[]
    vfunc_named_item(name: string): DomElement | null
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GListChildren, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GListChildren_ConstructProps)
    _init (config?: GListChildren_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GListChildren
    static $gtype: GObject.Type
}
export interface GListChildrenIterator_ConstructProps extends GObject.Object_ConstructProps {
}
export class GListChildrenIterator {
    /* Properties of Gee.Iterator */
    readonly valid: boolean
    readonly read_only: boolean
    /* Fields of GXml.GListChildrenIterator */
    parent_instance: GObject.Object
    priv: GListChildrenIteratorPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gee.Traversable */
    foreach(f: Gee.ForallFunc): boolean
    stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    filter(pred: Gee.Predicate): Gee.Iterator
    chop(offset: number, length: number): Gee.Iterator
    flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    tee(forks: number): Gee.Iterator[]
    first_match(pred: Gee.Predicate): object | null
    any_match(pred: Gee.Predicate): boolean
    all_match(pred: Gee.Predicate): boolean
    max(compare: GLib.CompareDataFunc): object | null
    min(compare: GLib.CompareDataFunc): object | null
    order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    get_element_type(): GObject.Type
    /* Methods of Gee.Iterator */
    next(): boolean
    has_next(): boolean
    get(): object | null
    remove(): void
    get_valid(): boolean
    get_read_only(): boolean
    /* Methods of Gee.BidirIterator */
    previous(): boolean
    has_previous(): boolean
    first(): boolean
    last(): boolean
    /* Methods of Gee.ListIterator */
    set(item?: object | null): void
    add(item?: object | null): void
    index(): number
    /* Methods of Gee.BidirListIterator */
    insert(item?: object | null): void
    /* Virtual methods of GXml.GListChildrenIterator */
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_next(): boolean
    vfunc_has_next(): boolean
    vfunc_get(): object | null
    vfunc_remove(): void
    vfunc_get_valid(): boolean
    vfunc_get_read_only(): boolean
    vfunc_previous(): boolean
    vfunc_has_previous(): boolean
    vfunc_first(): boolean
    vfunc_last(): boolean
    vfunc_set(item?: object | null): void
    vfunc_add(item?: object | null): void
    vfunc_index(): number
    vfunc_insert(item?: object | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::valid", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valid", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListChildrenIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GListChildrenIterator_ConstructProps)
    _init (config?: GListChildrenIterator_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GListChildrenIterator
    static unfold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.UnfoldFunc, current?: Gee.Lazy | null): Gee.Iterator
    static concat(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, iters: Gee.Iterator): Gee.Iterator
    static $gtype: GObject.Type
}
export interface GListNamespaces_ConstructProps extends Gee.AbstractList_ConstructProps {
}
export class GListNamespaces {
    /* Properties of Gee.AbstractList */
    readonly read_only_view: Gee.List
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Fields of GXml.GListNamespaces */
    parent_instance: Gee.AbstractList
    priv: GListNamespacesPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.GListNamespaces */
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListNamespaces, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GListNamespaces_ConstructProps)
    _init (config?: GListNamespaces_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GListNamespaces
    static $gtype: GObject.Type
}
export interface GListNamespacesIterator_ConstructProps extends GObject.Object_ConstructProps {
}
export class GListNamespacesIterator {
    /* Properties of Gee.Iterator */
    readonly valid: boolean
    readonly read_only: boolean
    /* Fields of GXml.GListNamespacesIterator */
    parent_instance: GObject.Object
    priv: GListNamespacesIteratorPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gee.Traversable */
    foreach(f: Gee.ForallFunc): boolean
    stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    filter(pred: Gee.Predicate): Gee.Iterator
    chop(offset: number, length: number): Gee.Iterator
    flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    tee(forks: number): Gee.Iterator[]
    first_match(pred: Gee.Predicate): object | null
    any_match(pred: Gee.Predicate): boolean
    all_match(pred: Gee.Predicate): boolean
    max(compare: GLib.CompareDataFunc): object | null
    min(compare: GLib.CompareDataFunc): object | null
    order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    get_element_type(): GObject.Type
    /* Methods of Gee.Iterator */
    next(): boolean
    has_next(): boolean
    get(): object | null
    remove(): void
    get_valid(): boolean
    get_read_only(): boolean
    /* Methods of Gee.ListIterator */
    set(item?: object | null): void
    add(item?: object | null): void
    index(): number
    /* Virtual methods of GXml.GListNamespacesIterator */
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_next(): boolean
    vfunc_has_next(): boolean
    vfunc_get(): object | null
    vfunc_remove(): void
    vfunc_get_valid(): boolean
    vfunc_get_read_only(): boolean
    vfunc_set(item?: object | null): void
    vfunc_add(item?: object | null): void
    vfunc_index(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::valid", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valid", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: GListNamespacesIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GListNamespacesIterator_ConstructProps)
    _init (config?: GListNamespacesIterator_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(node?: object | null): GListNamespacesIterator
    static unfold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.UnfoldFunc, current?: Gee.Lazy | null): Gee.Iterator
    static concat(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, iters: Gee.Iterator): Gee.Iterator
    static $gtype: GObject.Type
}
export interface GNamespace_ConstructProps extends GObject.Object_ConstructProps {
}
export class GNamespace {
    /* Properties of GXml.Namespace */
    readonly uri: string
    readonly prefix: string
    /* Fields of GXml.GNamespace */
    parent_instance: GObject.Object
    priv: GNamespacePrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNamespace */
    get_internal_ns(): object | null
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Namespace */
    get_uri(): string | null
    get_prefix(): string | null
    /* Virtual methods of GXml.GNamespace */
    vfunc_get_uri(): string | null
    vfunc_get_prefix(): string | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::uri", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: GNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GNamespace_ConstructProps)
    _init (config?: GNamespace_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(ns?: object | null): GNamespace
    static $gtype: GObject.Type
}
export interface GNode_ConstructProps extends GObject.Object_ConstructProps {
    value?: string
    owner_document?: DomDocument
    node_value?: string
    text_content?: string
}
export class GNode {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.DomNode */
    readonly node_type: DomNodeNodeType
    readonly node_name: string
    readonly base_uri: string
    owner_document: DomDocument
    readonly parent_node: DomNode
    readonly parent_element: DomElement
    readonly child_nodes: DomNodeList
    readonly first_child: DomNode
    readonly last_child: DomNode
    readonly previous_sibling: DomNode
    readonly next_sibling: DomNode
    node_value: string
    text_content: string
    /* Fields of GXml.GNode */
    parent_instance: GObject.Object
    priv: GNodePrivate
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.DomEventTarget */
    add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    dispatch_event(event: DomEvent): boolean
    /* Methods of GXml.DomNode */
    has_child_nodes(): boolean
    normalize(): void
    is_equal_node(node?: DomNode | null): boolean
    compare_document_position(other: DomNode): DomNodeDocumentPosition
    contains(other?: DomNode | null): boolean
    lookup_prefix(nspace?: string | null): string | null
    lookup_namespace_uri(prefix?: string | null): string | null
    is_default_namespace(nspace?: string | null): boolean
    insert_before(node: DomNode, child?: DomNode | null): DomNode
    append_child(node: DomNode): DomNode
    replace_child(node: DomNode, child: DomNode): DomNode
    remove_child(child: DomNode): DomNode
    clone_node(deep: boolean): DomNode
    get_node_type(): DomNodeNodeType
    get_node_name(): string
    get_base_uri(): string | null
    get_owner_document(): DomDocument | null
    set_owner_document(value?: DomDocument | null): void
    get_parent_node(): DomNode | null
    get_parent_element(): DomElement | null
    get_child_nodes(): DomNodeList
    get_first_child(): DomNode | null
    get_last_child(): DomNode | null
    get_previous_sibling(): DomNode | null
    get_next_sibling(): DomNode | null
    get_node_value(): string | null
    set_node_value(value?: string | null): void
    get_text_content(): string | null
    set_text_content(value?: string | null): void
    /* Methods of GXml.Node */
    get(key: string): Node | null
    get_elements_by_property_value(property: string, value: string): ElementList
    get_elements_by_name(name: string): ElementList
    get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    ns_prefix(): string
    ns_uri(): string
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: GNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GNode_ConstructProps)
    _init (config?: GNode_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static to_gnode(doc: GDocument, node?: object | null): Node
    static copy(doc: DomDocument, node: DomNode, source: DomNode, deep: boolean): boolean
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static $gtype: GObject.Type
}
export interface GProcessingInstruction_ConstructProps extends GCharacterData_ConstructProps {
    data?: string
}
export class GProcessingInstruction {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.ProcessingInstruction */
    readonly target: string
    data: string
    /* Properties of GXml.DomCharacterData */
    readonly length: number
    /* Fields of GXml.GProcessingInstruction */
    parent_instance: GCharacterData
    priv: GProcessingInstructionPrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.ProcessingInstruction */
    get_target(): string
    get_data(): string
    set_data(value: string): void
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_length(): number
    /* Virtual methods of GXml.GProcessingInstruction */
    vfunc_get_target(): string
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    /* Virtual methods of GXml.GCharacterData */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GNonDocumentChildNode */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GProcessingInstruction_ConstructProps)
    _init (config?: GProcessingInstruction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GProcessingInstruction
    static new(): GProcessingInstruction
    static $gtype: GObject.Type
}
export interface GText_ConstructProps extends GCharacterData_ConstructProps {
    str?: string
    data?: string
}
export class GText {
    /* Properties of GXml.GNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly namespaces: Gee.List
    readonly document: Document
    readonly parent: Node
    readonly type_node: NodeType
    readonly name: string
    value: string
    /* Properties of GXml.Text */
    str: string
    /* Properties of GXml.DomText */
    readonly whole_text: string
    /* Properties of GXml.DomCharacterData */
    data: string
    readonly length: number
    /* Fields of GXml.GText */
    parent_instance: GCharacterData
    priv: GTextPrivate
    /* Fields of GXml.GNode */
    _doc: GDocument
    _node: object | null
    _base_uri: string
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.GNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    get_internal_node(): object | null
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_namespaces(): Gee.List
    get_document(): Document
    get_parent(): Node
    get_type_node(): NodeType
    get_name(): string
    get_value(): string
    set_value(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Text */
    get_str(): string
    set_str(value: string): void
    /* Methods of GXml.DomText */
    split_text(offset: number): DomText
    get_whole_text(): string
    /* Methods of GXml.DomCharacterData */
    substring_data(offset: number, count: number): string
    append_data(data: string): void
    insert_data(offset: number, data: string): void
    delete_data(offset: number, count: number): void
    replace_data(offset: number, count: number, data: string): void
    get_data(): string
    set_data(value: string): void
    get_length(): number
    /* Virtual methods of GXml.GText */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    vfunc_split_text(offset: number): DomText
    vfunc_get_whole_text(): string
    /* Virtual methods of GXml.GCharacterData */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    vfunc_substring_data(offset: number, count: number): string
    vfunc_append_data(data: string): void
    vfunc_insert_data(offset: number, data: string): void
    vfunc_delete_data(offset: number, count: number): void
    vfunc_replace_data(offset: number, count: number, data: string): void
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    vfunc_get_length(): number
    /* Virtual methods of GXml.GNonDocumentChildNode */
    vfunc_get_previous_element_sibling(): DomElement | null
    vfunc_get_next_element_sibling(): DomElement | null
    /* Virtual methods of GXml.GChildNode */
    vfunc_remove(): void
    /* Virtual methods of GXml.GNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_namespaces(): Gee.List
    vfunc_get_document(): Document
    vfunc_get_parent(): Node
    vfunc_get_type_node(): NodeType
    vfunc_get_name(): string
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_add_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_remove_event_listener(type: string, callback: DomEventListener | null, capture: boolean): void
    vfunc_dispatch_event(event: DomEvent): boolean
    vfunc_has_child_nodes(): boolean
    vfunc_normalize(): void
    vfunc_is_equal_node(node?: DomNode | null): boolean
    vfunc_compare_document_position(other: DomNode): DomNodeDocumentPosition
    vfunc_contains(other?: DomNode | null): boolean
    vfunc_lookup_prefix(nspace?: string | null): string | null
    vfunc_lookup_namespace_uri(prefix?: string | null): string | null
    vfunc_is_default_namespace(nspace?: string | null): boolean
    vfunc_insert_before(node: DomNode, child?: DomNode | null): DomNode
    vfunc_append_child(node: DomNode): DomNode
    vfunc_replace_child(node: DomNode, child: DomNode): DomNode
    vfunc_remove_child(child: DomNode): DomNode
    vfunc_clone_node(deep: boolean): DomNode
    vfunc_get_node_type(): DomNodeNodeType
    vfunc_get_node_name(): string
    vfunc_get_base_uri(): string | null
    vfunc_get_owner_document(): DomDocument | null
    vfunc_set_owner_document(value?: DomDocument | null): void
    vfunc_get_parent_node(): DomNode | null
    vfunc_get_parent_element(): DomElement | null
    vfunc_get_child_nodes(): DomNodeList
    vfunc_get_first_child(): DomNode | null
    vfunc_get_last_child(): DomNode | null
    vfunc_get_previous_sibling(): DomNode | null
    vfunc_get_next_sibling(): DomNode | null
    vfunc_get_node_value(): string | null
    vfunc_set_node_value(value?: string | null): void
    vfunc_get_text_content(): string | null
    vfunc_set_text_content(value?: string | null): void
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::str", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::whole-text", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: GText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GText_ConstructProps)
    _init (config?: GText_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: GDocument, node?: object | null): GText
    static new(): GText
    static $gtype: GObject.Type
}
export interface GXPathObject_ConstructProps extends GObject.Object_ConstructProps {
}
export class GXPathObject {
    /* Properties of GXml.XPathObject */
    readonly object_type: XPathObjectType
    readonly boolean_value: boolean
    readonly string_value: string
    readonly number_value: number
    readonly nodeset: DomHTMLCollection
    /* Fields of GXml.GXPathObject */
    parent_instance: GObject.Object
    priv: GXPathObjectPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.XPathObject */
    get_object_type(): XPathObjectType
    get_boolean_value(): boolean
    get_string_value(): string
    get_number_value(): number
    get_nodeset(): DomHTMLCollection
    /* Virtual methods of GXml.GXPathObject */
    vfunc_get_object_type(): XPathObjectType
    vfunc_get_boolean_value(): boolean
    vfunc_get_string_value(): string
    vfunc_get_number_value(): number
    vfunc_get_nodeset(): DomHTMLCollection
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::object-type", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object-type", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::boolean-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::boolean-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::string-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::string-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::number-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::number-value", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nodeset", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nodeset", callback: (($obj: GXPathObject, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: GXPathObject_ConstructProps)
    _init (config?: GXPathObject_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(document: GDocument, pointer?: object | null): GXPathObject
    static $gtype: GObject.Type
}
export interface NodeList_ConstructProps extends Gee.ArrayList_ConstructProps {
}
export class NodeList {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Fields of GXml.NodeList */
    parent_instance: Gee.ArrayList
    priv: NodeListPrivate
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.NodeList */
    get(index: number): Node
    to_array(): Node[]
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.NodeList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: NodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: NodeList_ConstructProps)
    _init (config?: NodeList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): NodeList
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): NodeList
    static $gtype: GObject.Type
}
export interface SerializableBool_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableBool {
    /* Fields of GXml.SerializableBool */
    parent_instance: GObject.Object
    priv: SerializableBoolPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableBool */
    get_value(): boolean
    set_value(val: boolean): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.SerializableProperty */
    get_serializable_property_value(): string
    set_serializable_property_value(val?: string | null): void
    deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_serialize_property(element: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    /* Virtual methods of GXml.SerializableBool */
    vfunc_get_serializable_property_value(): string
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableBool, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableBool, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableBool_ConstructProps)
    _init (config?: SerializableBool_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableBool
    static $gtype: GObject.Type
}
export interface SerializableContainer_ConstructProps extends SerializableObjectModel_ConstructProps {
}
export class SerializableContainer {
    /* Properties of GXml.SerializableObjectModel */
    ignored_serializable_properties: GLib.HashTable
    /* Fields of GXml.SerializableContainer */
    parent_instance: SerializableObjectModel
    priv: SerializableContainerPrivate
    /* Fields of GXml.SerializableObjectModel */
    _node: Node
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableContainer */
    init_containers(): void
    /* Methods of GXml.SerializableObjectModel */
    get_enable_unknown_serializable_property(): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    set_default_namespace(node: Node): boolean
    node_name(): string
    default_node_name(): string
    find_property_spec(property_name: string): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Element, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    to_string(): string
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.SerializableContainer */
    vfunc_init_containers(): void
    /* Virtual methods of GXml.SerializableObjectModel */
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_node_name(): string
    vfunc_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_to_string(): string
    vfunc_default_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableContainer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableContainer, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableContainer, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableContainer, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableContainer_ConstructProps)
    _init (config?: SerializableContainer_ConstructProps): void
    static $gtype: GObject.Type
}
export interface SerializableDouble_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableDouble {
    /* Fields of GXml.SerializableDouble */
    parent_instance: GObject.Object
    priv: SerializableDoublePrivate
    _val: string
    _fraction: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableDouble */
    get_fraction(): number
    set_fraction(fraction: number): void
    get_value(): number
    set_value(val: number): void
    to_string(): string
    format(f: string): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.SerializableProperty */
    get_serializable_property_value(): string
    set_serializable_property_value(val?: string | null): void
    deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_serialize_property(element: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    /* Virtual methods of GXml.SerializableDouble */
    vfunc_get_serializable_property_value(): string
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableDouble, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableDouble, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableDouble_ConstructProps)
    _init (config?: SerializableDouble_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableDouble
    static $gtype: GObject.Type
}
export interface SerializableEnum_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableEnum {
    /* Fields of GXml.SerializableEnum */
    parent_instance: GObject.Object
    priv: SerializableEnumPrivate
    _val: string
    _enumtype: GObject.Type
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableEnum */
    set_enum_type(type: GObject.Type): void
    get_enum_type(): GObject.Type
    parse(str: string): void
    parse_integer(v: number): void
    to_integer(): number
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.SerializableProperty */
    get_serializable_property_value(): string
    set_serializable_property_value(val?: string | null): void
    deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_serialize_property(element: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    /* Virtual methods of GXml.SerializableEnum */
    vfunc_get_serializable_property_value(): string
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableEnum, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableEnum, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableEnum_ConstructProps)
    _init (config?: SerializableEnum_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static with_enum(type: GObject.Type): SerializableEnum
    static new(): SerializableEnum
    static $gtype: GObject.Type
}
export interface SerializableFloat_ConstructProps extends SerializableDouble_ConstructProps {
}
export class SerializableFloat {
    /* Fields of GXml.SerializableFloat */
    parent_instance: SerializableDouble
    priv: SerializableFloatPrivate
    /* Fields of GXml.SerializableDouble */
    _val: string
    _fraction: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableFloat */
    get_value(): number
    set_value(val: number): void
    /* Methods of GXml.SerializableDouble */
    get_fraction(): number
    set_fraction(fraction: number): void
    to_string(): string
    format(f: string): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.SerializableDouble */
    vfunc_get_serializable_property_value(): string
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableFloat, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableFloat, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableFloat_ConstructProps)
    _init (config?: SerializableFloat_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableFloat
    static $gtype: GObject.Type
}
export interface SerializableArrayList_ConstructProps extends Gee.ArrayList_ConstructProps {
    ignored_serializable_properties?: GLib.HashTable
    serialized_xml_node_value?: string
}
export class SerializableArrayList {
    /* Properties of GXml.SerializableArrayList */
    ignored_serializable_properties: GLib.HashTable
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Properties of GXml.Serializable */
    readonly unknown_serializable_properties: Gee.Map
    readonly unknown_serializable_nodes: Gee.Collection
    serialized_xml_node_value: string
    /* Fields of GXml.SerializableArrayList */
    parent_instance: Gee.ArrayList
    priv: SerializableArrayListPrivate
    _node: Node
    _deserialized: boolean
    /* Fields of Gee.ArrayList */
    _items: object[]
    _items_length1: number
    _size: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableArrayList */
    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    set_default_namespace(node: Node): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string
    find_property_spec(property_name: string): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void
    /* Methods of Gee.ArrayList */
    add_all(collection: Gee.Collection): boolean
    get_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Serializable */
    get_enable_unknown_serializable_property(): boolean
    default_find_property_spec(property_name: string): GObject.ParamSpec | null
    default_list_serializable_properties(): GObject.ParamSpec[]
    get_unknown_serializable_properties(): Gee.Map
    get_unknown_serializable_nodes(): Gee.Collection
    get_serialized_xml_node_value(): string | null
    set_serialized_xml_node_value(value?: string | null): void
    /* Methods of GXml.SerializableCollection */
    is_collection(): boolean
    /* Virtual methods of GXml.SerializableArrayList */
    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string
    vfunc_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_default_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void
    vfunc_is_collection(): boolean
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.ArrayList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of GXml.Serializable */
    connect(sigName: "serialize-unknown-property", callback: (($obj: SerializableArrayList, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property", callback: (($obj: SerializableArrayList, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableArrayList, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableArrayList, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property-type", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property", callback: (($obj: SerializableArrayList, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property", callback: (($obj: SerializableArrayList, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableArrayList, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableArrayList, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property-type", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only-view", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableArrayList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableArrayList_ConstructProps)
    _init (config?: SerializableArrayList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableArrayList
    static new(g_type: GObject.Type, g_dup_func: GObject.BoxedCopyFunc, g_destroy_func: GLib.DestroyNotify, equal_func: Gee.EqualDataFunc | null): SerializableArrayList
    static string_to_gvalue(str: string, dest: any): [ /* returnType */ boolean, /* dest */ any ]
    static gvalue_to_string(val: any): string
    static $gtype: GObject.Type
}
export interface SerializableDualKeyMap_ConstructProps extends GObject.Object_ConstructProps {
    ignored_serializable_properties?: GLib.HashTable
    serialized_xml_node_value?: string
}
export class SerializableDualKeyMap {
    /* Properties of GXml.SerializableDualKeyMap */
    readonly value_type: GObject.Type
    readonly primary_key_type: GObject.Type
    readonly secondary_key_type: GObject.Type
    readonly primary_keys: Gee.Collection
    readonly size: number
    ignored_serializable_properties: GLib.HashTable
    /* Properties of GXml.Serializable */
    readonly unknown_serializable_properties: Gee.Map
    readonly unknown_serializable_nodes: Gee.Collection
    serialized_xml_node_value: string
    /* Fields of GXml.SerializableDualKeyMap */
    parent_instance: GObject.Object
    priv: SerializableDualKeyMapPrivate
    storage: Gee.HashMultiMap
    _node: Node
    _deserialized: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableDualKeyMap */
    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    secondary_keys(key?: object | null): Gee.Collection
    values_for_key(primary_key?: object | null): Gee.Collection
    values(): Gee.Collection
    set(primary_key?: object | null, secundary_key?: object | null, val?: object | null): void
    get(primary_key?: object | null, secondary_key?: object | null): object | null
    set_default_namespace(node: Node): boolean
    get_enable_unknown_serializable_property(): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string
    find_property_spec(property_name: string): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_value_type(): GObject.Type
    get_primary_key_type(): GObject.Type
    get_secondary_key_type(): GObject.Type
    get_primary_keys(): Gee.Collection
    get_size(): number
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gee.Traversable */
    foreach(f: Gee.ForallFunc): boolean
    stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    filter(pred: Gee.Predicate): Gee.Iterator
    chop(offset: number, length: number): Gee.Iterator
    flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    tee(forks: number): Gee.Iterator[]
    first_match(pred: Gee.Predicate): object | null
    any_match(pred: Gee.Predicate): boolean
    all_match(pred: Gee.Predicate): boolean
    max(compare: GLib.CompareDataFunc): object | null
    min(compare: GLib.CompareDataFunc): object | null
    order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    get_element_type(): GObject.Type
    /* Methods of GXml.Serializable */
    default_find_property_spec(property_name: string): GObject.ParamSpec | null
    default_list_serializable_properties(): GObject.ParamSpec[]
    get_unknown_serializable_properties(): Gee.Map
    get_unknown_serializable_nodes(): Gee.Collection
    get_serialized_xml_node_value(): string | null
    set_serialized_xml_node_value(value?: string | null): void
    /* Methods of GXml.SerializableCollection */
    is_collection(): boolean
    /* Virtual methods of GXml.SerializableDualKeyMap */
    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string
    vfunc_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_default_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void
    vfunc_is_collection(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of GXml.Serializable */
    connect(sigName: "serialize-unknown-property", callback: (($obj: SerializableDualKeyMap, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property", callback: (($obj: SerializableDualKeyMap, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableDualKeyMap, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableDualKeyMap, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property-type", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property", callback: (($obj: SerializableDualKeyMap, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property", callback: (($obj: SerializableDualKeyMap, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableDualKeyMap, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableDualKeyMap, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property-type", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "notify::value-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secondary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secondary-key-type", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::primary-keys", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::primary-keys", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableDualKeyMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableDualKeyMap_ConstructProps)
    _init (config?: SerializableDualKeyMap_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableDualKeyMap
    static string_to_gvalue(str: string, dest: any): [ /* returnType */ boolean, /* dest */ any ]
    static gvalue_to_string(val: any): string
    static $gtype: GObject.Type
}
export interface SerializableHashMap_ConstructProps extends Gee.HashMap_ConstructProps {
    ignored_serializable_properties?: GLib.HashTable
    serialized_xml_node_value?: string
}
export class SerializableHashMap {
    /* Properties of GXml.SerializableHashMap */
    ignored_serializable_properties: GLib.HashTable
    /* Properties of Gee.AbstractMap */
    readonly size: number
    readonly read_only: boolean
    readonly keys: Gee.Set
    readonly values: Gee.Collection
    readonly entries: Gee.Set
    readonly read_only_view: Gee.Map
    /* Properties of GXml.Serializable */
    readonly unknown_serializable_properties: Gee.Map
    readonly unknown_serializable_nodes: Gee.Collection
    serialized_xml_node_value: string
    /* Fields of GXml.SerializableHashMap */
    parent_instance: Gee.HashMap
    priv: SerializableHashMapPrivate
    _node: Node
    _deserialized: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableHashMap */
    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    set_default_namespace(node: Node): boolean
    get_enable_unknown_serializable_property(): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string
    find_property_spec(property_name: string): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void
    /* Methods of Gee.HashMap */
    get_key_hash_func(): [ /* returnType */ Gee.HashDataFunc, /* result_target */ object | null ]
    get_key_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    get_value_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractMap */
    has_key(key?: object | null): boolean
    has(key?: object | null, value?: object | null): boolean
    get(key?: object | null): object | null
    set(key?: object | null, value?: object | null): void
    unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    map_iterator(): Gee.MapIterator
    clear(): void
    foreach(f: Gee.ForallFunc): boolean
    stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_size(): number
    get_read_only(): boolean
    get_keys(): Gee.Set
    get_values(): Gee.Collection
    get_entries(): Gee.Set
    get_read_only_view(): Gee.Map
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Serializable */
    default_find_property_spec(property_name: string): GObject.ParamSpec | null
    default_list_serializable_properties(): GObject.ParamSpec[]
    get_unknown_serializable_properties(): Gee.Map
    get_unknown_serializable_nodes(): Gee.Collection
    get_serialized_xml_node_value(): string | null
    set_serialized_xml_node_value(value?: string | null): void
    /* Methods of GXml.SerializableCollection */
    is_collection(): boolean
    /* Virtual methods of GXml.SerializableHashMap */
    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string
    vfunc_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_default_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void
    vfunc_is_collection(): boolean
    /* Virtual methods of Gee.AbstractMap */
    vfunc_has_key(key?: object | null): boolean
    vfunc_has(key?: object | null, value?: object | null): boolean
    vfunc_get(key?: object | null): object | null
    vfunc_set(key?: object | null, value?: object | null): void
    vfunc_unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    vfunc_map_iterator(): Gee.MapIterator
    vfunc_clear(): void
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_keys(): Gee.Set
    vfunc_get_values(): Gee.Collection
    vfunc_get_entries(): Gee.Set
    vfunc_get_read_only_view(): Gee.Map
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_iterator(): Gee.Iterator
    vfunc_set_all(map: Gee.Map): void
    vfunc_unset_all(map: Gee.Map): boolean
    vfunc_has_all(map: Gee.Map): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of GXml.Serializable */
    connect(sigName: "serialize-unknown-property", callback: (($obj: SerializableHashMap, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property", callback: (($obj: SerializableHashMap, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableHashMap, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableHashMap, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property-type", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property", callback: (($obj: SerializableHashMap, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property", callback: (($obj: SerializableHashMap, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableHashMap, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableHashMap, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property-type", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::keys", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::values", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::entries", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only-view", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableHashMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableHashMap_ConstructProps)
    _init (config?: SerializableHashMap_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableHashMap
    static new(k_type: GObject.Type, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.Type, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify, key_hash_func: Gee.HashDataFunc | null, key_equal_func: Gee.EqualDataFunc | null, value_equal_func: Gee.EqualDataFunc | null): SerializableHashMap
    static string_to_gvalue(str: string, dest: any): [ /* returnType */ boolean, /* dest */ any ]
    static gvalue_to_string(val: any): string
    static $gtype: GObject.Type
}
export interface SerializableTreeMap_ConstructProps extends Gee.TreeMap_ConstructProps {
    ignored_serializable_properties?: GLib.HashTable
    serialized_xml_node_value?: string
}
export class SerializableTreeMap {
    /* Properties of GXml.SerializableTreeMap */
    ignored_serializable_properties: GLib.HashTable
    /* Properties of Gee.AbstractBidirSortedMap */
    readonly read_only_view: Gee.BidirSortedMap
    /* Properties of Gee.AbstractSortedMap */
    readonly ascending_keys: Gee.SortedSet
    readonly ascending_entries: Gee.SortedSet
    /* Properties of Gee.AbstractMap */
    readonly size: number
    readonly read_only: boolean
    readonly keys: Gee.Set
    readonly values: Gee.Collection
    readonly entries: Gee.Set
    /* Properties of GXml.Serializable */
    readonly unknown_serializable_properties: Gee.Map
    readonly unknown_serializable_nodes: Gee.Collection
    serialized_xml_node_value: string
    /* Fields of GXml.SerializableTreeMap */
    parent_instance: Gee.TreeMap
    priv: SerializableTreeMapPrivate
    _node: Node
    _deserialized: boolean
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableTreeMap */
    deserialize_proceed(): boolean
    deserialized(): boolean
    deserialize_node(node: Node): boolean
    deserialize_children(): boolean
    set_default_namespace(node: Node): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    node_name(): string
    find_property_spec(property_name: string): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void
    /* Methods of Gee.TreeMap */
    get_key_compare_func(): [ /* returnType */ GLib.CompareDataFunc, /* result_target */ object | null ]
    get_value_equal_func(): [ /* returnType */ Gee.EqualDataFunc, /* result_target */ object | null ]
    /* Methods of Gee.AbstractBidirSortedMap */
    bidir_map_iterator(): Gee.BidirMapIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirSortedMap
    /* Methods of Gee.AbstractSortedMap */
    head_map(before?: object | null): Gee.SortedMap
    tail_map(after?: object | null): Gee.SortedMap
    sub_map(before?: object | null, after?: object | null): Gee.SortedMap
    get_ascending_keys(): Gee.SortedSet
    get_ascending_entries(): Gee.SortedSet
    /* Methods of Gee.AbstractMap */
    has_key(key?: object | null): boolean
    has(key?: object | null, value?: object | null): boolean
    get(key?: object | null): object | null
    set(key?: object | null, value?: object | null): void
    unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    map_iterator(): Gee.MapIterator
    clear(): void
    foreach(f: Gee.ForallFunc): boolean
    stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    get_size(): number
    get_read_only(): boolean
    get_keys(): Gee.Set
    get_values(): Gee.Collection
    get_entries(): Gee.Set
    get_read_only_view(): Gee.Map
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Serializable */
    get_enable_unknown_serializable_property(): boolean
    default_find_property_spec(property_name: string): GObject.ParamSpec | null
    default_list_serializable_properties(): GObject.ParamSpec[]
    get_unknown_serializable_properties(): Gee.Map
    get_unknown_serializable_nodes(): Gee.Collection
    get_serialized_xml_node_value(): string | null
    set_serialized_xml_node_value(value?: string | null): void
    /* Methods of GXml.SerializableCollection */
    is_collection(): boolean
    /* Virtual methods of GXml.SerializableTreeMap */
    vfunc_deserialize_proceed(): boolean
    vfunc_deserialized(): boolean
    vfunc_deserialize_node(node: Node): boolean
    vfunc_deserialize_children(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_node_name(): string
    vfunc_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_default_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void
    vfunc_is_collection(): boolean
    vfunc_get_read_only_view(): Gee.BidirSortedMap
    vfunc_get_read_only_view(): Gee.SortedMap
    vfunc_get_read_only_view(): Gee.Map
    /* Virtual methods of Gee.TreeMap */
    vfunc_get_read_only_view(): Gee.BidirSortedMap
    vfunc_get_read_only_view(): Gee.SortedMap
    vfunc_get_read_only_view(): Gee.Map
    /* Virtual methods of Gee.AbstractBidirSortedMap */
    vfunc_bidir_map_iterator(): Gee.BidirMapIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirSortedMap
    vfunc_get_read_only_view(): Gee.SortedMap
    vfunc_get_read_only_view(): Gee.Map
    /* Virtual methods of Gee.AbstractSortedMap */
    vfunc_head_map(before?: object | null): Gee.SortedMap
    vfunc_tail_map(after?: object | null): Gee.SortedMap
    vfunc_sub_map(before?: object | null, after?: object | null): Gee.SortedMap
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_ascending_keys(): Gee.SortedSet
    vfunc_get_ascending_entries(): Gee.SortedSet
    vfunc_get_read_only_view(): Gee.SortedMap
    vfunc_get_read_only_view(): Gee.Map
    /* Virtual methods of Gee.AbstractMap */
    vfunc_has_key(key?: object | null): boolean
    vfunc_has(key?: object | null, value?: object | null): boolean
    vfunc_get(key?: object | null): object | null
    vfunc_set(key?: object | null, value?: object | null): void
    vfunc_unset(key?: object | null): [ /* returnType */ boolean, /* value */ object | null ]
    vfunc_map_iterator(): Gee.MapIterator
    vfunc_clear(): void
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_keys(): Gee.Set
    vfunc_get_values(): Gee.Collection
    vfunc_get_entries(): Gee.Set
    vfunc_get_read_only_view(): Gee.Map
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_iterator(): Gee.Iterator
    vfunc_set_all(map: Gee.Map): void
    vfunc_unset_all(map: Gee.Map): boolean
    vfunc_has_all(map: Gee.Map): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of GXml.Serializable */
    connect(sigName: "serialize-unknown-property", callback: (($obj: SerializableTreeMap, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property", callback: (($obj: SerializableTreeMap, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableTreeMap, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableTreeMap, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property-type", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property", callback: (($obj: SerializableTreeMap, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property", callback: (($obj: SerializableTreeMap, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableTreeMap, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableTreeMap, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property-type", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only-view", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ascending-keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ascending-keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ascending-entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ascending-entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keys", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::values", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::values", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entries", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableTreeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableTreeMap_ConstructProps)
    _init (config?: SerializableTreeMap_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableTreeMap
    static new(k_type: GObject.Type, k_dup_func: GObject.BoxedCopyFunc, k_destroy_func: GLib.DestroyNotify, v_type: GObject.Type, v_dup_func: GObject.BoxedCopyFunc, v_destroy_func: GLib.DestroyNotify, key_compare_func: GLib.CompareDataFunc | null, value_equal_func: Gee.EqualDataFunc | null): SerializableTreeMap
    static string_to_gvalue(str: string, dest: any): [ /* returnType */ boolean, /* dest */ any ]
    static gvalue_to_string(val: any): string
    static $gtype: GObject.Type
}
export interface SerializableInt_ConstructProps extends SerializableDouble_ConstructProps {
}
export class SerializableInt {
    /* Fields of GXml.SerializableInt */
    parent_instance: SerializableDouble
    priv: SerializableIntPrivate
    /* Fields of GXml.SerializableDouble */
    _val: string
    _fraction: number
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableInt */
    get_value(): number
    set_value(val: number): void
    /* Methods of GXml.SerializableDouble */
    get_fraction(): number
    set_fraction(fraction: number): void
    to_string(): string
    format(f: string): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.SerializableDouble */
    vfunc_get_serializable_property_value(): string
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableInt, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableInt, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableInt_ConstructProps)
    _init (config?: SerializableInt_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableInt
    static $gtype: GObject.Type
}
export interface SerializableObjectModel_ConstructProps extends GObject.Object_ConstructProps {
    ignored_serializable_properties?: GLib.HashTable
    serialized_xml_node_value?: string
}
export class SerializableObjectModel {
    /* Properties of GXml.SerializableObjectModel */
    ignored_serializable_properties: GLib.HashTable
    /* Properties of GXml.Serializable */
    readonly unknown_serializable_properties: Gee.Map
    readonly unknown_serializable_nodes: Gee.Collection
    serialized_xml_node_value: string
    /* Fields of GXml.SerializableObjectModel */
    parent_instance: GObject.Object
    priv: SerializableObjectModelPrivate
    _node: Node
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableObjectModel */
    get_enable_unknown_serializable_property(): boolean
    serialize_use_xml_node_value(): boolean
    property_use_nick(): boolean
    set_default_namespace(node: Node): boolean
    node_name(): string
    default_node_name(): string
    find_property_spec(property_name: string): GObject.ParamSpec | null
    list_serializable_properties(): GObject.ParamSpec[]
    serialize(node: Node): Node | null
    default_serialize(node: Node): Node | null
    serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    default_serialize_property(element: Element, prop: GObject.ParamSpec): Node | null
    deserialize(node: Node): boolean
    default_deserialize(node: Node): boolean
    deserialize_property(property_node: Node): boolean
    default_deserialize_property(property_node: Node): boolean
    to_string(): string
    get_ignored_serializable_properties(): GLib.HashTable
    set_ignored_serializable_properties(value: GLib.HashTable): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Serializable */
    default_find_property_spec(property_name: string): GObject.ParamSpec | null
    default_list_serializable_properties(): GObject.ParamSpec[]
    get_unknown_serializable_properties(): Gee.Map
    get_unknown_serializable_nodes(): Gee.Collection
    get_serialized_xml_node_value(): string | null
    set_serialized_xml_node_value(value?: string | null): void
    /* Virtual methods of GXml.SerializableObjectModel */
    vfunc_get_enable_unknown_serializable_property(): boolean
    vfunc_serialize_use_xml_node_value(): boolean
    vfunc_property_use_nick(): boolean
    vfunc_set_default_namespace(node: Node): boolean
    vfunc_node_name(): string
    vfunc_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_serialize(node: Node): Node | null
    vfunc_serialize_property(element: Node, prop: GObject.ParamSpec): Node | null
    vfunc_deserialize(node: Node): boolean
    vfunc_deserialize_property(property_node: Node): boolean
    vfunc_to_string(): string
    vfunc_default_find_property_spec(property_name: string): GObject.ParamSpec | null
    vfunc_default_list_serializable_properties(): GObject.ParamSpec[]
    vfunc_get_unknown_serializable_properties(): Gee.Map
    vfunc_get_unknown_serializable_nodes(): Gee.Collection
    vfunc_get_serialized_xml_node_value(): string | null
    vfunc_set_serialized_xml_node_value(value?: string | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    /* Signals of GXml.Serializable */
    connect(sigName: "serialize-unknown-property", callback: (($obj: SerializableObjectModel, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property", callback: (($obj: SerializableObjectModel, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableObjectModel, element: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "serialize-unknown-property-type", callback: (($obj: SerializableObjectModel, element: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "serialize-unknown-property-type", element: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property", callback: (($obj: SerializableObjectModel, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property", callback: (($obj: SerializableObjectModel, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableObjectModel, node: Node, prop: GObject.ParamSpec) => void)): number
    connect_after(sigName: "deserialize-unknown-property-type", callback: (($obj: SerializableObjectModel, node: Node, prop: GObject.ParamSpec) => void)): number
    emit(sigName: "deserialize-unknown-property-type", node: Node, prop: GObject.ParamSpec): void
    connect(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ignored-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-properties", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unknown-serializable-nodes", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::serialized-xml-node-value", callback: (($obj: SerializableObjectModel, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableObjectModel_ConstructProps)
    _init (config?: SerializableObjectModel_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static string_to_gvalue(str: string, dest: any): [ /* returnType */ boolean, /* dest */ any ]
    static gvalue_to_string(val: any): string
    static $gtype: GObject.Type
}
export interface SerializableValueList_ConstructProps extends GObject.Object_ConstructProps {
}
export class SerializableValueList {
    /* Fields of GXml.SerializableValueList */
    parent_instance: GObject.Object
    priv: SerializableValueListPrivate
    _vals: string[]
    extra: Gee.ArrayList
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.SerializableValueList */
    get_values(): Gee.List
    add_values(vals: string[]): void
    get_value_at(index: number): string | null
    select_value_at(index: number): void
    get_values_array(): string[]
    is_value(): boolean
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.SerializableProperty */
    get_serializable_property_value(): string
    set_serializable_property_value(val?: string | null): void
    deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_serialize_property(element: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    default_serializable_property_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    /* Virtual methods of GXml.SerializableValueList */
    vfunc_get_values(): Gee.List
    vfunc_add_values(vals: string[]): void
    vfunc_get_value_at(index: number): string | null
    vfunc_select_value_at(index: number): void
    vfunc_get_values_array(): string[]
    vfunc_is_value(): boolean
    vfunc_get_serializable_property_value(): string
    vfunc_set_serializable_property_value(val?: string | null): void
    vfunc_deserialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): boolean
    vfunc_serialize_property(property_node: Node, prop: GObject.ParamSpec, nick: boolean): Node | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: SerializableValueList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: SerializableValueList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: SerializableValueList_ConstructProps)
    _init (config?: SerializableValueList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): SerializableValueList
    static $gtype: GObject.Type
}
export interface TAttribute_ConstructProps extends TNode_ConstructProps {
    namespace?: Namespace
}
export class TAttribute {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.Attribute */
    namespace: Namespace
    readonly prefix: string
    /* Fields of GXml.TAttribute */
    parent_instance: TNode
    priv: TAttributePrivate
    _namespaces: Gee.ArrayList
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Attribute */
    get_namespace(): Namespace | null
    set_namespace(value?: Namespace | null): void
    get_prefix(): string | null
    /* Virtual methods of GXml.TAttribute */
    vfunc_get_namespace(): Namespace | null
    vfunc_set_namespace(value?: Namespace | null): void
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_get_prefix(): string | null
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: TAttribute, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TAttribute_ConstructProps)
    _init (config?: TAttribute_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(d: Document, name: string, value: string): TAttribute
    static $gtype: GObject.Type
}
export interface TCDATA_ConstructProps extends TNode_ConstructProps {
}
export class TCDATA {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.CDATA */
    readonly str: string
    /* Fields of GXml.TCDATA */
    parent_instance: TNode
    priv: TCDATAPrivate
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.CDATA */
    get_str(): string
    /* Virtual methods of GXml.TCDATA */
    vfunc_get_str(): string
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::str", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: TCDATA, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TCDATA_ConstructProps)
    _init (config?: TCDATA_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(d: Document, text: string): TCDATA
    static $gtype: GObject.Type
}
export interface TComment_ConstructProps extends TNode_ConstructProps {
    str?: string
}
export class TComment {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.Comment */
    str: string
    /* Fields of GXml.TComment */
    parent_instance: TNode
    priv: TCommentPrivate
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Comment */
    get_str(): string
    set_str(value: string): void
    /* Virtual methods of GXml.TComment */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::str", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: TComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TComment_ConstructProps)
    _init (config?: TComment_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: Document, text: string): TComment
    static $gtype: GObject.Type
}
export interface TDocument_ConstructProps extends TNode_ConstructProps {
    indent?: boolean
    ns_top?: boolean
    prefix_default_ns?: boolean
    backup?: boolean
    file?: Gio.File
}
export class TDocument {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.Document */
    indent: boolean
    ns_top: boolean
    prefix_default_ns: boolean
    backup: boolean
    readonly root: Node
    file: Gio.File
    /* Fields of GXml.TDocument */
    parent_instance: TNode
    priv: TDocumentPrivate
    _namespaces: Gee.ArrayList
    _children: Gee.ArrayList
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TDocument */
    save_to(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Document */
    create_element(name: string): Node
    create_text(text: string): Node
    create_comment(text: string): Node
    create_cdata(text: string): Node
    create_pi(target: string, data: string): Node
    save(cancellable?: Gio.Cancellable | null): boolean
    save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    get_indent(): boolean
    set_indent(value: boolean): void
    get_ns_top(): boolean
    set_ns_top(value: boolean): void
    get_prefix_default_ns(): boolean
    set_prefix_default_ns(value: boolean): void
    get_backup(): boolean
    set_backup(value: boolean): void
    get_root(): Node
    get_file(): Gio.File
    set_file(value: Gio.File): void
    /* Virtual methods of GXml.TDocument */
    vfunc_create_element(name: string): Node
    vfunc_create_text(text: string): Node
    vfunc_create_comment(text: string): Node
    vfunc_create_cdata(text: string): Node
    vfunc_create_pi(target: string, data: string): Node
    vfunc_save(cancellable?: Gio.Cancellable | null): boolean
    vfunc_save_as(f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_ns_top(): boolean
    vfunc_set_ns_top(value: boolean): void
    vfunc_get_prefix_default_ns(): boolean
    vfunc_set_prefix_default_ns(value: boolean): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_root(): Node
    vfunc_get_file(): Gio.File
    vfunc_set_file(value: Gio.File): void
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ns-top", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ns-top", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix-default-ns", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix-default-ns", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::backup", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::file", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::file", callback: (($obj: TDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TDocument_ConstructProps)
    _init (config?: TDocument_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): TDocument
    static from_path(path: string): TDocument
    static from_uri(uri: string): TDocument
    static from_file(file: Gio.File): TDocument
    static from_stream(stream: Gio.InputStream): TDocument
    static from_string(str: string): TDocument
    static from_path_with_readtype_func(path: string, func: any): TDocument
    static from_uri_with_readtype_func(uri: string, func: any): TDocument
    static from_file_with_readtype_func(file: Gio.File, func: any): TDocument
    static from_stream_with_readtype_func(stream: Gio.InputStream, func: any): TDocument
    static from_string_with_readtype_func(str: string, func: any): TDocument
    static tw_save_as(doc: Document, f: Gio.File, cancellable?: Gio.Cancellable | null): boolean
    static write_document(doc: Document, tw: libxml2.TextWriter): void
    static start_node(doc: Document, tw: libxml2.TextWriter, node: Node, root: boolean, declared_ns: Gee.ArrayList): /* declared_ns */ Gee.ArrayList
    static read_doc(doc: Document, file: Gio.File, rtfunc?: any | null): void
    static read_doc_stream(doc: Document, istream: Gio.InputStream, rtfunc?: any | null): void
    static read_node(node: Node, tr: libxml2.TextReader, rntfunc?: any | null): TDocumentReadType
    static new_default(): Document
    static new_default_for_path(path: string): Document
    static new_default_for_file(f: Gio.File): Document
    static $gtype: GObject.Type
}
export interface TElement_ConstructProps extends TNode_ConstructProps {
    content?: string
}
export class TElement {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.Element */
    readonly tag_name: string
    content: string
    /* Fields of GXml.TElement */
    parent_instance: TNode
    priv: TElementPrivate
    _attrs: Gee.HashMap
    _children: TNodeTChildrenList
    _namespaces: Gee.ArrayList
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Element */
    normalize(): void
    set_attr(name: string, value: string): void
    get_attr(name: string): Node | null
    remove_attr(name: string): void
    remove_ns_attr(name: string, uri: string): void
    set_ns_attr(ns: string, name: string, value: string): void
    get_ns_attr(name: string, uri: string): Node | null
    get_tag_name(): string
    get_content(): string
    set_content(value: string): void
    /* Virtual methods of GXml.TElement */
    vfunc_normalize(): void
    vfunc_set_attr(name: string, value: string): void
    vfunc_get_attr(name: string): Node | null
    vfunc_remove_attr(name: string): void
    vfunc_remove_ns_attr(name: string, uri: string): void
    vfunc_set_ns_attr(ns: string, name: string, value: string): void
    vfunc_get_ns_attr(name: string, uri: string): Node | null
    vfunc_get_tag_name(): string
    vfunc_get_content(): string
    vfunc_set_content(value: string): void
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: TElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TElement_ConstructProps)
    _init (config?: TElement_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(d: Document, name: string): TElement
    static $gtype: GObject.Type
}
export interface TNamespace_ConstructProps extends TNode_ConstructProps {
}
export class TNamespace {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.Namespace */
    readonly uri: string
    readonly prefix: string
    /* Fields of GXml.TNamespace */
    parent_instance: TNode
    priv: TNamespacePrivate
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Namespace */
    get_uri(): string | null
    get_prefix(): string | null
    /* Virtual methods of GXml.TNamespace */
    vfunc_get_uri(): string | null
    vfunc_get_prefix(): string | null
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::uri", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: TNamespace, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TNamespace_ConstructProps)
    _init (config?: TNamespace_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(d: Document, uri: string, prefix?: string | null): TNamespace
    static $gtype: GObject.Type
}
export interface TNode_ConstructProps extends GObject.Object_ConstructProps {
    value?: string
}
export class TNode {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Fields of GXml.TNode */
    parent_instance: GObject.Object
    priv: TNodePrivate
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Node */
    get(key: string): Node | null
    get_elements_by_property_value(property: string, value: string): ElementList
    get_elements_by_name(name: string): ElementList
    get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    ns_prefix(): string
    ns_uri(): string
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TNode_ConstructProps)
    _init (config?: TNode_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static copy(doc: Document, node: Node, source: Node, deep: boolean): boolean
    static $gtype: GObject.Type
}
export interface TNodeTChildrenList_ConstructProps extends Gee.AbstractBidirList_ConstructProps {
}
export class TNodeTChildrenList {
    /* Properties of Gee.AbstractBidirList */
    readonly read_only_view: Gee.BidirList
    /* Properties of Gee.AbstractCollection */
    readonly size: number
    readonly read_only: boolean
    /* Fields of GXml.TNodeTChildrenList */
    parent_instance: Gee.AbstractBidirList
    priv: TNodeTChildrenListPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of Gee.AbstractBidirList */
    bidir_list_iterator(): Gee.BidirListIterator
    reserved0(): void
    reserved1(): void
    reserved2(): void
    reserved3(): void
    reserved4(): void
    reserved5(): void
    reserved6(): void
    reserved7(): void
    reserved8(): void
    reserved9(): void
    get_read_only_view(): Gee.BidirList
    /* Methods of Gee.AbstractList */
    list_iterator(): Gee.ListIterator
    get(index: number): object | null
    set(index: number, item?: object | null): void
    index_of(item?: object | null): number
    insert(index: number, item?: object | null): void
    remove_at(index: number): object | null
    slice(start: number, stop: number): Gee.List | null
    get_read_only_view(): Gee.List
    /* Methods of Gee.AbstractCollection */
    contains(item?: object | null): boolean
    add(item?: object | null): boolean
    remove(item?: object | null): boolean
    clear(): void
    iterator(): Gee.Iterator
    foreach(f: Gee.ForallFunc): boolean
    get_size(): number
    get_read_only(): boolean
    get_read_only_view(): Gee.Collection
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GXml.TNodeTChildrenList */
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractBidirList */
    vfunc_bidir_list_iterator(): Gee.BidirListIterator
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.BidirList
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    /* Virtual methods of Gee.AbstractList */
    vfunc_list_iterator(): Gee.ListIterator
    vfunc_get(index: number): object | null
    vfunc_set(index: number, item?: object | null): void
    vfunc_index_of(item?: object | null): number
    vfunc_insert(index: number, item?: object | null): void
    vfunc_remove_at(index: number): object | null
    vfunc_slice(start: number, stop: number): Gee.List | null
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_read_only_view(): Gee.List
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_first(): object | null
    vfunc_last(): object | null
    vfunc_insert_all(index: number, collection: Gee.Collection): void
    vfunc_sort(compare_func: GLib.CompareDataFunc | null): void
    /* Virtual methods of Gee.AbstractCollection */
    vfunc_contains(item?: object | null): boolean
    vfunc_add(item?: object | null): boolean
    vfunc_remove(item?: object | null): boolean
    vfunc_clear(): void
    vfunc_iterator(): Gee.Iterator
    vfunc_foreach(f: Gee.ForallFunc): boolean
    vfunc_reserved0(): void
    vfunc_reserved1(): void
    vfunc_reserved2(): void
    vfunc_reserved3(): void
    vfunc_reserved4(): void
    vfunc_reserved5(): void
    vfunc_reserved6(): void
    vfunc_reserved7(): void
    vfunc_reserved8(): void
    vfunc_reserved9(): void
    vfunc_get_size(): number
    vfunc_get_read_only(): boolean
    vfunc_get_read_only_view(): Gee.Collection
    vfunc_stream(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.StreamFunc): Gee.Iterator
    vfunc_fold(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): object | null
    vfunc_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.MapFunc): Gee.Iterator
    vfunc_scan(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FoldFunc, seed?: object | null): Gee.Iterator
    vfunc_filter(pred: Gee.Predicate): Gee.Iterator
    vfunc_chop(offset: number, length: number): Gee.Iterator
    vfunc_flat_map(a_type: GObject.Type, a_dup_func: GObject.BoxedCopyFunc, a_destroy_func: GLib.DestroyNotify, f: Gee.FlatMapFunc): Gee.Iterator
    vfunc_tee(forks: number): Gee.Iterator[]
    vfunc_first_match(pred: Gee.Predicate): object | null
    vfunc_any_match(pred: Gee.Predicate): boolean
    vfunc_all_match(pred: Gee.Predicate): boolean
    vfunc_max(compare: GLib.CompareDataFunc): object | null
    vfunc_min(compare: GLib.CompareDataFunc): object | null
    vfunc_order_by(compare: GLib.CompareDataFunc | null): Gee.Iterator
    vfunc_get_element_type(): GObject.Type
    vfunc_add_all(collection: Gee.Collection): boolean
    vfunc_contains_all(collection: Gee.Collection): boolean
    vfunc_remove_all(collection: Gee.Collection): boolean
    vfunc_retain_all(collection: Gee.Collection): boolean
    vfunc_to_array(): object[]
    vfunc_add_all_array(array: object[]): boolean
    vfunc_contains_all_array(array: object[]): boolean
    vfunc_remove_all_array(array: object[]): boolean
    vfunc_add_all_iterator(iter: Gee.Iterator): boolean
    vfunc_contains_all_iterator(iter: Gee.Iterator): boolean
    vfunc_remove_all_iterator(iter: Gee.Iterator): boolean
    vfunc_get_is_empty(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::read-only-view", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only-view", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: TNodeTChildrenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TNodeTChildrenList_ConstructProps)
    _init (config?: TNodeTChildrenList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(e: Node): TNodeTChildrenList
    static $gtype: GObject.Type
}
export interface TProcessingInstruction_ConstructProps extends TNode_ConstructProps {
    data?: string
}
export class TProcessingInstruction {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.ProcessingInstruction */
    readonly target: string
    data: string
    /* Fields of GXml.TProcessingInstruction */
    parent_instance: TNode
    priv: TProcessingInstructionPrivate
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.ProcessingInstruction */
    get_target(): string
    get_data(): string
    set_data(value: string): void
    /* Virtual methods of GXml.TProcessingInstruction */
    vfunc_get_target(): string
    vfunc_get_data(): string
    vfunc_set_data(value: string): void
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: TProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TProcessingInstruction_ConstructProps)
    _init (config?: TProcessingInstruction_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(doc: Document, target: string, data: string): TProcessingInstruction
    static $gtype: GObject.Type
}
export interface TText_ConstructProps extends TNode_ConstructProps {
    str?: string
}
export class TText {
    /* Properties of GXml.TNode */
    readonly attrs: Gee.Map
    readonly children_nodes: Gee.BidirList
    readonly document: Document
    readonly name: string
    readonly namespaces: Gee.List
    readonly type_node: NodeType
    value: string
    readonly parent: Node
    /* Properties of GXml.Text */
    str: string
    /* Fields of GXml.TText */
    parent_instance: TNode
    priv: TTextPrivate
    /* Fields of GXml.TNode */
    _name: string
    _value: string
    _doc: Document
    _parent: Node
    _node_type: NodeType
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.TNode */
    set_namespace(uri: string, prefix?: string | null): boolean
    to_string(): string
    set_parent(node: Node): void
    get_attrs(): Gee.Map
    get_children_nodes(): Gee.BidirList
    get_document(): Document
    get_name(): string
    get_namespaces(): Gee.List
    get_type_node(): NodeType
    get_value(): string
    set_value(value: string): void
    get_parent(): Node
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Text */
    get_str(): string
    set_str(value: string): void
    /* Virtual methods of GXml.TText */
    vfunc_get_str(): string
    vfunc_set_str(value: string): void
    /* Virtual methods of GXml.TNode */
    vfunc_set_namespace(uri: string, prefix?: string | null): boolean
    vfunc_to_string(): string
    vfunc_set_parent(node: Node): void
    vfunc_get_attrs(): Gee.Map
    vfunc_get_children_nodes(): Gee.BidirList
    vfunc_get_document(): Document
    vfunc_get_name(): string
    vfunc_get_namespaces(): Gee.List
    vfunc_get_type_node(): NodeType
    vfunc_get_value(): string
    vfunc_set_value(value: string): void
    vfunc_get_parent(): Node
    vfunc_get(key: string): Node | null
    vfunc_get_elements_by_property_value(property: string, value: string): ElementList
    vfunc_get_elements_by_name(name: string): ElementList
    vfunc_get_elements_by_name_ns(name: string, ns?: string | null): ElementList
    vfunc_ns_prefix(): string
    vfunc_ns_uri(): string
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attrs", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attrs", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children-nodes", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children-nodes", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespaces", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespaces", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-node", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-node", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::str", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::str", callback: (($obj: TText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: TText_ConstructProps)
    _init (config?: TText_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(d: Document, text: string): TText
    static $gtype: GObject.Type
}
export interface XParser_ConstructProps extends GObject.Object_ConstructProps {
    backup?: boolean
    indent?: boolean
}
export class XParser {
    /* Properties of GXml.Parser */
    backup: boolean
    indent: boolean
    readonly node: DomNode
    /* Fields of GXml.XParser */
    parent_instance: GObject.Object
    priv: XParserPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GXml.XParser */
    read_node(node: DomNode): void
    read_child_nodes_stream_async(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_child_nodes_stream_finish(_res_: Gio.AsyncResult): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of GXml.Parser */
    write_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    write_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    write_file_finish(_res_: Gio.AsyncResult): void
    write_string(): string
    write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    write_string_finish(_res_: Gio.AsyncResult): string
    write_stream(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null): void
    write_stream_async(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    write_stream_finish(_res_: Gio.AsyncResult): void
    read_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    read_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_file_finish(_res_: Gio.AsyncResult): void
    read_stream(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_stream_async(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_stream_finish(_res_: Gio.AsyncResult): void
    read_string(str: string, cancellable?: Gio.Cancellable | null): void
    read_string_async(str: string, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    read_string_finish(_res_: Gio.AsyncResult): void
    create_stream(cancellable?: Gio.Cancellable | null): Gio.InputStream
    create_stream_async(cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    read_child_nodes(parent: DomNode): void
    read_child_nodes_async(parent: DomNode, _callback_?: Gio.AsyncReadyCallback | null): void
    read_child_nodes_finish(_res_: Gio.AsyncResult): void
    read_child_node(parent: DomNode): boolean
    read_child_element(parent: DomNode): boolean
    read_element_property(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    add_element_collection(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    read_child_nodes_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    read_child_nodes_string(str: string, cancellable?: Gio.Cancellable | null): void
    read_unparsed(): string
    move_next_node(): boolean
    current_is_empty_element(): boolean
    current_is_element(): boolean
    current_is_document(): boolean
    current_node_name(): string
    create_element(parent: DomNode): DomElement | null
    read_element(element: DomElement): void
    get_backup(): boolean
    set_backup(value: boolean): void
    get_indent(): boolean
    set_indent(value: boolean): void
    get_node(): DomNode
    /* Virtual methods of GXml.XParser */
    vfunc_write_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    vfunc_write_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_write_file_finish(_res_: Gio.AsyncResult): void
    vfunc_write_string(): string
    vfunc_write_string_async(_callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_write_string_finish(_res_: Gio.AsyncResult): string
    vfunc_write_stream(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_write_stream_async(stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_write_stream_finish(_res_: Gio.AsyncResult): void
    vfunc_read_file(file: Gio.File, cancellable?: Gio.Cancellable | null): void
    vfunc_read_file_async(file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_file_finish(_res_: Gio.AsyncResult): void
    vfunc_read_stream(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_read_stream_async(stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_stream_finish(_res_: Gio.AsyncResult): void
    vfunc_read_string(str: string, cancellable?: Gio.Cancellable | null): void
    vfunc_read_string_async(str: string, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_string_finish(_res_: Gio.AsyncResult): void
    vfunc_create_stream(cancellable?: Gio.Cancellable | null): Gio.InputStream
    vfunc_create_stream_async(cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_create_stream_finish(_res_: Gio.AsyncResult): Gio.InputStream
    vfunc_read_child_nodes(parent: DomNode): void
    vfunc_read_child_nodes_async(parent: DomNode, _callback_?: Gio.AsyncReadyCallback | null): void
    vfunc_read_child_nodes_finish(_res_: Gio.AsyncResult): void
    vfunc_read_child_node(parent: DomNode): boolean
    vfunc_read_child_element(parent: DomNode): boolean
    vfunc_read_element_property(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    vfunc_add_element_collection(parent: DomNode): [ /* returnType */ boolean, /* element */ DomNode ]
    vfunc_read_child_nodes_stream(istream: Gio.InputStream, cancellable?: Gio.Cancellable | null): void
    vfunc_read_child_nodes_string(str: string, cancellable?: Gio.Cancellable | null): void
    vfunc_read_unparsed(): string
    vfunc_move_next_node(): boolean
    vfunc_current_is_empty_element(): boolean
    vfunc_current_is_element(): boolean
    vfunc_current_is_document(): boolean
    vfunc_current_node_name(): string
    vfunc_create_element(parent: DomNode): DomElement | null
    vfunc_read_element(element: DomElement): void
    vfunc_get_backup(): boolean
    vfunc_set_backup(value: boolean): void
    vfunc_get_indent(): boolean
    vfunc_set_indent(value: boolean): void
    vfunc_get_node(): DomNode
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::backup", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::backup", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indent", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indent", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node", callback: (($obj: XParser, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: XParser_ConstructProps)
    _init (config?: XParser_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(node: DomNode): XParser
    static $gtype: GObject.Type
}
export abstract class CssSelectorDataClass {
    /* Fields of GXml.CssSelectorDataClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class CssSelectorDataPrivate {
    static name: string
}
export abstract class CssSelectorParserClass {
    /* Fields of GXml.CssSelectorParserClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class CssSelectorParserPrivate {
    static name: string
}
export abstract class DomNodeFilterClass {
    /* Fields of GXml.DomNodeFilterClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class DomNodeFilterPrivate {
    static name: string
}
export abstract class DomElementListClass {
    /* Fields of GXml.DomElementListClass */
    parent_class: Gee.ArrayListClass
    static name: string
}
export class DomElementListPrivate {
    static name: string
}
export abstract class DomEventInitClass {
    /* Fields of GXml.DomEventInitClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class DomEventInitPrivate {
    static name: string
}
export abstract class DomCustomEventInitClass {
    /* Fields of GXml.DomCustomEventInitClass */
    parent_class: DomEventInitClass
    static name: string
}
export class DomCustomEventInitPrivate {
    static name: string
}
export abstract class DomTimeStampClass {
    /* Fields of GXml.DomTimeStampClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class DomTimeStampPrivate {
    static name: string
}
export abstract class DomMutationObserverInitClass {
    /* Fields of GXml.DomMutationObserverInitClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class DomMutationObserverInitPrivate {
    static name: string
}
export abstract class DomErrorNameClass {
    /* Fields of GXml.DomErrorNameClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class DomErrorNamePrivate {
    static name: string
}
export abstract class ElementListClass {
    /* Fields of GXml.ElementListClass */
    parent_class: Gee.ArrayListClass
    static name: string
}
export class ElementListPrivate {
    static name: string
}
export class Enumeration {
    static name: string
    static new(): Enumeration
    constructor()
    /* Static methods and pseudo-constructors */
    static new(): Enumeration
    static get_nick(enumeration: GObject.Type, val: number): string
    static get_nick_camelcase(enumeration: GObject.Type, val: number): string
    static get_string(enumeration: GObject.Type, val: number, use_nick: boolean, camelcase: boolean): string
    static parse(enumeration: GObject.Type, val: string): GObject.EnumValue | null
    static to_array(enumeration: GObject.Type): GObject.EnumValue[]
    static parse_integer(enumeration: GObject.Type, val: number): GObject.EnumValue | null
    static to_string_array(enumeration: GObject.Type): string[]
}
export abstract class GHtmlDocumentClass {
    /* Fields of GXml.GHtmlDocumentClass */
    parent_class: GDocumentClass
    static name: string
}
export class GHtmlDocumentPrivate {
    static name: string
}
export abstract class GomAttrClass {
    /* Fields of GXml.GomAttrClass */
    parent_class: GomNodeClass
    static name: string
}
export class GomAttrPrivate {
    static name: string
}
export abstract class BaseCollectionClass {
    /* Fields of GXml.BaseCollectionClass */
    parent_class: GObject.ObjectClass
    validate_append: (self: BaseCollection, index: number, element: DomElement) => boolean
    clear: (self: BaseCollection) => void
    static name: string
}
export class BaseCollectionPrivate {
    static name: string
}
export abstract class GomArrayListClass {
    /* Fields of GXml.GomArrayListClass */
    parent_class: BaseCollectionClass
    static name: string
}
export class GomArrayListPrivate {
    static name: string
}
export abstract class GomHashMapClass {
    /* Fields of GXml.GomHashMapClass */
    parent_class: BaseCollectionClass
    static name: string
}
export class GomHashMapPrivate {
    static name: string
}
export abstract class GomHashPairedMapClass {
    /* Fields of GXml.GomHashPairedMapClass */
    parent_class: BaseCollectionClass
    static name: string
}
export class GomHashPairedMapPrivate {
    static name: string
}
export abstract class GomHashThreeMapClass {
    /* Fields of GXml.GomHashThreeMapClass */
    parent_class: BaseCollectionClass
    static name: string
}
export class GomHashThreeMapPrivate {
    static name: string
}
export abstract class GomDocumentClass {
    /* Fields of GXml.GomDocumentClass */
    parent_class: GomNodeClass
    static name: string
}
export class GomDocumentPrivate {
    static name: string
}
export abstract class GomImplementationClass {
    /* Fields of GXml.GomImplementationClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GomImplementationPrivate {
    static name: string
}
export abstract class GomDocumentTypeClass {
    /* Fields of GXml.GomDocumentTypeClass */
    parent_class: GomNodeClass
    static name: string
}
export class GomDocumentTypePrivate {
    static name: string
}
export abstract class GomDocumentFragmentClass {
    /* Fields of GXml.GomDocumentFragmentClass */
    parent_class: GomNodeClass
    static name: string
}
export class GomDocumentFragmentPrivate {
    static name: string
}
export abstract class GomElementClass {
    /* Fields of GXml.GomElementClass */
    parent_class: GomNodeClass
    static name: string
}
export class GomElementPrivate {
    static name: string
}
export abstract class GomElementAttributesClass {
    /* Fields of GXml.GomElementAttributesClass */
    parent_class: Gee.HashMapClass
    static name: string
}
export class GomElementAttributesPrivate {
    static name: string
}
export abstract class GomNodeClass {
    /* Fields of GXml.GomNodeClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GomNodePrivate {
    static name: string
}
export abstract class GomNodeListClass {
    /* Fields of GXml.GomNodeListClass */
    parent_class: Gee.ArrayListClass
    static name: string
}
export class GomNodeListPrivate {
    static name: string
}
export abstract class GomBasePropertyClass {
    /* Fields of GXml.GomBasePropertyClass */
    parent_class: GObject.ObjectClass
    validate_value: (self: GomBaseProperty, val: string) => boolean
    static name: string
}
export class GomBasePropertyPrivate {
    static name: string
}
export abstract class GomStringClass {
    /* Fields of GXml.GomStringClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomStringPrivate {
    static name: string
}
export abstract class GomArrayStringClass {
    /* Fields of GXml.GomArrayStringClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomArrayStringPrivate {
    static name: string
}
export abstract class GomXsdArrayStringClass {
    /* Fields of GXml.GomXsdArrayStringClass */
    parent_class: GomArrayStringClass
    static name: string
}
export class GomXsdArrayStringPrivate {
    static name: string
}
export abstract class GomDoubleClass {
    /* Fields of GXml.GomDoubleClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomDoublePrivate {
    static name: string
}
export abstract class GomFloatClass {
    /* Fields of GXml.GomFloatClass */
    parent_class: GomDoubleClass
    static name: string
}
export class GomFloatPrivate {
    static name: string
}
export abstract class GomIntClass {
    /* Fields of GXml.GomIntClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomIntPrivate {
    static name: string
}
export abstract class GomBooleanClass {
    /* Fields of GXml.GomBooleanClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomBooleanPrivate {
    static name: string
}
export abstract class GomEnumClass {
    /* Fields of GXml.GomEnumClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomEnumPrivate {
    static name: string
}
export abstract class GomDateClass {
    /* Fields of GXml.GomDateClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomDatePrivate {
    static name: string
}
export abstract class GomDateTimeClass {
    /* Fields of GXml.GomDateTimeClass */
    parent_class: GomBasePropertyClass
    static name: string
}
export class GomDateTimePrivate {
    static name: string
}
export abstract class GomXsdSchemaClass {
    /* Fields of GXml.GomXsdSchemaClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdSchemaPrivate {
    static name: string
}
export abstract class GomXsdSimpleTypeClass {
    /* Fields of GXml.GomXsdSimpleTypeClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdSimpleTypePrivate {
    static name: string
}
export abstract class GomXsdTypeDefinitionClass {
    /* Fields of GXml.GomXsdTypeDefinitionClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdTypeDefinitionPrivate {
    static name: string
}
export abstract class GomXsdTypeListClass {
    /* Fields of GXml.GomXsdTypeListClass */
    parent_class: GomXsdTypeDefinitionClass
    static name: string
}
export class GomXsdTypeListPrivate {
    static name: string
}
export abstract class GomXsdTypeUnionClass {
    /* Fields of GXml.GomXsdTypeUnionClass */
    parent_class: GomXsdTypeDefinitionClass
    static name: string
}
export class GomXsdTypeUnionPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionClass {
    /* Fields of GXml.GomXsdTypeRestrictionClass */
    parent_class: GomXsdTypeDefinitionClass
    static name: string
}
export class GomXsdTypeRestrictionPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionDefClass {
    /* Fields of GXml.GomXsdTypeRestrictionDefClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdTypeRestrictionDefPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionMinExclusiveClass {
    /* Fields of GXml.GomXsdTypeRestrictionMinExclusiveClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionMinExclusivePrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionMinInclusiveClass {
    /* Fields of GXml.GomXsdTypeRestrictionMinInclusiveClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionMinInclusivePrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionMaxExclusiveClass {
    /* Fields of GXml.GomXsdTypeRestrictionMaxExclusiveClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionMaxExclusivePrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionMaxInclusiveClass {
    /* Fields of GXml.GomXsdTypeRestrictionMaxInclusiveClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionMaxInclusivePrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionTotalDigitsClass {
    /* Fields of GXml.GomXsdTypeRestrictionTotalDigitsClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionTotalDigitsPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionFractionDigitsClass {
    /* Fields of GXml.GomXsdTypeRestrictionFractionDigitsClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionFractionDigitsPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionLengthClass {
    /* Fields of GXml.GomXsdTypeRestrictionLengthClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionLengthPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionMinLengthClass {
    /* Fields of GXml.GomXsdTypeRestrictionMinLengthClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionMinLengthPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionMaxLengthClass {
    /* Fields of GXml.GomXsdTypeRestrictionMaxLengthClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionMaxLengthPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionEnumerationClass {
    /* Fields of GXml.GomXsdTypeRestrictionEnumerationClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionEnumerationPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionWhiteSpaceClass {
    /* Fields of GXml.GomXsdTypeRestrictionWhiteSpaceClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionWhiteSpacePrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionWhiteSpaceFixedClass {
    /* Fields of GXml.GomXsdTypeRestrictionWhiteSpaceFixedClass */
    parent_class: GomBooleanClass
    static name: string
}
export class GomXsdTypeRestrictionWhiteSpaceFixedPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionPatternClass {
    /* Fields of GXml.GomXsdTypeRestrictionPatternClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionPatternPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionAssertionClass {
    /* Fields of GXml.GomXsdTypeRestrictionAssertionClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionAssertionPrivate {
    static name: string
}
export abstract class GomXsdTypeRestrictionExplicitTimezoneClass {
    /* Fields of GXml.GomXsdTypeRestrictionExplicitTimezoneClass */
    parent_class: GomXsdTypeRestrictionDefClass
    static name: string
}
export class GomXsdTypeRestrictionExplicitTimezonePrivate {
    static name: string
}
export abstract class GomXsdComplexTypeClass {
    /* Fields of GXml.GomXsdComplexTypeClass */
    parent_class: GomXsdBaseTypeClass
    static name: string
}
export class GomXsdComplexTypePrivate {
    static name: string
}
export abstract class GomXsdExtensionClass {
    /* Fields of GXml.GomXsdExtensionClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdExtensionPrivate {
    static name: string
}
export abstract class GomXsdElementClass {
    /* Fields of GXml.GomXsdElementClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdElementPrivate {
    static name: string
}
export abstract class GomXsdAnnotationClass {
    /* Fields of GXml.GomXsdAnnotationClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdAnnotationPrivate {
    static name: string
}
export abstract class GomXsdBaseTypeClass {
    /* Fields of GXml.GomXsdBaseTypeClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdBaseTypePrivate {
    static name: string
}
export abstract class GomXsdBaseContentClass {
    /* Fields of GXml.GomXsdBaseContentClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdBaseContentPrivate {
    static name: string
}
export abstract class GomXsdSimpleContentClass {
    /* Fields of GXml.GomXsdSimpleContentClass */
    parent_class: GomXsdBaseContentClass
    static name: string
}
export class GomXsdSimpleContentPrivate {
    static name: string
}
export abstract class GomXsdComplexContentClass {
    /* Fields of GXml.GomXsdComplexContentClass */
    parent_class: GomXsdBaseContentClass
    static name: string
}
export class GomXsdComplexContentPrivate {
    static name: string
}
export abstract class GomXsdOpenContentClass {
    /* Fields of GXml.GomXsdOpenContentClass */
    parent_class: GomXsdBaseContentClass
    static name: string
}
export class GomXsdOpenContentPrivate {
    static name: string
}
export abstract class GomXsdBaseAttributeClass {
    /* Fields of GXml.GomXsdBaseAttributeClass */
    parent_class: GomElementClass
    static name: string
}
export class GomXsdBaseAttributePrivate {
    static name: string
}
export abstract class GomXsdAttributeClass {
    /* Fields of GXml.GomXsdAttributeClass */
    parent_class: GomXsdBaseAttributeClass
    static name: string
}
export class GomXsdAttributePrivate {
    static name: string
}
export abstract class GomXsdAttributeGroupClass {
    /* Fields of GXml.GomXsdAttributeGroupClass */
    parent_class: GomXsdBaseAttributeClass
    static name: string
}
export class GomXsdAttributeGroupPrivate {
    static name: string
}
export abstract class GomXsdListClass {
    /* Fields of GXml.GomXsdListClass */
    parent_class: GomArrayListClass
    static name: string
}
export class GomXsdListPrivate {
    static name: string
}
export abstract class GomXsdListElementsClass {
    /* Fields of GXml.GomXsdListElementsClass */
    parent_class: GomXsdListClass
    static name: string
}
export class GomXsdListElementsPrivate {
    static name: string
}
export abstract class GomXsdListSimpleTypesClass {
    /* Fields of GXml.GomXsdListSimpleTypesClass */
    parent_class: GomXsdListClass
    static name: string
}
export class GomXsdListSimpleTypesPrivate {
    static name: string
}
export abstract class GomXsdListComplexTypesClass {
    /* Fields of GXml.GomXsdListComplexTypesClass */
    parent_class: GomXsdListClass
    static name: string
}
export class GomXsdListComplexTypesPrivate {
    static name: string
}
export abstract class GomXsdListTypeRestrictionEnumerationsClass {
    /* Fields of GXml.GomXsdListTypeRestrictionEnumerationsClass */
    parent_class: GomXsdListClass
    static name: string
}
export class GomXsdListTypeRestrictionEnumerationsPrivate {
    static name: string
}
export abstract class GomXsdListTypeRestrictionWhiteSpacesClass {
    /* Fields of GXml.GomXsdListTypeRestrictionWhiteSpacesClass */
    parent_class: GomXsdListClass
    static name: string
}
export class GomXsdListTypeRestrictionWhiteSpacesPrivate {
    static name: string
}
export abstract class GomCharacterDataClass {
    /* Fields of GXml.GomCharacterDataClass */
    parent_class: GomNodeClass
    static name: string
}
export class GomCharacterDataPrivate {
    static name: string
}
export abstract class GomTextClass {
    /* Fields of GXml.GomTextClass */
    parent_class: GomCharacterDataClass
    static name: string
}
export class GomTextPrivate {
    static name: string
}
export abstract class GomProcessingInstructionClass {
    /* Fields of GXml.GomProcessingInstructionClass */
    parent_class: GomCharacterDataClass
    static name: string
}
export class GomProcessingInstructionPrivate {
    static name: string
}
export abstract class GomCommentClass {
    /* Fields of GXml.GomCommentClass */
    parent_class: GomCharacterDataClass
    static name: string
}
export class GomCommentPrivate {
    static name: string
}
export abstract class GAttributeClass {
    /* Fields of GXml.GAttributeClass */
    parent_class: GNodeClass
    static name: string
}
export class GAttributePrivate {
    static name: string
}
export abstract class GCDATAClass {
    /* Fields of GXml.GCDATAClass */
    parent_class: GNodeClass
    static name: string
}
export class GCDATAPrivate {
    static name: string
}
export abstract class GCharacterDataClass {
    /* Fields of GXml.GCharacterDataClass */
    parent_class: GNonDocumentChildNodeClass
    static name: string
}
export class GCharacterDataPrivate {
    static name: string
}
export abstract class GChildNodeClass {
    /* Fields of GXml.GChildNodeClass */
    parent_class: GNodeClass
    static name: string
}
export class GChildNodePrivate {
    static name: string
}
export abstract class GNonDocumentChildNodeClass {
    /* Fields of GXml.GNonDocumentChildNodeClass */
    parent_class: GChildNodeClass
    static name: string
}
export class GNonDocumentChildNodePrivate {
    static name: string
}
export abstract class GCommentClass {
    /* Fields of GXml.GCommentClass */
    parent_class: GCharacterDataClass
    static name: string
}
export class GCommentPrivate {
    static name: string
}
export abstract class GDocumentClass {
    /* Fields of GXml.GDocumentClass */
    parent_class: GNodeClass
    save: (self: GDocument, cancellable?: Gio.Cancellable | null) => boolean
    save_as: (self: GDocument, f: Gio.File, cancellable?: Gio.Cancellable | null) => boolean
    static name: string
}
export class GDocumentPrivate {
    static name: string
}
export abstract class GImplementationClass {
    /* Fields of GXml.GImplementationClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GImplementationPrivate {
    static name: string
}
export abstract class GDocumentTypeClass {
    /* Fields of GXml.GDocumentTypeClass */
    parent_class: GChildNodeClass
    static name: string
}
export class GDocumentTypePrivate {
    static name: string
}
export abstract class GDocumentFragmentClass {
    /* Fields of GXml.GDocumentFragmentClass */
    parent_class: GDocumentClass
    static name: string
}
export class GDocumentFragmentPrivate {
    static name: string
}
export abstract class GDomNodeIteratorClass {
    /* Fields of GXml.GDomNodeIteratorClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GDomNodeIteratorPrivate {
    static name: string
}
export abstract class GDomTreeWalkerClass {
    /* Fields of GXml.GDomTreeWalkerClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GDomTreeWalkerPrivate {
    static name: string
}
export abstract class GDomTokenListClass {
    /* Fields of GXml.GDomTokenListClass */
    parent_class: Gee.ArrayListClass
    static name: string
}
export class GDomTokenListPrivate {
    static name: string
}
export abstract class GDomSettableTokenListClass {
    /* Fields of GXml.GDomSettableTokenListClass */
    parent_class: GDomTokenListClass
    static name: string
}
export class GDomSettableTokenListPrivate {
    static name: string
}
export abstract class GDomHTMLCollectionClass {
    /* Fields of GXml.GDomHTMLCollectionClass */
    parent_class: Gee.ArrayListClass
    static name: string
}
export class GDomHTMLCollectionPrivate {
    static name: string
}
export abstract class GDomEventClass {
    /* Fields of GXml.GDomEventClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GDomEventPrivate {
    static name: string
}
export abstract class GDomCustomEventClass {
    /* Fields of GXml.GDomCustomEventClass */
    parent_class: GDomEventClass
    static name: string
}
export class GDomCustomEventPrivate {
    static name: string
}
export abstract class GDomRangeClass {
    /* Fields of GXml.GDomRangeClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GDomRangePrivate {
    static name: string
}
export abstract class GElementClass {
    /* Fields of GXml.GElementClass */
    parent_class: GNonDocumentChildNodeClass
    static name: string
}
export class GElementPrivate {
    static name: string
}
export abstract class GHashMapAttrClass {
    /* Fields of GXml.GHashMapAttrClass */
    parent_class: Gee.AbstractMapClass
    static name: string
}
export class GHashMapAttrPrivate {
    static name: string
}
export abstract class GHashMapAttrEntryClass {
    /* Fields of GXml.GHashMapAttrEntryClass */
    parent_class: Gee.MapEntryClass
    static name: string
}
export class GHashMapAttrEntryPrivate {
    static name: string
}
export abstract class GHashMapAttrIteratorClass {
    /* Fields of GXml.GHashMapAttrIteratorClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GHashMapAttrIteratorPrivate {
    static name: string
}
export abstract class GListChildrenClass {
    /* Fields of GXml.GListChildrenClass */
    parent_class: Gee.AbstractBidirListClass
    static name: string
}
export class GListChildrenPrivate {
    static name: string
}
export abstract class GListChildrenIteratorClass {
    /* Fields of GXml.GListChildrenIteratorClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GListChildrenIteratorPrivate {
    static name: string
}
export abstract class GListNamespacesClass {
    /* Fields of GXml.GListNamespacesClass */
    parent_class: Gee.AbstractListClass
    static name: string
}
export class GListNamespacesPrivate {
    static name: string
}
export abstract class GListNamespacesIteratorClass {
    /* Fields of GXml.GListNamespacesIteratorClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GListNamespacesIteratorPrivate {
    static name: string
}
export abstract class GNamespaceClass {
    /* Fields of GXml.GNamespaceClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GNamespacePrivate {
    static name: string
}
export abstract class GNodeClass {
    /* Fields of GXml.GNodeClass */
    parent_class: GObject.ObjectClass
    set_namespace: (self: GNode, uri: string, prefix?: string | null) => boolean
    to_string: (self: GNode) => string
    static name: string
}
export class GNodePrivate {
    static name: string
}
export abstract class GProcessingInstructionClass {
    /* Fields of GXml.GProcessingInstructionClass */
    parent_class: GCharacterDataClass
    static name: string
}
export class GProcessingInstructionPrivate {
    static name: string
}
export abstract class GTextClass {
    /* Fields of GXml.GTextClass */
    parent_class: GCharacterDataClass
    static name: string
}
export class GTextPrivate {
    static name: string
}
export abstract class GXPathObjectClass {
    /* Fields of GXml.GXPathObjectClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class GXPathObjectPrivate {
    static name: string
}
export abstract class NodeListClass {
    /* Fields of GXml.NodeListClass */
    parent_class: Gee.ArrayListClass
    static name: string
}
export class NodeListPrivate {
    static name: string
}
export abstract class SerializableBoolClass {
    /* Fields of GXml.SerializableBoolClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class SerializableBoolPrivate {
    static name: string
}
export abstract class SerializableContainerClass {
    /* Fields of GXml.SerializableContainerClass */
    parent_class: SerializableObjectModelClass
    init_containers: (self: SerializableContainer) => void
    static name: string
}
export class SerializableContainerPrivate {
    static name: string
}
export abstract class SerializableDoubleClass {
    /* Fields of GXml.SerializableDoubleClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class SerializableDoublePrivate {
    static name: string
}
export abstract class SerializableEnumClass {
    /* Fields of GXml.SerializableEnumClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class SerializableEnumPrivate {
    static name: string
}
export abstract class SerializableFloatClass {
    /* Fields of GXml.SerializableFloatClass */
    parent_class: SerializableDoubleClass
    static name: string
}
export class SerializableFloatPrivate {
    static name: string
}
export abstract class SerializableArrayListClass {
    /* Fields of GXml.SerializableArrayListClass */
    parent_class: Gee.ArrayListClass
    deserialize_proceed: (self: SerializableArrayList) => boolean
    deserialized: (self: SerializableArrayList) => boolean
    deserialize_node: (self: SerializableArrayList, node: Node) => boolean
    deserialize_children: (self: SerializableArrayList) => boolean
    set_default_namespace: (self: SerializableArrayList, node: Node) => boolean
    serialize_use_xml_node_value: (self: SerializableArrayList) => boolean
    property_use_nick: (self: SerializableArrayList) => boolean
    node_name: (self: SerializableArrayList) => string
    find_property_spec: (self: SerializableArrayList, property_name: string) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableArrayList) => GObject.ParamSpec[]
    serialize: (self: SerializableArrayList, node: Node) => Node | null
    serialize_property: (self: SerializableArrayList, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableArrayList, node: Node) => boolean
    deserialize_property: (self: SerializableArrayList, property_node: Node) => boolean
    static name: string
}
export class SerializableArrayListPrivate {
    static name: string
}
export abstract class SerializableDualKeyMapClass {
    /* Fields of GXml.SerializableDualKeyMapClass */
    parent_class: GObject.ObjectClass
    deserialize_proceed: (self: SerializableDualKeyMap) => boolean
    deserialized: (self: SerializableDualKeyMap) => boolean
    deserialize_node: (self: SerializableDualKeyMap, node: Node) => boolean
    deserialize_children: (self: SerializableDualKeyMap) => boolean
    set_default_namespace: (self: SerializableDualKeyMap, node: Node) => boolean
    get_enable_unknown_serializable_property: (self: SerializableDualKeyMap) => boolean
    serialize_use_xml_node_value: (self: SerializableDualKeyMap) => boolean
    property_use_nick: (self: SerializableDualKeyMap) => boolean
    node_name: (self: SerializableDualKeyMap) => string
    find_property_spec: (self: SerializableDualKeyMap, property_name: string) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableDualKeyMap) => GObject.ParamSpec[]
    serialize: (self: SerializableDualKeyMap, node: Node) => Node | null
    serialize_property: (self: SerializableDualKeyMap, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableDualKeyMap, node: Node) => boolean
    deserialize_property: (self: SerializableDualKeyMap, property_node: Node) => boolean
    static name: string
}
export class SerializableDualKeyMapPrivate {
    static name: string
}
export abstract class SerializableHashMapClass {
    /* Fields of GXml.SerializableHashMapClass */
    parent_class: Gee.HashMapClass
    deserialize_proceed: (self: SerializableHashMap) => boolean
    deserialized: (self: SerializableHashMap) => boolean
    deserialize_node: (self: SerializableHashMap, node: Node) => boolean
    deserialize_children: (self: SerializableHashMap) => boolean
    set_default_namespace: (self: SerializableHashMap, node: Node) => boolean
    get_enable_unknown_serializable_property: (self: SerializableHashMap) => boolean
    serialize_use_xml_node_value: (self: SerializableHashMap) => boolean
    property_use_nick: (self: SerializableHashMap) => boolean
    node_name: (self: SerializableHashMap) => string
    find_property_spec: (self: SerializableHashMap, property_name: string) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableHashMap) => GObject.ParamSpec[]
    serialize: (self: SerializableHashMap, node: Node) => Node | null
    serialize_property: (self: SerializableHashMap, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableHashMap, node: Node) => boolean
    deserialize_property: (self: SerializableHashMap, property_node: Node) => boolean
    static name: string
}
export class SerializableHashMapPrivate {
    static name: string
}
export abstract class SerializableTreeMapClass {
    /* Fields of GXml.SerializableTreeMapClass */
    parent_class: Gee.TreeMapClass
    deserialize_proceed: (self: SerializableTreeMap) => boolean
    deserialized: (self: SerializableTreeMap) => boolean
    deserialize_node: (self: SerializableTreeMap, node: Node) => boolean
    deserialize_children: (self: SerializableTreeMap) => boolean
    set_default_namespace: (self: SerializableTreeMap, node: Node) => boolean
    serialize_use_xml_node_value: (self: SerializableTreeMap) => boolean
    property_use_nick: (self: SerializableTreeMap) => boolean
    node_name: (self: SerializableTreeMap) => string
    find_property_spec: (self: SerializableTreeMap, property_name: string) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableTreeMap) => GObject.ParamSpec[]
    serialize: (self: SerializableTreeMap, node: Node) => Node | null
    serialize_property: (self: SerializableTreeMap, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableTreeMap, node: Node) => boolean
    deserialize_property: (self: SerializableTreeMap, property_node: Node) => boolean
    static name: string
}
export class SerializableTreeMapPrivate {
    static name: string
}
export abstract class SerializableIntClass {
    /* Fields of GXml.SerializableIntClass */
    parent_class: SerializableDoubleClass
    static name: string
}
export class SerializableIntPrivate {
    static name: string
}
export abstract class SerializableObjectModelClass {
    /* Fields of GXml.SerializableObjectModelClass */
    parent_class: GObject.ObjectClass
    get_enable_unknown_serializable_property: (self: SerializableObjectModel) => boolean
    serialize_use_xml_node_value: (self: SerializableObjectModel) => boolean
    property_use_nick: (self: SerializableObjectModel) => boolean
    set_default_namespace: (self: SerializableObjectModel, node: Node) => boolean
    node_name: (self: SerializableObjectModel) => string
    find_property_spec: (self: SerializableObjectModel, property_name: string) => GObject.ParamSpec | null
    list_serializable_properties: (self: SerializableObjectModel) => GObject.ParamSpec[]
    serialize: (self: SerializableObjectModel, node: Node) => Node | null
    serialize_property: (self: SerializableObjectModel, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: SerializableObjectModel, node: Node) => boolean
    deserialize_property: (self: SerializableObjectModel, property_node: Node) => boolean
    to_string: (self: SerializableObjectModel) => string
    static name: string
}
export class SerializableObjectModelPrivate {
    static name: string
}
export abstract class SerializableValueListClass {
    /* Fields of GXml.SerializableValueListClass */
    parent_class: GObject.ObjectClass
    get_values: (self: SerializableValueList) => Gee.List
    add_values: (self: SerializableValueList, vals: string[]) => void
    get_value_at: (self: SerializableValueList, index: number) => string | null
    select_value_at: (self: SerializableValueList, index: number) => void
    get_values_array: (self: SerializableValueList) => string[]
    is_value: (self: SerializableValueList) => boolean
    static name: string
}
export class SerializableValueListPrivate {
    static name: string
}
export abstract class TAttributeClass {
    /* Fields of GXml.TAttributeClass */
    parent_class: TNodeClass
    static name: string
}
export class TAttributePrivate {
    static name: string
}
export abstract class TCDATAClass {
    /* Fields of GXml.TCDATAClass */
    parent_class: TNodeClass
    static name: string
}
export class TCDATAPrivate {
    static name: string
}
export abstract class TCommentClass {
    /* Fields of GXml.TCommentClass */
    parent_class: TNodeClass
    static name: string
}
export class TCommentPrivate {
    static name: string
}
export abstract class TDocumentClass {
    /* Fields of GXml.TDocumentClass */
    parent_class: TNodeClass
    static name: string
}
export class TDocumentPrivate {
    static name: string
}
export abstract class TElementClass {
    /* Fields of GXml.TElementClass */
    parent_class: TNodeClass
    static name: string
}
export class TElementPrivate {
    static name: string
}
export abstract class TNamespaceClass {
    /* Fields of GXml.TNamespaceClass */
    parent_class: TNodeClass
    static name: string
}
export class TNamespacePrivate {
    static name: string
}
export abstract class TNodeClass {
    /* Fields of GXml.TNodeClass */
    parent_class: GObject.ObjectClass
    set_namespace: (self: TNode, uri: string, prefix?: string | null) => boolean
    to_string: (self: TNode) => string
    set_parent: (self: TNode, node: Node) => void
    static name: string
}
export class TNodePrivate {
    static name: string
}
export abstract class TNodeTChildrenListClass {
    /* Fields of GXml.TNodeTChildrenListClass */
    parent_class: Gee.AbstractBidirListClass
    static name: string
}
export class TNodeTChildrenListPrivate {
    static name: string
}
export abstract class TProcessingInstructionClass {
    /* Fields of GXml.TProcessingInstructionClass */
    parent_class: TNodeClass
    static name: string
}
export class TProcessingInstructionPrivate {
    static name: string
}
export abstract class TTextClass {
    /* Fields of GXml.TTextClass */
    parent_class: TNodeClass
    static name: string
}
export class TTextPrivate {
    static name: string
}
export abstract class XParserClass {
    /* Fields of GXml.XParserClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class XParserPrivate {
    static name: string
}
export abstract class AttributeIface {
    /* Fields of GXml.AttributeIface */
    parent_iface: GObject.TypeInterface
    get_namespace: (self: Attribute) => Namespace | null
    set_namespace: (self: Attribute, value?: Namespace | null) => void
    get_prefix: (self: Attribute) => string | null
    static name: string
}
export abstract class CDATAIface {
    /* Fields of GXml.CDATAIface */
    parent_iface: GObject.TypeInterface
    get_str: (self: CDATA) => string
    static name: string
}
export abstract class CharacterIface {
    /* Fields of GXml.CharacterIface */
    parent_iface: GObject.TypeInterface
    get_str: (self: Character) => string
    set_str: (self: Character, value: string) => void
    static name: string
}
export abstract class CommentIface {
    /* Fields of GXml.CommentIface */
    parent_iface: GObject.TypeInterface
    get_str: (self: Comment) => string
    set_str: (self: Comment, value: string) => void
    static name: string
}
export abstract class DocumentIface {
    /* Fields of GXml.DocumentIface */
    parent_iface: GObject.TypeInterface
    create_element: (self: Document, name: string) => Node
    create_text: (self: Document, text: string) => Node
    create_comment: (self: Document, text: string) => Node
    create_cdata: (self: Document, text: string) => Node
    create_pi: (self: Document, target: string, data: string) => Node
    save: (self: Document, cancellable?: Gio.Cancellable | null) => boolean
    save_as: (self: Document, f: Gio.File, cancellable?: Gio.Cancellable | null) => boolean
    get_indent: (self: Document) => boolean
    set_indent: (self: Document, value: boolean) => void
    get_ns_top: (self: Document) => boolean
    set_ns_top: (self: Document, value: boolean) => void
    get_prefix_default_ns: (self: Document) => boolean
    set_prefix_default_ns: (self: Document, value: boolean) => void
    get_backup: (self: Document) => boolean
    set_backup: (self: Document, value: boolean) => void
    get_root: (self: Document) => Node
    get_file: (self: Document) => Gio.File
    set_file: (self: Document, value: Gio.File) => void
    static name: string
}
export abstract class DocumentTypeIface {
    /* Fields of GXml.DocumentTypeIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class DomAttrIface {
    /* Fields of GXml.DomAttrIface */
    parent_iface: GObject.TypeInterface
    get_namespace_uri: (self: DomAttr) => string | null
    get_prefix: (self: DomAttr) => string | null
    get_local_name: (self: DomAttr) => string
    get_name: (self: DomAttr) => string
    get_value: (self: DomAttr) => string
    set_value: (self: DomAttr, value: string) => void
    get_specified: (self: DomAttr) => boolean
    static name: string
}
export abstract class DomCharacterDataIface {
    /* Fields of GXml.DomCharacterDataIface */
    parent_iface: GObject.TypeInterface
    substring_data: (self: DomCharacterData, offset: number, count: number) => string
    append_data: (self: DomCharacterData, data: string) => void
    insert_data: (self: DomCharacterData, offset: number, data: string) => void
    delete_data: (self: DomCharacterData, offset: number, count: number) => void
    replace_data: (self: DomCharacterData, offset: number, count: number, data: string) => void
    get_data: (self: DomCharacterData) => string
    set_data: (self: DomCharacterData, value: string) => void
    get_length: (self: DomCharacterData) => number
    static name: string
}
export abstract class DomTextIface {
    /* Fields of GXml.DomTextIface */
    parent_iface: GObject.TypeInterface
    split_text: (self: DomText, offset: number) => DomText
    get_whole_text: (self: DomText) => string
    static name: string
}
export abstract class DomProcessingInstructionIface {
    /* Fields of GXml.DomProcessingInstructionIface */
    parent_iface: GObject.TypeInterface
    get_target: (self: DomProcessingInstruction) => string
    static name: string
}
export abstract class DomCommentIface {
    /* Fields of GXml.DomCommentIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class DomNonElementParentNodeIface {
    /* Fields of GXml.DomNonElementParentNodeIface */
    parent_iface: GObject.TypeInterface
    get_element_by_id: (self: DomNonElementParentNode, element_id: string) => DomElement | null
    static name: string
}
export abstract class DomParentNodeIface {
    /* Fields of GXml.DomParentNodeIface */
    parent_iface: GObject.TypeInterface
    query_selector: (self: DomParentNode, selectors: string) => DomElement | null
    query_selector_all: (self: DomParentNode, selectors: string) => DomNodeList
    get_elements_by_property_value: (self: DomParentNode, property: string, value: string) => DomElementList
    get_children: (self: DomParentNode) => DomHTMLCollection
    get_first_element_child: (self: DomParentNode) => DomElement | null
    get_last_element_child: (self: DomParentNode) => DomElement | null
    get_child_element_count: (self: DomParentNode) => number
    static name: string
}
export abstract class DomNonDocumentTypeChildNodeIface {
    /* Fields of GXml.DomNonDocumentTypeChildNodeIface */
    parent_iface: GObject.TypeInterface
    get_previous_element_sibling: (self: DomNonDocumentTypeChildNode) => DomElement | null
    get_next_element_sibling: (self: DomNonDocumentTypeChildNode) => DomElement | null
    static name: string
}
export abstract class DomChildNodeIface {
    /* Fields of GXml.DomChildNodeIface */
    parent_iface: GObject.TypeInterface
    remove: (self: DomChildNode) => void
    static name: string
}
export abstract class DomNodeListIface {
    /* Fields of GXml.DomNodeListIface */
    parent_iface: GObject.TypeInterface
    item: (self: DomNodeList, index: number) => DomNode | null
    get_length: (self: DomNodeList) => number
    static name: string
}
export abstract class DomHTMLCollectionIface {
    /* Fields of GXml.DomHTMLCollectionIface */
    parent_iface: GObject.TypeInterface
    get_element: (self: DomHTMLCollection, index: number) => DomElement | null
    to_array: (self: DomHTMLCollection) => DomElement[]
    item: (self: DomHTMLCollection, index: number) => DomElement | null
    named_item: (self: DomHTMLCollection, name: string) => DomElement | null
    get_length: (self: DomHTMLCollection) => number
    static name: string
}
export abstract class DomNodeIteratorIface {
    /* Fields of GXml.DomNodeIteratorIface */
    parent_iface: GObject.TypeInterface
    next_node: (self: DomNodeIterator) => DomNode | null
    previous_node: (self: DomNodeIterator) => DomNode | null
    detach: (self: DomNodeIterator) => void
    get_root: (self: DomNodeIterator) => DomNode
    get_reference_node: (self: DomNodeIterator) => DomNode
    get_pointer_before_reference_node: (self: DomNodeIterator) => boolean
    get_what_to_show: (self: DomNodeIterator) => number
    get_filter: (self: DomNodeIterator) => DomNodeFilter | null
    static name: string
}
export abstract class DomTreeWalkerIface {
    /* Fields of GXml.DomTreeWalkerIface */
    parent_iface: GObject.TypeInterface
    parentNode: (self: DomTreeWalker) => DomNode | null
    firstChild: (self: DomTreeWalker) => DomNode | null
    lastChild: (self: DomTreeWalker) => DomNode | null
    previousSibling: (self: DomTreeWalker) => DomNode | null
    nextSibling: (self: DomTreeWalker) => DomNode | null
    previousNode: (self: DomTreeWalker) => DomNode | null
    nextNode: (self: DomTreeWalker) => DomNode | null
    get_root: (self: DomTreeWalker) => DomNode
    get_what_to_show: (self: DomTreeWalker) => number
    get_filter: (self: DomTreeWalker) => DomNodeFilter | null
    get_current_node: (self: DomTreeWalker) => DomNode
    static name: string
}
export abstract class DomNamedNodeMapIface {
    /* Fields of GXml.DomNamedNodeMapIface */
    parent_iface: GObject.TypeInterface
    item: (self: DomNamedNodeMap, index: number) => DomNode | null
    get_named_item: (self: DomNamedNodeMap, name: string) => DomNode | null
    set_named_item: (self: DomNamedNodeMap, node: DomNode) => DomNode | null
    remove_named_item: (self: DomNamedNodeMap, name: string) => DomNode | null
    remove_named_item_ns: (self: DomNamedNodeMap, namespace_uri: string, localName: string) => DomNode | null
    get_named_item_ns: (self: DomNamedNodeMap, namespace_uri: string, local_name: string) => DomNode | null
    set_named_item_ns: (self: DomNamedNodeMap, node: DomNode) => DomNode | null
    get_length: (self: DomNamedNodeMap) => number
    static name: string
}
export abstract class DomTokenListIface {
    /* Fields of GXml.DomTokenListIface */
    parent_iface: GObject.TypeInterface
    item: (self: DomTokenList, index: number) => string | null
    contains: (self: DomTokenList, token: string) => boolean
    add: (self: DomTokenList, tokens: string[]) => void
    remove: (self: DomTokenList, tokens: string[]) => void
    toggle: (self: DomTokenList, token: string, force: boolean, auto: boolean) => boolean
    to_string: (self: DomTokenList) => string
    get_length: (self: DomTokenList) => number
    static name: string
}
export abstract class DomSettableTokenListIface {
    /* Fields of GXml.DomSettableTokenListIface */
    parent_iface: GObject.TypeInterface
    get_value: (self: DomSettableTokenList) => string
    set_value: (self: DomSettableTokenList, value: string) => void
    static name: string
}
export abstract class DomDocumentIface {
    /* Fields of GXml.DomDocumentIface */
    parent_iface: GObject.TypeInterface
    get_elements_by_tag_name: (self: DomDocument, local_name: string) => DomHTMLCollection
    get_elements_by_tag_name_ns: (self: DomDocument, namespace: string | null, local_name: string) => DomHTMLCollection
    get_elements_by_class_name: (self: DomDocument, classNames: string) => DomHTMLCollection
    create_element: (self: DomDocument, local_name: string) => DomElement
    create_element_ns: (self: DomDocument, namespace: string | null, qualified_name: string) => DomElement
    create_document_fragment: (self: DomDocument) => DomDocumentFragment
    create_text_node: (self: DomDocument, data: string) => DomText
    create_comment: (self: DomDocument, data: string) => DomComment
    create_processing_instruction: (self: DomDocument, target: string, data: string) => DomProcessingInstruction
    import_node: (self: DomDocument, node: DomNode, deep: boolean) => DomNode
    adopt_node: (self: DomDocument, node: DomNode) => DomNode
    create_event: (self: DomDocument, interface: string) => DomEvent
    create_range: (self: DomDocument) => DomRange
    create_node_iterator: (self: DomDocument, root: DomNode, whatToShow: number, filter?: DomNodeFilter | null) => DomNodeIterator
    create_tree_walker: (self: DomDocument, root: DomNode, what_to_show: number, filter?: DomNodeFilter | null) => DomTreeWalker
    get_implementation: (self: DomDocument) => DomImplementation
    get_url: (self: DomDocument) => string
    get_document_uri: (self: DomDocument) => string
    get_origin: (self: DomDocument) => string
    get_compat_mode: (self: DomDocument) => string
    get_character_set: (self: DomDocument) => string
    get_content_type: (self: DomDocument) => string
    get_doctype: (self: DomDocument) => DomDocumentType | null
    get_document_element: (self: DomDocument) => DomElement | null
    static name: string
}
export abstract class DomXMLDocumentIface {
    /* Fields of GXml.DomXMLDocumentIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class DomImplementationIface {
    /* Fields of GXml.DomImplementationIface */
    parent_iface: GObject.TypeInterface
    create_document_type: (self: DomImplementation, qualified_name: string, public_id: string, system_id: string) => DomDocumentType
    create_document: (self: DomImplementation, nspace?: string | null, qualified_name?: string | null, doctype?: DomDocumentType | null) => DomXMLDocument
    create_html_document: (self: DomImplementation, title: string) => Document
    has_feature: (self: DomImplementation) => boolean
    static name: string
}
export abstract class DomDocumentFragmentIface {
    /* Fields of GXml.DomDocumentFragmentIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class DomDocumentTypeIface {
    /* Fields of GXml.DomDocumentTypeIface */
    parent_iface: GObject.TypeInterface
    get_name: (self: DomDocumentType) => string
    get_public_id: (self: DomDocumentType) => string
    get_system_id: (self: DomDocumentType) => string
    static name: string
}
export abstract class DomHtmlDocumentIface {
    /* Fields of GXml.DomHtmlDocumentIface */
    parent_iface: GObject.TypeInterface
    read_from_string: (self: DomHtmlDocument, str: string) => void
    read_from_string_tolerant: (self: DomHtmlDocument, str: string) => void
    to_html: (self: DomHtmlDocument) => string
    static name: string
}
export abstract class DomElementIface {
    /* Fields of GXml.DomElementIface */
    parent_iface: GObject.TypeInterface
    get_attribute: (self: DomElement, name: string) => string | null
    get_attribute_ns: (self: DomElement, namespace: string | null, local_name: string) => string | null
    set_attribute: (self: DomElement, name: string, value: string) => void
    set_attribute_ns: (self: DomElement, namespace: string | null, name: string, value: string) => void
    remove_attribute: (self: DomElement, name: string) => void
    remove_attribute_ns: (self: DomElement, namespace: string | null, local_name: string) => void
    has_attribute: (self: DomElement, name: string) => boolean
    has_attribute_ns: (self: DomElement, namespace: string | null, local_name: string) => boolean
    get_elements_by_tag_name: (self: DomElement, local_name: string) => DomHTMLCollection
    get_elements_by_tag_name_ns: (self: DomElement, namespace: string | null, local_name: string) => DomHTMLCollection
    get_elements_by_class_name: (self: DomElement, class_names: string) => DomHTMLCollection
    get_namespace_uri: (self: DomElement) => string | null
    get_prefix: (self: DomElement) => string | null
    get_local_name: (self: DomElement) => string
    get_tag_name: (self: DomElement) => string
    get_id: (self: DomElement) => string | null
    set_id: (self: DomElement, value?: string | null) => void
    get_class_name: (self: DomElement) => string | null
    set_class_name: (self: DomElement, value?: string | null) => void
    get_class_list: (self: DomElement) => DomTokenList
    get_attributes: (self: DomElement) => DomNamedNodeMap
    static name: string
}
export abstract class DomEventTargetIface {
    /* Fields of GXml.DomEventTargetIface */
    parent_iface: GObject.TypeInterface
    add_event_listener: (self: DomEventTarget, type: string, callback: DomEventListener | null, capture: boolean) => void
    remove_event_listener: (self: DomEventTarget, type: string, callback: DomEventListener | null, capture: boolean) => void
    dispatch_event: (self: DomEventTarget, event: DomEvent) => boolean
    static name: string
}
export abstract class DomEventListenerIface {
    /* Fields of GXml.DomEventListenerIface */
    parent_iface: GObject.TypeInterface
    handle_event: (self: DomEventListener, event: DomEvent) => void
    static name: string
}
export abstract class DomEventIface {
    /* Fields of GXml.DomEventIface */
    parent_iface: GObject.TypeInterface
    stop_propagation: (self: DomEvent) => void
    stop_immediate_propagation: (self: DomEvent) => void
    prevent_default: (self: DomEvent) => void
    init_event: (self: DomEvent, type: string, bubbles: boolean, cancelable: boolean) => void
    get_etype: (self: DomEvent) => string
    get_event_target: (self: DomEvent) => DomEventTarget | null
    get_current_target: (self: DomEvent) => DomEventTarget | null
    get_bubbles: (self: DomEvent) => boolean
    get_cancelable: (self: DomEvent) => boolean
    get_is_trusted: (self: DomEvent) => boolean
    get_time_stamp: (self: DomEvent) => DomTimeStamp
    get_default_prevented: (self: DomEvent) => boolean
    get_event_phase: (self: DomEvent) => DomEventPhase
    static name: string
}
export abstract class DomCustomEventIface {
    /* Fields of GXml.DomCustomEventIface */
    parent_iface: GObject.TypeInterface
    init_custom_event: (self: DomCustomEvent, type: string, bubbles: boolean, cancelable: boolean, detail: any) => void
    get_detail: (self: DomCustomEvent) => /* result */ any
    static name: string
}
export abstract class DomMutationObserverIface {
    /* Fields of GXml.DomMutationObserverIface */
    parent_iface: GObject.TypeInterface
    observe: (self: DomMutationObserver, target: Node, options: DomMutationObserverInit) => void
    disconnect: (self: DomMutationObserver) => void
    take_records: (self: DomMutationObserver) => Gee.List
    static name: string
}
export abstract class DomMutationRecordIface {
    /* Fields of GXml.DomMutationRecordIface */
    parent_iface: GObject.TypeInterface
    get_mtype: (self: DomMutationRecord) => string
    get_target: (self: DomMutationRecord) => DomNode
    get_added_nodes: (self: DomMutationRecord) => DomNodeList
    set_added_nodes: (self: DomMutationRecord, value: DomNodeList) => void
    get_removed_nodes: (self: DomMutationRecord) => DomNodeList
    set_removed_nodes: (self: DomMutationRecord, value: DomNodeList) => void
    get_previous_sibling: (self: DomMutationRecord) => DomNode | null
    get_next_sibling: (self: DomMutationRecord) => DomNode | null
    get_attribute_name: (self: DomMutationRecord) => string | null
    get_attribute_namespace: (self: DomMutationRecord) => string | null
    get_old_value: (self: DomMutationRecord) => string | null
    static name: string
}
export abstract class DomNodeIface {
    /* Fields of GXml.DomNodeIface */
    parent_iface: GObject.TypeInterface
    has_child_nodes: (self: DomNode) => boolean
    normalize: (self: DomNode) => void
    is_equal_node: (self: DomNode, node?: DomNode | null) => boolean
    compare_document_position: (self: DomNode, other: DomNode) => DomNodeDocumentPosition
    contains: (self: DomNode, other?: DomNode | null) => boolean
    lookup_prefix: (self: DomNode, nspace?: string | null) => string | null
    lookup_namespace_uri: (self: DomNode, prefix?: string | null) => string | null
    is_default_namespace: (self: DomNode, nspace?: string | null) => boolean
    insert_before: (self: DomNode, node: DomNode, child?: DomNode | null) => DomNode
    append_child: (self: DomNode, node: DomNode) => DomNode
    replace_child: (self: DomNode, node: DomNode, child: DomNode) => DomNode
    remove_child: (self: DomNode, child: DomNode) => DomNode
    clone_node: (self: DomNode, deep: boolean) => DomNode
    get_node_type: (self: DomNode) => DomNodeNodeType
    get_node_name: (self: DomNode) => string
    get_base_uri: (self: DomNode) => string | null
    get_owner_document: (self: DomNode) => DomDocument | null
    set_owner_document: (self: DomNode, value?: DomDocument | null) => void
    get_parent_node: (self: DomNode) => DomNode | null
    get_parent_element: (self: DomNode) => DomElement | null
    get_child_nodes: (self: DomNode) => DomNodeList
    get_first_child: (self: DomNode) => DomNode | null
    get_last_child: (self: DomNode) => DomNode | null
    get_previous_sibling: (self: DomNode) => DomNode | null
    get_next_sibling: (self: DomNode) => DomNode | null
    get_node_value: (self: DomNode) => string | null
    set_node_value: (self: DomNode, value?: string | null) => void
    get_text_content: (self: DomNode) => string | null
    set_text_content: (self: DomNode, value?: string | null) => void
    static name: string
}
export abstract class DomRangeIface {
    /* Fields of GXml.DomRangeIface */
    parent_iface: GObject.TypeInterface
    set_start: (self: DomRange, node: DomNode, offset: number) => void
    set_end: (self: DomRange, node: DomNode, offset: number) => void
    set_start_before: (self: DomRange, node: DomNode) => void
    set_start_after: (self: DomRange, node: DomNode) => void
    set_end_before: (self: DomRange, node: DomNode) => void
    set_end_after: (self: DomRange, node: DomNode) => void
    collapse: (self: DomRange, to_start: boolean) => void
    select_node: (self: DomRange, node: DomNode) => void
    select_node_contents: (self: DomRange, node: DomNode) => void
    compare_boundary_points: (self: DomRange, how: DomRangeBoundaryPoints, sourceRange: DomRange) => number
    delete_contents: (self: DomRange) => void
    extract_contents: (self: DomRange) => DomDocumentFragment | null
    clone_contents: (self: DomRange) => DomDocumentFragment | null
    insert_node: (self: DomRange, node: DomNode) => void
    surround_contents: (self: DomRange, newParent: DomNode) => void
    clone_range: (self: DomRange) => DomRange
    detach: (self: DomRange) => void
    is_point_in_range: (self: DomRange, node: DomNode, offset: number) => boolean
    compare_point: (self: DomRange, node: DomNode, offset: number) => number
    intersects_node: (self: DomRange, node: DomNode) => boolean
    to_string: (self: DomRange) => string
    get_start_container: (self: DomRange) => DomNode
    get_start_offset: (self: DomRange) => number
    get_end_container: (self: DomRange) => DomNode
    get_end_offset: (self: DomRange) => number
    get_collapsed: (self: DomRange) => boolean
    get_common_ancestor_container: (self: DomRange) => DomNode
    static name: string
}
export abstract class ElementIface {
    /* Fields of GXml.ElementIface */
    parent_iface: GObject.TypeInterface
    normalize: (self: Element) => void
    set_attr: (self: Element, name: string, value: string) => void
    get_attr: (self: Element, name: string) => Node | null
    remove_attr: (self: Element, name: string) => void
    remove_ns_attr: (self: Element, name: string, uri: string) => void
    set_ns_attr: (self: Element, ns: string, name: string, value: string) => void
    get_ns_attr: (self: Element, name: string, uri: string) => Node | null
    get_tag_name: (self: Element) => string
    get_content: (self: Element) => string
    set_content: (self: Element, value: string) => void
    static name: string
}
export abstract class GomCollectionIface {
    /* Fields of GXml.GomCollectionIface */
    parent_iface: GObject.TypeInterface
    search: (self: GomCollection) => void
    get_item: (self: GomCollection, index: number) => DomElement | null
    append: (self: GomCollection, node: DomElement) => void
    initialize: (self: GomCollection, t: GObject.Type) => void
    create_item: (self: GomCollection) => GomElement | null
    validate_append: (self: GomCollection, index: number, element: DomElement) => boolean
    clear: (self: GomCollection) => void
    get_nodes_index: (self: GomCollection) => GLib.Queue
    get_element: (self: GomCollection) => GomElement
    set_element: (self: GomCollection, value: GomElement) => void
    get_items_name: (self: GomCollection) => string
    get_items_type: (self: GomCollection) => GObject.Type
    set_items_type: (self: GomCollection, value: GObject.Type) => void
    get_length: (self: GomCollection) => number
    static name: string
}
export abstract class MappeableElementIface {
    /* Fields of GXml.MappeableElementIface */
    parent_iface: GObject.TypeInterface
    get_map_key: (self: MappeableElement) => string
    static name: string
}
export abstract class MappeableElementPairKeyIface {
    /* Fields of GXml.MappeableElementPairKeyIface */
    parent_iface: GObject.TypeInterface
    get_map_primary_key: (self: MappeableElementPairKey) => string
    get_map_secondary_key: (self: MappeableElementPairKey) => string
    static name: string
}
export abstract class MappeableElementThreeKeyIface {
    /* Fields of GXml.MappeableElementThreeKeyIface */
    parent_iface: GObject.TypeInterface
    get_map_pkey: (self: MappeableElementThreeKey) => string
    get_map_skey: (self: MappeableElementThreeKey) => string
    get_map_tkey: (self: MappeableElementThreeKey) => string
    static name: string
}
export abstract class GomObjectIface {
    /* Fields of GXml.GomObjectIface */
    parent_iface: GObject.TypeInterface
    get_properties_list: (self: GomObject) => GObject.ParamSpec[]
    find_property_name: (self: GomObject, pname: string) => GObject.ParamSpec | null
    find_object_property_name: (self: GomObject, pname: string) => GObject.ParamSpec | null
    get_property_element_list: (self: GomObject) => GObject.ParamSpec[]
    get_property_string: (self: GomObject, prop: GObject.ParamSpec) => string | null
    get_attribute: (self: GomObject, name: string) => string | null
    set_attribute: (self: GomObject, name: string, val: string) => boolean
    get_child: (self: GomObject, name: string) => DomElement | null
    find_elements: (self: GomObject, name: string) => DomElementList
    remove_attribute: (self: GomObject, name: string) => boolean
    set_instance_property: (self: GomObject, name: string) => boolean
    clean_property_elements: (self: GomObject, name: string) => void
    static name: string
}
export abstract class GomPropertyIface {
    /* Fields of GXml.GomPropertyIface */
    parent_iface: GObject.TypeInterface
    validate_value: (self: GomProperty, val: string) => boolean
    get_value: (self: GomProperty) => string | null
    set_value: (self: GomProperty, value?: string | null) => void
    static name: string
}
export abstract class NamespaceIface {
    /* Fields of GXml.NamespaceIface */
    parent_iface: GObject.TypeInterface
    get_uri: (self: Namespace) => string | null
    get_prefix: (self: Namespace) => string | null
    static name: string
}
export abstract class NodeIface {
    /* Fields of GXml.NodeIface */
    parent_iface: GObject.TypeInterface
    get: (self: Node, key: string) => Node | null
    get_elements_by_property_value: (self: Node, property: string, value: string) => ElementList
    get_elements_by_name: (self: Node, name: string) => ElementList
    get_elements_by_name_ns: (self: Node, name: string, ns?: string | null) => ElementList
    to_string: (self: Node) => string
    set_namespace: (self: Node, uri: string, prefix?: string | null) => boolean
    ns_prefix: (self: Node) => string
    ns_uri: (self: Node) => string
    get_namespaces: (self: Node) => Gee.List
    get_children_nodes: (self: Node) => Gee.BidirList
    get_attrs: (self: Node) => Gee.Map
    get_name: (self: Node) => string
    get_value: (self: Node) => string
    set_value: (self: Node, value: string) => void
    get_type_node: (self: Node) => NodeType
    get_document: (self: Node) => Document
    get_parent: (self: Node) => Node
    static name: string
}
export abstract class NotationIface {
    /* Fields of GXml.NotationIface */
    parent_iface: GObject.TypeInterface
    get_public_id: (self: Notation) => string | null
    get_external_id: (self: Notation) => string | null
    static name: string
}
export abstract class EntityIface {
    /* Fields of GXml.EntityIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class ParserIface {
    /* Fields of GXml.ParserIface */
    parent_iface: GObject.TypeInterface
    write_file: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null) => void
    write_file_async: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    write_file_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    write_string: (self: Parser) => string
    write_string_async: (self: Parser, _callback_?: Gio.AsyncReadyCallback | null) => void
    write_string_finish: (self: Parser, _res_: Gio.AsyncResult) => string
    write_stream: (self: Parser, stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null) => void
    write_stream_async: (self: Parser, stream: Gio.OutputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    write_stream_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_file: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null) => void
    read_file_async: (self: Parser, file: Gio.File, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_file_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_stream: (self: Parser, stream: Gio.InputStream, cancellable?: Gio.Cancellable | null) => void
    read_stream_async: (self: Parser, stream: Gio.InputStream, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_stream_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_string: (self: Parser, str: string, cancellable?: Gio.Cancellable | null) => void
    read_string_async: (self: Parser, str: string, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_string_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    create_stream: (self: Parser, cancellable?: Gio.Cancellable | null) => Gio.InputStream
    create_stream_async: (self: Parser, cancellable?: Gio.Cancellable | null, _callback_?: Gio.AsyncReadyCallback | null) => void
    create_stream_finish: (self: Parser, _res_: Gio.AsyncResult) => Gio.InputStream
    read_child_nodes: (self: Parser, parent: DomNode) => void
    read_child_nodes_async: (self: Parser, parent: DomNode, _callback_?: Gio.AsyncReadyCallback | null) => void
    read_child_nodes_finish: (self: Parser, _res_: Gio.AsyncResult) => void
    read_child_node: (self: Parser, parent: DomNode) => boolean
    read_child_element: (self: Parser, parent: DomNode) => boolean
    read_element_property: (self: Parser, parent: DomNode) => [ /* returnType */ boolean, /* element */ DomNode ]
    add_element_collection: (self: Parser, parent: DomNode) => [ /* returnType */ boolean, /* element */ DomNode ]
    read_child_nodes_stream: (self: Parser, istream: Gio.InputStream, cancellable?: Gio.Cancellable | null) => void
    read_child_nodes_string: (self: Parser, str: string, cancellable?: Gio.Cancellable | null) => void
    read_unparsed: (self: Parser) => string
    move_next_node: (self: Parser) => boolean
    current_is_empty_element: (self: Parser) => boolean
    current_is_element: (self: Parser) => boolean
    current_is_document: (self: Parser) => boolean
    current_node_name: (self: Parser) => string
    create_element: (self: Parser, parent: DomNode) => DomElement | null
    read_element: (self: Parser, element: DomElement) => void
    get_backup: (self: Parser) => boolean
    set_backup: (self: Parser, value: boolean) => void
    get_indent: (self: Parser) => boolean
    set_indent: (self: Parser, value: boolean) => void
    get_node: (self: Parser) => DomNode
    static name: string
}
export abstract class ProcessingInstructionIface {
    /* Fields of GXml.ProcessingInstructionIface */
    parent_iface: GObject.TypeInterface
    get_target: (self: ProcessingInstruction) => string
    get_data: (self: ProcessingInstruction) => string
    set_data: (self: ProcessingInstruction, value: string) => void
    static name: string
}
export abstract class IXsdSchemaIface {
    /* Fields of GXml.IXsdSchemaIface */
    parent_iface: GObject.TypeInterface
    get_element_definitions: (self: IXsdSchema) => IXsdListElements
    set_element_definitions: (self: IXsdSchema, value: IXsdListElements) => void
    get_simple_type_definitions: (self: IXsdSchema) => IXsdListSimpleTypes
    set_simple_type_definitions: (self: IXsdSchema, value: IXsdListSimpleTypes) => void
    get_complex_type_definitions: (self: IXsdSchema) => IXsdListComplexTypes
    set_complex_type_definitions: (self: IXsdSchema, value: IXsdListComplexTypes) => void
    static name: string
}
export abstract class IXsdBaseTypeIface {
    /* Fields of GXml.IXsdBaseTypeIface */
    parent_iface: GObject.TypeInterface
    get_anotation: (self: IXsdBaseType) => IXsdAnnotation
    set_anotation: (self: IXsdBaseType, value: IXsdAnnotation) => void
    static name: string
}
export abstract class IXsdSimpleTypeIface {
    /* Fields of GXml.IXsdSimpleTypeIface */
    parent_iface: GObject.TypeInterface
    get_final: (self: IXsdSimpleType) => string
    set_final: (self: IXsdSimpleType, value: string) => void
    get_id: (self: IXsdSimpleType) => string
    set_id: (self: IXsdSimpleType, value: string) => void
    get_name: (self: IXsdSimpleType) => string
    set_name: (self: IXsdSimpleType, value: string) => void
    get_annotation: (self: IXsdSimpleType) => IXsdAnnotation
    set_annotation: (self: IXsdSimpleType, value: IXsdAnnotation) => void
    get_list: (self: IXsdSimpleType) => IXsdTypeList
    set_list: (self: IXsdSimpleType, value: IXsdTypeList) => void
    get_union: (self: IXsdSimpleType) => IXsdTypeUnion
    set_union: (self: IXsdSimpleType, value: IXsdTypeUnion) => void
    get_restriction: (self: IXsdSimpleType) => IXsdTypeRestriction
    set_restriction: (self: IXsdSimpleType, value: IXsdTypeRestriction) => void
    static name: string
}
export abstract class IXsdTypeDefIface {
    /* Fields of GXml.IXsdTypeDefIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionIface {
    /* Fields of GXml.IXsdTypeRestrictionIface */
    parent_iface: GObject.TypeInterface
    get_base: (self: IXsdTypeRestriction) => string
    set_base: (self: IXsdTypeRestriction, value: string) => void
    get_id: (self: IXsdTypeRestriction) => string
    set_id: (self: IXsdTypeRestriction, value: string) => void
    get_simple_type: (self: IXsdTypeRestriction) => IXsdSimpleType
    set_simple_type: (self: IXsdTypeRestriction, value: IXsdSimpleType) => void
    get_enumerations: (self: IXsdTypeRestriction) => IXsdListTypeRestrictionEnumerations
    set_enumerations: (self: IXsdTypeRestriction, value: IXsdListTypeRestrictionEnumerations) => void
    get_white_spaces: (self: IXsdTypeRestriction) => IXsdListTypeRestrictionWhiteSpaces
    set_white_spaces: (self: IXsdTypeRestriction, value: IXsdListTypeRestrictionWhiteSpaces) => void
    static name: string
}
export abstract class IXsdTypeListIface {
    /* Fields of GXml.IXsdTypeListIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeUnionIface {
    /* Fields of GXml.IXsdTypeUnionIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionDefIface {
    /* Fields of GXml.IXsdTypeRestrictionDefIface */
    parent_iface: GObject.TypeInterface
    get_annotation: (self: IXsdTypeRestrictionDef) => IXsdAnnotation
    set_annotation: (self: IXsdTypeRestrictionDef, value: IXsdAnnotation) => void
    static name: string
}
export abstract class IXsdTypeRestrictionMinExclusiveIface {
    /* Fields of GXml.IXsdTypeRestrictionMinExclusiveIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionMinInclusiveIface {
    /* Fields of GXml.IXsdTypeRestrictionMinInclusiveIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionMaxExclusiveIface {
    /* Fields of GXml.IXsdTypeRestrictionMaxExclusiveIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionMaxInclusiveIface {
    /* Fields of GXml.IXsdTypeRestrictionMaxInclusiveIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionTotalDigitsIface {
    /* Fields of GXml.IXsdTypeRestrictionTotalDigitsIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionFractionDigitsIface {
    /* Fields of GXml.IXsdTypeRestrictionFractionDigitsIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionLengthIface {
    /* Fields of GXml.IXsdTypeRestrictionLengthIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionMinLengthIface {
    /* Fields of GXml.IXsdTypeRestrictionMinLengthIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionMaxLengthIface {
    /* Fields of GXml.IXsdTypeRestrictionMaxLengthIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionEnumerationIface {
    /* Fields of GXml.IXsdTypeRestrictionEnumerationIface */
    parent_iface: GObject.TypeInterface
    get_id: (self: IXsdTypeRestrictionEnumeration) => string
    set_id: (self: IXsdTypeRestrictionEnumeration, value: string) => void
    get_value: (self: IXsdTypeRestrictionEnumeration) => string
    set_value: (self: IXsdTypeRestrictionEnumeration, value: string) => void
    static name: string
}
export abstract class IXsdTypeRestrictionWhiteSpaceIface {
    /* Fields of GXml.IXsdTypeRestrictionWhiteSpaceIface */
    parent_iface: GObject.TypeInterface
    get_fixed: (self: IXsdTypeRestrictionWhiteSpace) => boolean
    set_fixed: (self: IXsdTypeRestrictionWhiteSpace, value: boolean) => void
    get_id: (self: IXsdTypeRestrictionWhiteSpace) => string
    set_id: (self: IXsdTypeRestrictionWhiteSpace, value: string) => void
    get_value: (self: IXsdTypeRestrictionWhiteSpace) => string
    set_value: (self: IXsdTypeRestrictionWhiteSpace, value: string) => void
    static name: string
}
export abstract class IXsdTypeRestrictionPatternIface {
    /* Fields of GXml.IXsdTypeRestrictionPatternIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionAssertionIface {
    /* Fields of GXml.IXsdTypeRestrictionAssertionIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdTypeRestrictionExplicitTimezoneIface {
    /* Fields of GXml.IXsdTypeRestrictionExplicitTimezoneIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdComplexTypeIface {
    /* Fields of GXml.IXsdComplexTypeIface */
    parent_iface: GObject.TypeInterface
    get_abstract: (self: IXsdComplexType) => boolean
    set_abstract: (self: IXsdComplexType, value: boolean) => void
    get_block: (self: IXsdComplexType) => string
    set_block: (self: IXsdComplexType, value: string) => void
    get_final: (self: IXsdComplexType) => string
    set_final: (self: IXsdComplexType, value: string) => void
    get_mixed: (self: IXsdComplexType) => boolean
    set_mixed: (self: IXsdComplexType, value: boolean) => void
    get_name: (self: IXsdComplexType) => string
    set_name: (self: IXsdComplexType, value: string) => void
    get_default_attributes_apply: (self: IXsdComplexType) => boolean
    set_default_attributes_apply: (self: IXsdComplexType, value: boolean) => void
    get_content_type: (self: IXsdComplexType) => IXsdBaseContent
    set_content_type: (self: IXsdComplexType, value: IXsdBaseContent) => void
    get_type_attributes: (self: IXsdComplexType) => IXsdListAttributes
    get_group_attributes: (self: IXsdComplexType) => IXsdListAttributesGroup
    static name: string
}
export abstract class IXsdExtensionIface {
    /* Fields of GXml.IXsdExtensionIface */
    parent_iface: GObject.TypeInterface
    get_base: (self: IXsdExtension) => string
    set_base: (self: IXsdExtension, value: string) => void
    static name: string
}
export abstract class IXsdElementIface {
    /* Fields of GXml.IXsdElementIface */
    parent_iface: GObject.TypeInterface
    get_abstract: (self: IXsdElement) => boolean
    set_abstract: (self: IXsdElement, value: boolean) => void
    get_block: (self: IXsdElement) => string
    set_block: (self: IXsdElement, value: string) => void
    get_default: (self: IXsdElement) => string
    set_default: (self: IXsdElement, value: string) => void
    get_final: (self: IXsdElement) => string
    set_final: (self: IXsdElement, value: string) => void
    get_fixed: (self: IXsdElement) => string
    set_fixed: (self: IXsdElement, value: string) => void
    get_form: (self: IXsdElement) => string
    set_form: (self: IXsdElement, value: string) => void
    get_id: (self: IXsdElement) => string | null
    set_id: (self: IXsdElement, value?: string | null) => void
    get_maxOccurs: (self: IXsdElement) => string
    set_maxOccurs: (self: IXsdElement, value: string) => void
    get_minOccurs: (self: IXsdElement) => string
    set_minOccurs: (self: IXsdElement, value: string) => void
    get_name: (self: IXsdElement) => string
    set_name: (self: IXsdElement, value: string) => void
    get_nillable: (self: IXsdElement) => boolean
    set_nillable: (self: IXsdElement, value: boolean) => void
    get_ref: (self: IXsdElement) => string
    set_ref: (self: IXsdElement, value: string) => void
    get_substitution_group: (self: IXsdElement) => DomTokenList
    set_substitution_group: (self: IXsdElement, value: DomTokenList) => void
    get_target_namespace: (self: IXsdElement) => string
    set_target_namespace: (self: IXsdElement, value: string) => void
    get_object_type: (self: IXsdElement) => string
    set_object_type: (self: IXsdElement, value: string) => void
    get_anotation: (self: IXsdElement) => IXsdAnnotation
    set_anotation: (self: IXsdElement, value: IXsdAnnotation) => void
    get_simple_type: (self: IXsdElement) => IXsdSimpleType
    set_simple_type: (self: IXsdElement, value: IXsdSimpleType) => void
    get_complex_type: (self: IXsdElement) => IXsdComplexType
    set_complex_type: (self: IXsdElement, value: IXsdComplexType) => void
    static name: string
}
export abstract class IXsdAnnotationIface {
    /* Fields of GXml.IXsdAnnotationIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdBaseContentIface {
    /* Fields of GXml.IXsdBaseContentIface */
    parent_iface: GObject.TypeInterface
    get_anotation: (self: IXsdBaseContent) => IXsdAnnotation
    set_anotation: (self: IXsdBaseContent, value: IXsdAnnotation) => void
    static name: string
}
export abstract class IXsdSimpleContentIface {
    /* Fields of GXml.IXsdSimpleContentIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdComplexContentIface {
    /* Fields of GXml.IXsdComplexContentIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdOpenContentIface {
    /* Fields of GXml.IXsdOpenContentIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdBaseAttributeIface {
    /* Fields of GXml.IXsdBaseAttributeIface */
    parent_iface: GObject.TypeInterface
    get_anotation: (self: IXsdBaseAttribute) => IXsdAnnotation
    set_anotation: (self: IXsdBaseAttribute, value: IXsdAnnotation) => void
    static name: string
}
export abstract class IXsdAttributeIface {
    /* Fields of GXml.IXsdAttributeIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdAttributeGroupIface {
    /* Fields of GXml.IXsdAttributeGroupIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdListIface {
    /* Fields of GXml.IXsdListIface */
    parent_iface: GObject.TypeInterface
    get_item: (self: IXsdList, index: number) => DomElement | null
    append: (self: IXsdList, element: DomElement) => void
    remove: (self: IXsdList, index: number) => void
    index_of: (self: IXsdList, element: DomElement) => number
    get_element: (self: IXsdList) => DomElement
    set_element: (self: IXsdList, value: DomElement) => void
    get_items_type: (self: IXsdList) => GObject.Type
    set_items_type: (self: IXsdList, value: GObject.Type) => void
    get_items_name: (self: IXsdList) => GObject.Type
    set_items_name: (self: IXsdList, value: GObject.Type) => void
    get_length: (self: IXsdList) => number
    static name: string
}
export abstract class IXsdListElementsIface {
    /* Fields of GXml.IXsdListElementsIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdListSimpleTypesIface {
    /* Fields of GXml.IXsdListSimpleTypesIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdListComplexTypesIface {
    /* Fields of GXml.IXsdListComplexTypesIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdListAttributesIface {
    /* Fields of GXml.IXsdListAttributesIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdListAttributesGroupIface {
    /* Fields of GXml.IXsdListAttributesGroupIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdListTypeRestrictionEnumerationsIface {
    /* Fields of GXml.IXsdListTypeRestrictionEnumerationsIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class IXsdListTypeRestrictionWhiteSpacesIface {
    /* Fields of GXml.IXsdListTypeRestrictionWhiteSpacesIface */
    parent_iface: GObject.TypeInterface
    static name: string
}
export abstract class SerializableIface {
    /* Fields of GXml.SerializableIface */
    parent_iface: GObject.TypeInterface
    get_enable_unknown_serializable_property: (self: Serializable) => boolean
    set_default_namespace: (self: Serializable, node: Node) => boolean
    serialize_use_xml_node_value: (self: Serializable) => boolean
    node_name: (self: Serializable) => string
    property_use_nick: (self: Serializable) => boolean
    serialize: (self: Serializable, node: Node) => Node | null
    serialize_property: (self: Serializable, element: Node, prop: GObject.ParamSpec) => Node | null
    deserialize: (self: Serializable, node: Node) => boolean
    deserialize_property: (self: Serializable, property_node: Node) => boolean
    find_property_spec: (self: Serializable, property_name: string) => GObject.ParamSpec | null
    default_find_property_spec: (self: Serializable, property_name: string) => GObject.ParamSpec | null
    list_serializable_properties: (self: Serializable) => GObject.ParamSpec[]
    default_list_serializable_properties: (self: Serializable) => GObject.ParamSpec[]
    get_unknown_serializable_properties: (self: Serializable) => Gee.Map
    get_unknown_serializable_nodes: (self: Serializable) => Gee.Collection
    get_serialized_xml_node_value: (self: Serializable) => string | null
    set_serialized_xml_node_value: (self: Serializable, value?: string | null) => void
    static name: string
}
export abstract class SerializableCollectionIface {
    /* Fields of GXml.SerializableCollectionIface */
    parent_iface: GObject.TypeInterface
    deserialize_proceed: (self: SerializableCollection) => boolean
    deserialized: (self: SerializableCollection) => boolean
    deserialize_node: (self: SerializableCollection, node: Node) => boolean
    deserialize_children: (self: SerializableCollection) => boolean
    is_collection: (self: SerializableCollection) => boolean
    static name: string
}
export abstract class SerializableMapDualKeyIface {
    /* Fields of GXml.SerializableMapDualKeyIface */
    parent_iface: GObject.TypeInterface
    get_map_primary_key: (self: SerializableMapDualKey) => object | null
    get_map_secondary_key: (self: SerializableMapDualKey) => object | null
    static name: string
}
export abstract class SerializableMapKeyIface {
    /* Fields of GXml.SerializableMapKeyIface */
    parent_iface: GObject.TypeInterface
    get_map_key: (self: SerializableMapKey) => object | null
    static name: string
}
export abstract class SerializablePropertyIface {
    /* Fields of GXml.SerializablePropertyIface */
    parent_iface: GObject.TypeInterface
    get_serializable_property_value: (self: SerializableProperty) => string
    set_serializable_property_value: (self: SerializableProperty, val?: string | null) => void
    deserialize_property: (self: SerializableProperty, property_node: Node, prop: GObject.ParamSpec, nick: boolean) => boolean
    serialize_property: (self: SerializableProperty, property_node: Node, prop: GObject.ParamSpec, nick: boolean) => Node | null
    static name: string
}
export abstract class TextIface {
    /* Fields of GXml.TextIface */
    parent_iface: GObject.TypeInterface
    get_str: (self: Text) => string
    set_str: (self: Text, value: string) => void
    static name: string
}
export abstract class XPathContextIface {
    /* Fields of GXml.XPathContextIface */
    parent_iface: GObject.TypeInterface
    evaluate: (self: XPathContext, expression: string, resolver?: Gee.List | null) => XPathObject
    static name: string
}
export abstract class XPathObjectIface {
    /* Fields of GXml.XPathObjectIface */
    parent_iface: GObject.TypeInterface
    get_object_type: (self: XPathObject) => XPathObjectType
    get_boolean_value: (self: XPathObject) => boolean
    get_string_value: (self: XPathObject) => string
    get_number_value: (self: XPathObject) => number
    get_nodeset: (self: XPathObject) => DomHTMLCollection
    static name: string
}