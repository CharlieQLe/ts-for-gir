/**
 * WebKit2WebExtension-3.0
 */

import * as Gjs from './Gjs';
import * as JavaScriptCore from './JavaScriptCore-3.0';
import * as Gtk from './Gtk-3.0';
import * as xlib from './xlib-2.0';
import * as Gdk from './Gdk-3.0';
import * as cairo from './cairo-1.0';
import * as Pango from './Pango-1.0';
import * as HarfBuzz from './HarfBuzz-0.0';
import * as GObject from './GObject-2.0';
import * as GLib from './GLib-2.0';
import * as Gio from './Gio-2.0';
import * as GdkPixbuf from './GdkPixbuf-2.0';
import * as GModule from './GModule-2.0';
import * as Atk from './Atk-1.0';

export interface WebExtensionInitializeFunction {
    (extension: WebExtension): void
}
export interface WebExtensionInitializeWithUserDataFunction {
    (extension: WebExtension, user_data: GLib.Variant): void
}
export class DOMEventTarget {
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMEventTarget */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    static name: string
}
export interface DOMAttr_ConstructProps extends DOMNode_ConstructProps {
    value?: string
}
export class DOMAttr {
    /* Properties of WebKit2WebExtension.DOMAttr */
    readonly is_id: boolean
    readonly name: string
    readonly owner_element: DOMElement
    readonly specified: boolean
    value: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMAttr */
    parent_instance: DOMNode
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMAttr */
    get_is_id(): boolean
    get_name(): string
    get_owner_element(): DOMElement
    get_specified(): boolean
    get_value(): string
    set_value(value: string): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::is-id", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-id", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::specified", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::specified", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMAttr, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMAttr_ConstructProps)
    _init (config?: DOMAttr_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMAudioTrack_ConstructProps extends DOMObject_ConstructProps {
    enabled?: boolean
}
export class DOMAudioTrack {
    /* Properties of WebKit2WebExtension.DOMAudioTrack */
    enabled: boolean
    readonly id: string
    readonly kind: string
    readonly label: string
    readonly language: string
    /* Fields of WebKit2WebExtension.DOMAudioTrack */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMAudioTrack */
    get_enabled(): boolean
    get_id(): string
    get_kind(): string
    get_label(): string
    get_language(): string
    set_enabled(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::enabled", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enabled", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::kind", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::kind", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: DOMAudioTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMAudioTrack_ConstructProps)
    _init (config?: DOMAudioTrack_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMAudioTrackList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMAudioTrackList {
    /* Properties of WebKit2WebExtension.DOMAudioTrackList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMAudioTrackList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMAudioTrackList */
    dispatch_event(evt: DOMEvent): boolean
    get_length(): number
    get_track_by_id(id: string): DOMAudioTrack
    item(index: number): DOMAudioTrack
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMAudioTrackList */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMAudioTrackList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMAudioTrackList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMAudioTrackList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMAudioTrackList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMAudioTrackList_ConstructProps)
    _init (config?: DOMAudioTrackList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMBarInfo_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMBarInfo {
    /* Properties of WebKit2WebExtension.DOMBarInfo */
    readonly visible: boolean
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMBarInfo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMBarInfo, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::visible", callback: (($obj: DOMBarInfo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: DOMBarInfo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMBarInfo_ConstructProps)
    _init (config?: DOMBarInfo_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_visible(self: object): boolean
    static $gtype: GObject.Type
}
export interface DOMBarProp_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMBarProp {
    /* Properties of WebKit2WebExtension.DOMBarProp */
    readonly visible: boolean
    /* Fields of WebKit2WebExtension.DOMBarProp */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMBarProp */
    get_visible(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMBarProp, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMBarProp, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::visible", callback: (($obj: DOMBarProp, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visible", callback: (($obj: DOMBarProp, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMBarProp_ConstructProps)
    _init (config?: DOMBarProp_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMBatteryManager_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMBatteryManager {
    /* Properties of WebKit2WebExtension.DOMBatteryManager */
    readonly charging: boolean
    readonly charging_time: number
    readonly discharging_time: number
    readonly level: number
    /* Fields of WebKit2WebExtension.DOMBatteryManager */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMBatteryManager */
    dispatch_event(event: DOMEvent): boolean
    get_charging(): boolean
    get_charging_time(): number
    get_discharging_time(): number
    get_level(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMBatteryManager */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::charging", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charging", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::charging-time", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charging-time", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::discharging-time", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::discharging-time", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::level", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::level", callback: (($obj: DOMBatteryManager, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMBatteryManager_ConstructProps)
    _init (config?: DOMBatteryManager_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMBlob_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMBlob {
    /* Properties of WebKit2WebExtension.DOMBlob */
    readonly size: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMBlob */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMBlob */
    get_size(): number
    slice(start: number, end: number, contentType: string): DOMBlob
    webkit_slice(start: number, end: number, content_type: string): DOMBlob
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::size", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMBlob, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMBlob_ConstructProps)
    _init (config?: DOMBlob_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMCDATASection_ConstructProps extends DOMText_ConstructProps {
}
export class DOMCDATASection {
    /* Properties of WebKit2WebExtension.DOMText */
    readonly whole_text: string
    /* Properties of WebKit2WebExtension.DOMCharacterData */
    data: string
    readonly length: number
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMCDATASection */
    parent_instance: DOMText
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMText */
    get_whole_text(): string
    replace_whole_text(content: string): DOMText
    split_text(offset: number): DOMText
    /* Methods of WebKit2WebExtension.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::whole-text", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMCDATASection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMCDATASection_ConstructProps)
    _init (config?: DOMCDATASection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMCSSRule_ConstructProps extends DOMObject_ConstructProps {
    css_text?: string
}
export class DOMCSSRule {
    /* Properties of WebKit2WebExtension.DOMCSSRule */
    css_text: string
    readonly parent_rule: DOMCSSRule
    readonly parent_style_sheet: DOMCSSStyleSheet
    readonly type: number
    /* Fields of WebKit2WebExtension.DOMCSSRule */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMCSSRule */
    get_css_text(): string
    get_parent_rule(): DOMCSSRule
    get_parent_style_sheet(): DOMCSSStyleSheet
    set_css_text(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::css-text", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-text", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-rule", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-rule", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMCSSRule, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMCSSRule_ConstructProps)
    _init (config?: DOMCSSRule_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMCSSRuleList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMCSSRuleList {
    /* Properties of WebKit2WebExtension.DOMCSSRuleList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMCSSRuleList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMCSSRuleList */
    get_length(): number
    item(index: number): DOMCSSRule
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCSSRuleList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMCSSRuleList_ConstructProps)
    _init (config?: DOMCSSRuleList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMCSSStyleDeclaration_ConstructProps extends DOMObject_ConstructProps {
    css_text?: string
}
export class DOMCSSStyleDeclaration {
    /* Properties of WebKit2WebExtension.DOMCSSStyleDeclaration */
    css_text: string
    readonly length: number
    readonly parent_rule: DOMCSSRule
    /* Fields of WebKit2WebExtension.DOMCSSStyleDeclaration */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMCSSStyleDeclaration */
    get_css_text(): string
    get_length(): number
    get_parent_rule(): DOMCSSRule
    get_property_css_value(propertyName: string): DOMCSSValue
    get_property_priority(propertyName: string): string
    get_property_shorthand(propertyName: string): string
    get_property_value(propertyName: string): string
    is_property_implicit(propertyName: string): boolean
    item(index: number): string
    remove_property(propertyName: string): string
    set_css_text(value: string): void
    set_property(propertyName: string, value: string, priority: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::css-text", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-text", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-rule", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-rule", callback: (($obj: DOMCSSStyleDeclaration, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMCSSStyleDeclaration_ConstructProps)
    _init (config?: DOMCSSStyleDeclaration_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMCSSStyleSheet_ConstructProps extends DOMStyleSheet_ConstructProps {
}
export class DOMCSSStyleSheet {
    /* Properties of WebKit2WebExtension.DOMCSSStyleSheet */
    readonly css_rules: DOMCSSRuleList
    readonly owner_rule: DOMCSSRule
    readonly rules: DOMCSSRuleList
    /* Properties of WebKit2WebExtension.DOMStyleSheet */
    disabled: boolean
    readonly href: string
    readonly media: DOMMediaList
    readonly owner_node: DOMNode
    readonly parent_style_sheet: DOMStyleSheet
    readonly title: string
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMCSSStyleSheet */
    parent_instance: DOMStyleSheet
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMCSSStyleSheet */
    add_rule(selector: string, style: string, index: number): number
    delete_rule(index: number): void
    get_css_rules(): DOMCSSRuleList
    get_owner_rule(): DOMCSSRule
    get_rules(): DOMCSSRuleList
    insert_rule(rule: string, index: number): number
    remove_rule(index: number): void
    /* Methods of WebKit2WebExtension.DOMStyleSheet */
    get_content_type(): string
    get_disabled(): boolean
    get_href(): string
    get_media(): DOMMediaList
    get_owner_node(): DOMNode
    get_parent_style_sheet(): DOMStyleSheet
    get_title(): string
    set_disabled(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::css-rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-rule", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-rule", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rules", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::href", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-node", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-node", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-style-sheet", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMCSSStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMCSSStyleSheet_ConstructProps)
    _init (config?: DOMCSSStyleSheet_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMCSSValue_ConstructProps extends DOMObject_ConstructProps {
    css_text?: string
}
export class DOMCSSValue {
    /* Properties of WebKit2WebExtension.DOMCSSValue */
    css_text: string
    readonly css_value_type: number
    /* Fields of WebKit2WebExtension.DOMCSSValue */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMCSSValue */
    get_css_text(): string
    get_css_value_type(): number
    set_css_text(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::css-text", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-text", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css-value-type", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css-value-type", callback: (($obj: DOMCSSValue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMCSSValue_ConstructProps)
    _init (config?: DOMCSSValue_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMCharacterData_ConstructProps extends DOMNode_ConstructProps {
    data?: string
}
export class DOMCharacterData {
    /* Properties of WebKit2WebExtension.DOMCharacterData */
    data: string
    readonly length: number
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMCharacterData */
    parent_instance: DOMNode
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    remove(): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::data", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMCharacterData, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMCharacterData_ConstructProps)
    _init (config?: DOMCharacterData_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMComment_ConstructProps extends DOMCharacterData_ConstructProps {
}
export class DOMComment {
    /* Properties of WebKit2WebExtension.DOMCharacterData */
    data: string
    readonly length: number
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMComment */
    parent_instance: DOMCharacterData
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::data", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMComment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMComment_ConstructProps)
    _init (config?: DOMComment_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMConsole_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMConsole {
    /* Fields of WebKit2WebExtension.DOMConsole */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMConsole */
    get_memory(): object
    group_end(): void
    time(title: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMConsole, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMConsole, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMConsole_ConstructProps)
    _init (config?: DOMConsole_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMApplicationCache_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMApplicationCache {
    /* Properties of WebKit2WebExtension.DOMDOMApplicationCache */
    readonly status: number
    /* Fields of WebKit2WebExtension.DOMDOMApplicationCache */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMApplicationCache */
    abort(): void
    dispatch_event(evt: DOMEvent): boolean
    get_status(): number
    swap_cache(): void
    update(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMDOMApplicationCache */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMApplicationCache, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMApplicationCache, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::status", callback: (($obj: DOMDOMApplicationCache, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::status", callback: (($obj: DOMDOMApplicationCache, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMApplicationCache_ConstructProps)
    _init (config?: DOMDOMApplicationCache_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMImplementation_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMImplementation {
    /* Fields of WebKit2WebExtension.DOMDOMImplementation */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMImplementation */
    create_css_style_sheet(title: string, media: string): DOMCSSStyleSheet
    create_document(namespaceURI: string | null, qualifiedName: string, doctype?: DOMDocumentType | null): DOMDocument
    create_document_type(qualifiedName: string, publicId: string, systemId: string): DOMDocumentType
    create_html_document(title: string): DOMHTMLDocument
    has_feature(feature: string, version: string): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMImplementation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMImplementation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMImplementation_ConstructProps)
    _init (config?: DOMDOMImplementation_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMMimeType_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMMimeType {
    /* Properties of WebKit2WebExtension.DOMDOMMimeType */
    readonly description: string
    readonly enabled_plugin: DOMDOMPlugin
    readonly suffixes: string
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMDOMMimeType */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMMimeType */
    get_description(): string
    get_enabled_plugin(): DOMDOMPlugin
    get_suffixes(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::description", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::description", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enabled-plugin", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enabled-plugin", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::suffixes", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::suffixes", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMDOMMimeType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMMimeType_ConstructProps)
    _init (config?: DOMDOMMimeType_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMMimeTypeArray_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMMimeTypeArray {
    /* Properties of WebKit2WebExtension.DOMDOMMimeTypeArray */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMDOMMimeTypeArray */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMMimeTypeArray */
    get_length(): number
    item(index: number): DOMDOMMimeType
    named_item(name: string): DOMDOMMimeType
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMMimeTypeArray, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMMimeTypeArray, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMDOMMimeTypeArray, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMMimeTypeArray, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMMimeTypeArray_ConstructProps)
    _init (config?: DOMDOMMimeTypeArray_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMNamedFlowCollection_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMNamedFlowCollection {
    /* Properties of WebKit2WebExtension.DOMDOMNamedFlowCollection */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMDOMNamedFlowCollection */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMNamedFlowCollection */
    get_length(): number
    item(index: number): DOMWebKitNamedFlow
    named_item(name: string): DOMWebKitNamedFlow
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMNamedFlowCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMNamedFlowCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMDOMNamedFlowCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMNamedFlowCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMNamedFlowCollection_ConstructProps)
    _init (config?: DOMDOMNamedFlowCollection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMPlugin_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMPlugin {
    /* Properties of WebKit2WebExtension.DOMDOMPlugin */
    readonly description: string
    readonly filename: string
    readonly length: number
    readonly name: string
    /* Fields of WebKit2WebExtension.DOMDOMPlugin */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMPlugin */
    get_description(): string
    get_filename(): string
    get_length(): number
    get_name(): string
    item(index: number): DOMDOMMimeType
    named_item(name: string): DOMDOMMimeType
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::description", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::description", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filename", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filename", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMDOMPlugin, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMPlugin_ConstructProps)
    _init (config?: DOMDOMPlugin_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMPluginArray_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMPluginArray {
    /* Properties of WebKit2WebExtension.DOMDOMPluginArray */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMDOMPluginArray */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMPluginArray */
    get_length(): number
    item(index: number): DOMDOMPlugin
    named_item(name: string): DOMDOMPlugin
    refresh(reload: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMPluginArray, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMPluginArray, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMDOMPluginArray, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMPluginArray, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMPluginArray_ConstructProps)
    _init (config?: DOMDOMPluginArray_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMSecurityPolicy_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMSecurityPolicy {
    /* Properties of WebKit2WebExtension.DOMDOMSecurityPolicy */
    readonly allows_eval: boolean
    readonly allows_inline_script: boolean
    readonly allows_inline_style: boolean
    readonly is_active: boolean
    readonly report_ur_is: DOMDOMStringList
    /* Fields of WebKit2WebExtension.DOMDOMSecurityPolicy */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMSecurityPolicy */
    allows_connection_to(url: string): boolean
    allows_font_from(url: string): boolean
    allows_form_action(url: string): boolean
    allows_frame_from(url: string): boolean
    allows_image_from(url: string): boolean
    allows_media_from(url: string): boolean
    allows_object_from(url: string): boolean
    allows_plugin_type(type: string): boolean
    allows_script_from(url: string): boolean
    allows_style_from(url: string): boolean
    get_allows_eval(): boolean
    get_allows_inline_script(): boolean
    get_allows_inline_style(): boolean
    get_is_active(): boolean
    get_report_ur_is(): DOMDOMStringList
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::allows-eval", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::allows-eval", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::allows-inline-script", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::allows-inline-script", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::allows-inline-style", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::allows-inline-style", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-active", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-active", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::report-ur-is", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::report-ur-is", callback: (($obj: DOMDOMSecurityPolicy, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMSecurityPolicy_ConstructProps)
    _init (config?: DOMDOMSecurityPolicy_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMSelection_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMSelection {
    /* Properties of WebKit2WebExtension.DOMDOMSelection */
    readonly anchor_node: DOMNode
    readonly anchor_offset: number
    readonly base_node: DOMNode
    readonly base_offset: number
    readonly extent_node: DOMNode
    readonly extent_offset: number
    readonly focus_node: DOMNode
    readonly focus_offset: number
    readonly is_collapsed: boolean
    readonly range_count: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMDOMSelection */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMSelection */
    add_range(range: DOMRange): void
    collapse(node: DOMNode, index: number): void
    collapse_to_end(): void
    collapse_to_start(): void
    contains_node(node: DOMNode, allowPartial: boolean): boolean
    delete_from_document(): void
    empty(): void
    extend(node: DOMNode, offset: number): void
    get_anchor_node(): DOMNode
    get_anchor_offset(): number
    get_base_node(): DOMNode
    get_base_offset(): number
    get_extent_node(): DOMNode
    get_extent_offset(): number
    get_focus_node(): DOMNode
    get_focus_offset(): number
    get_is_collapsed(): boolean
    get_range_at(index: number): DOMRange
    get_range_count(): number
    modify(alter: string, direction: string, granularity: string): void
    remove_all_ranges(): void
    select_all_children(node: DOMNode): void
    set_base_and_extent(baseNode: DOMNode, baseOffset: number, extentNode: DOMNode, extentOffset: number): void
    set_position(node: DOMNode, offset: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anchor-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchor-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::anchor-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchor-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::extent-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extent-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::extent-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::extent-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-node", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::focus-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::focus-offset", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-collapsed", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-collapsed", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::range-count", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::range-count", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMDOMSelection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMSelection_ConstructProps)
    _init (config?: DOMDOMSelection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMSettableTokenList_ConstructProps extends DOMDOMTokenList_ConstructProps {
    value?: string
}
export class DOMDOMSettableTokenList {
    /* Properties of WebKit2WebExtension.DOMDOMSettableTokenList */
    value: string
    /* Properties of WebKit2WebExtension.DOMDOMTokenList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMDOMSettableTokenList */
    parent_instance: DOMDOMTokenList
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMSettableTokenList */
    get_value(): string
    set_value(value: string): void
    /* Methods of WebKit2WebExtension.DOMDOMTokenList */
    contains(token: string): boolean
    get_length(): number
    item(index: number): string
    replace(token: string, newToken: string): void
    toggle(token: string, force: boolean): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::value", callback: (($obj: DOMDOMSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMDOMSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMDOMSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMSettableTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMSettableTokenList_ConstructProps)
    _init (config?: DOMDOMSettableTokenList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMStringList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMStringList {
    /* Properties of WebKit2WebExtension.DOMDOMStringList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMDOMStringList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMStringList */
    contains(string: string): boolean
    get_length(): number
    item(index: number): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMStringList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMStringList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMDOMStringList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMStringList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMStringList_ConstructProps)
    _init (config?: DOMDOMStringList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMStringMap_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMStringMap {
    /* Fields of WebKit2WebExtension.DOMDOMStringMap */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMStringMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMStringMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMStringMap_ConstructProps)
    _init (config?: DOMDOMStringMap_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMTokenList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMTokenList {
    /* Properties of WebKit2WebExtension.DOMDOMTokenList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMDOMTokenList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMTokenList */
    add(tokens: string): void
    contains(token: string): boolean
    get_length(): number
    item(index: number): string
    remove(tokens: string): void
    toggle(token: string, force: boolean): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMTokenList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMTokenList_ConstructProps)
    _init (config?: DOMDOMTokenList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMWindow_ConstructProps extends DOMObject_ConstructProps {
    default_status?: string
    name?: string
    status?: string
}
export class DOMDOMWindow {
    /* Properties of WebKit2WebExtension.DOMDOMWindow */
    readonly application_cache: DOMDOMApplicationCache
    readonly client_information: DOMNavigator
    readonly closed: boolean
    readonly console: DOMConsole
    readonly css: DOMDOMWindowCSS
    default_status: string
    readonly device_pixel_ratio: number
    readonly document: DOMDocument
    readonly frame_element: DOMElement
    readonly frames: DOMDOMWindow
    readonly history: DOMHistory
    readonly inner_height: number
    readonly inner_width: number
    readonly length: number
    readonly local_storage: DOMStorage
    readonly locationbar: DOMBarProp
    readonly menubar: DOMBarProp
    name: string
    readonly navigator: DOMNavigator
    readonly offscreen_buffering: boolean
    readonly opener: DOMDOMWindow
    readonly outer_height: number
    readonly outer_width: number
    readonly page_x_offset: number
    readonly page_y_offset: number
    readonly parent: DOMDOMWindow
    readonly performance: DOMPerformance
    readonly personalbar: DOMBarProp
    readonly screen: DOMScreen
    readonly screen_left: number
    readonly screen_top: number
    readonly screen_x: number
    readonly screen_y: number
    readonly scroll_x: number
    readonly scroll_y: number
    readonly scrollbars: DOMBarProp
    readonly self: DOMDOMWindow
    readonly session_storage: DOMStorage
    status: string
    readonly statusbar: DOMBarProp
    readonly style_media: DOMStyleMedia
    readonly toolbar: DOMBarProp
    readonly top: DOMDOMWindow
    readonly webkit_storage_info: DOMStorageInfo
    readonly window: DOMDOMWindow
    /* Fields of WebKit2WebExtension.DOMDOMWindow */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMWindow */
    alert(message: string): void
    atob(string: string): string
    blur(): void
    btoa(string: string): string
    cancel_animation_frame(id: number): void
    capture_events(): void
    clear_interval(handle: number): void
    clear_timeout(handle: number): void
    close(): void
    confirm(message: string): boolean
    dispatch_event(evt: DOMEvent): boolean
    find(string: string, caseSensitive: boolean, backwards: boolean, wrap: boolean, wholeWord: boolean, searchInFrames: boolean, showDialog: boolean): boolean
    focus(): void
    get_application_cache(): DOMDOMApplicationCache
    get_client_information(): DOMNavigator
    get_closed(): boolean
    get_computed_style(element: DOMElement, pseudoElement?: string | null): DOMCSSStyleDeclaration
    get_console(): DOMConsole
    get_css(): DOMDOMWindowCSS
    get_default_status(): string
    get_device_pixel_ratio(): number
    get_document(): DOMDocument
    get_frame_element(): DOMElement
    get_frames(): DOMDOMWindow
    get_history(): DOMHistory
    get_inner_height(): number
    get_inner_width(): number
    get_length(): number
    get_local_storage(): DOMStorage
    get_locationbar(): DOMBarProp
    get_menubar(): DOMBarProp
    get_name(): string
    get_navigator(): DOMNavigator
    get_offscreen_buffering(): boolean
    get_opener(): DOMDOMWindow
    get_outer_height(): number
    get_outer_width(): number
    get_page_x_offset(): number
    get_page_y_offset(): number
    get_parent(): DOMDOMWindow
    get_performance(): DOMPerformance
    get_personalbar(): DOMBarProp
    get_screen(): DOMScreen
    get_screen_left(): number
    get_screen_top(): number
    get_screen_x(): number
    get_screen_y(): number
    get_scroll_x(): number
    get_scroll_y(): number
    get_scrollbars(): DOMBarProp
    get_selection(): DOMDOMSelection
    get_self(): DOMDOMWindow
    get_session_storage(): DOMStorage
    get_status(): string
    get_statusbar(): DOMBarProp
    get_style_media(): DOMStyleMedia
    get_toolbar(): DOMBarProp
    get_top(): DOMDOMWindow
    get_webkit_storage_info(): DOMStorageInfo
    get_window(): DOMDOMWindow
    match_media(query: string): DOMMediaQueryList
    move_by(x: number, y: number): void
    move_to(x: number, y: number): void
    print(): void
    prompt(message: string, defaultValue: string): string
    release_events(): void
    resize_by(x: number, y: number): void
    resize_to(width: number, height: number): void
    scroll(x: number, y: number): void
    scroll_by(x: number, y: number): void
    scroll_to(x: number, y: number): void
    set_default_status(value: string): void
    set_name(value: string): void
    set_status(value: string): void
    stop(): void
    webkit_cancel_animation_frame(id: number): void
    webkit_cancel_request_animation_frame(id: number): void
    webkit_convert_point_from_node_to_page(node: DOMNode, p: DOMWebKitPoint): DOMWebKitPoint
    webkit_convert_point_from_page_to_node(node: DOMNode, p: DOMWebKitPoint): DOMWebKitPoint
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMDOMWindow */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::application-cache", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::application-cache", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-information", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-information", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::closed", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::closed", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::console", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::console", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::css", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::css", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::device-pixel-ratio", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::device-pixel-ratio", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::frame-element", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frame-element", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::frames", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frames", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::history", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::history", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-storage", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-storage", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::locationbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::locationbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::menubar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::menubar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::navigator", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::navigator", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offscreen-buffering", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offscreen-buffering", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::opener", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::opener", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-height", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-width", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-x-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-y-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y-offset", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::performance", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::performance", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::personalbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::personalbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-left", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-left", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-x", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-y", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scrollbars", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrollbars", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::self", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::self", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::session-storage", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::session-storage", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::status", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::statusbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::statusbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-media", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-media", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::toolbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::toolbar", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::top", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-storage-info", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-storage-info", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::window", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::window", callback: (($obj: DOMDOMWindow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMWindow_ConstructProps)
    _init (config?: DOMDOMWindow_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDOMWindowCSS_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDOMWindowCSS {
    /* Fields of WebKit2WebExtension.DOMDOMWindowCSS */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDOMWindowCSS */
    supports(property: string, value: string): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDOMWindowCSS, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDOMWindowCSS, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDOMWindowCSS_ConstructProps)
    _init (config?: DOMDOMWindowCSS_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDatabase_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMDatabase {
    /* Properties of WebKit2WebExtension.DOMDatabase */
    readonly version: string
    /* Fields of WebKit2WebExtension.DOMDatabase */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDatabase */
    get_version(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDatabase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDatabase, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::version", callback: (($obj: DOMDatabase, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::version", callback: (($obj: DOMDatabase, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDatabase_ConstructProps)
    _init (config?: DOMDatabase_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDocument_ConstructProps extends DOMNode_ConstructProps {
    charset?: string
    cookie?: string
    document_uri?: string
    selected_stylesheet_set?: string
    title?: string
    xml_standalone?: boolean
    xml_version?: string
}
export class DOMDocument {
    /* Properties of WebKit2WebExtension.DOMDocument */
    readonly anchors: DOMHTMLCollection
    readonly applets: DOMHTMLCollection
    readonly body: DOMHTMLElement
    readonly character_set: string
    charset: string
    readonly compat_mode: string
    cookie: string
    readonly current_script: DOMHTMLScriptElement
    readonly default_charset: string
    readonly default_view: DOMDOMWindow
    readonly doctype: DOMDocumentType
    readonly document_element: DOMElement
    document_uri: string
    readonly domain: string
    readonly forms: DOMHTMLCollection
    readonly head: DOMHTMLHeadElement
    readonly hidden: boolean
    readonly images: DOMHTMLCollection
    readonly implementation: DOMDOMImplementation
    readonly input_encoding: string
    readonly last_modified: string
    readonly links: DOMHTMLCollection
    readonly preferred_stylesheet_set: string
    readonly ready_state: string
    readonly referrer: string
    readonly security_policy: DOMDOMSecurityPolicy
    selected_stylesheet_set: string
    readonly style_sheets: DOMStyleSheetList
    title: string
    readonly url: string
    readonly visibility_state: string
    readonly webkit_current_full_screen_element: DOMElement
    readonly webkit_full_screen_keyboard_input_allowed: boolean
    readonly webkit_fullscreen_element: DOMElement
    readonly webkit_fullscreen_enabled: boolean
    readonly webkit_is_full_screen: boolean
    readonly webkit_pointer_lock_element: DOMElement
    readonly xml_encoding: string
    xml_standalone: boolean
    xml_version: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMDocument */
    parent_instance: DOMNode
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDocument */
    adopt_node(source: DOMNode): DOMNode
    caret_range_from_point(x: number, y: number): DOMRange
    create_attribute(name: string): DOMAttr
    create_attribute_ns(namespaceURI: string | null, qualifiedName: string): DOMAttr
    create_cdata_section(data: string): DOMCDATASection
    create_comment(data: string): DOMComment
    create_css_style_declaration(): DOMCSSStyleDeclaration
    create_document_fragment(): DOMDocumentFragment
    create_element(tagName: string): DOMElement
    create_element_ns(namespaceURI: string | null, qualifiedName: string): DOMElement
    create_entity_reference(name?: string | null): DOMEntityReference
    create_event(eventType: string): DOMEvent
    create_expression(expression: string, resolver: DOMXPathNSResolver): DOMXPathExpression
    create_node_iterator(root: DOMNode, whatToShow: number, filter: DOMNodeFilter, expandEntityReferences: boolean): DOMNodeIterator
    create_ns_resolver(nodeResolver: DOMNode): DOMXPathNSResolver
    create_processing_instruction(target: string, data: string): DOMProcessingInstruction
    create_range(): DOMRange
    create_text_node(data: string): DOMText
    create_touch(window: DOMDOMWindow, target: DOMEventTarget, identifier: number, pageX: number, pageY: number, screenX: number, screenY: number, webkitRadiusX: number, webkitRadiusY: number, webkitRotationAngle: number, webkitForce: number): DOMTouch
    create_tree_walker(root: DOMNode, whatToShow: number, filter: DOMNodeFilter, expandEntityReferences: boolean): DOMTreeWalker
    element_from_point(x: number, y: number): DOMElement
    evaluate(expression: string, contextNode: DOMNode, resolver: DOMXPathNSResolver | null, type: number, inResult?: DOMXPathResult | null): DOMXPathResult
    exec_command(command: string, userInterface: boolean, value: string): boolean
    get_anchors(): DOMHTMLCollection
    get_applets(): DOMHTMLCollection
    get_body(): DOMHTMLElement
    get_character_set(): string
    get_charset(): string
    get_compat_mode(): string
    get_cookie(): string
    get_current_script(): DOMHTMLScriptElement
    get_default_charset(): string
    get_default_view(): DOMDOMWindow
    get_doctype(): DOMDocumentType
    get_document_element(): DOMElement
    get_document_uri(): string
    get_domain(): string
    get_element_by_id(elementId: string): DOMElement
    get_elements_by_class_name(tagname: string): DOMNodeList
    get_elements_by_name(elementName: string): DOMNodeList
    get_elements_by_tag_name(tagname: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_forms(): DOMHTMLCollection
    get_head(): DOMHTMLHeadElement
    get_hidden(): boolean
    get_images(): DOMHTMLCollection
    get_implementation(): DOMDOMImplementation
    get_input_encoding(): string
    get_last_modified(): string
    get_links(): DOMHTMLCollection
    get_override_style(element: DOMElement, pseudoElement?: string | null): DOMCSSStyleDeclaration
    get_preferred_stylesheet_set(): string
    get_ready_state(): string
    get_referrer(): string
    get_security_policy(): DOMDOMSecurityPolicy
    get_selected_stylesheet_set(): string
    get_style_sheets(): DOMStyleSheetList
    get_title(): string
    get_url(): string
    get_visibility_state(): string
    get_webkit_current_full_screen_element(): DOMElement
    get_webkit_full_screen_keyboard_input_allowed(): boolean
    get_webkit_fullscreen_element(): DOMElement
    get_webkit_fullscreen_enabled(): boolean
    get_webkit_hidden(): boolean
    get_webkit_is_full_screen(): boolean
    get_webkit_pointer_lock_element(): DOMElement
    get_webkit_visibility_state(): string
    get_xml_encoding(): string
    get_xml_standalone(): boolean
    get_xml_version(): string
    import_node(importedNode: DOMNode, deep: boolean): DOMNode
    query_command_enabled(command: string): boolean
    query_command_indeterm(command: string): boolean
    query_command_state(command: string): boolean
    query_command_supported(command: string): boolean
    query_command_value(command: string): string
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    set_body(value: DOMHTMLElement): void
    set_charset(value: string): void
    set_cookie(value: string): void
    set_document_uri(value: string): void
    set_selected_stylesheet_set(value: string): void
    set_title(value: string): void
    set_xml_standalone(value: boolean): void
    set_xml_version(value: string): void
    webkit_cancel_full_screen(): void
    webkit_exit_fullscreen(): void
    webkit_exit_pointer_lock(): void
    webkit_get_named_flows(): DOMDOMNamedFlowCollection
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::anchors", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchors", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::applets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::applets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::body", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::body", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::character-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::charset", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::compat-mode", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cookie", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cookie", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-script", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-script", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-charset", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-charset", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-view", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-view", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::doctype", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::domain", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::domain", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::forms", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::forms", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::head", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::head", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::images", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::images", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::implementation", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-modified", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-modified", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::links", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::links", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ready-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ready-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::referrer", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::referrer", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::security-policy", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::security-policy", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-sheets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-sheets", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::url", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visibility-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visibility-state", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-pointer-lock-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-pointer-lock-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xml-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-encoding", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xml-standalone", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-standalone", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xml-version", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-version", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDocument_ConstructProps)
    _init (config?: DOMDocument_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDocumentFragment_ConstructProps extends DOMNode_ConstructProps {
}
export class DOMDocumentFragment {
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMDocumentFragment */
    parent_instance: DOMNode
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDocumentFragment */
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMDocumentFragment, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDocumentFragment_ConstructProps)
    _init (config?: DOMDocumentFragment_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMDocumentType_ConstructProps extends DOMNode_ConstructProps {
}
export class DOMDocumentType {
    /* Properties of WebKit2WebExtension.DOMDocumentType */
    readonly entities: DOMNamedNodeMap
    readonly internal_subset: string
    readonly name: string
    readonly notations: DOMNamedNodeMap
    readonly public_id: string
    readonly system_id: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMDocumentType */
    parent_instance: DOMNode
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMDocumentType */
    get_entities(): DOMNamedNodeMap
    get_internal_subset(): string
    get_name(): string
    get_notations(): DOMNamedNodeMap
    get_public_id(): string
    get_system_id(): string
    remove(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::entities", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entities", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::internal-subset", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::internal-subset", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::notations", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::notations", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::public-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::public-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::system-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::system-id", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMDocumentType, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMDocumentType_ConstructProps)
    _init (config?: DOMDocumentType_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMElement_ConstructProps extends DOMNode_ConstructProps {
    class_name?: string
    id?: string
    scroll_left?: number
    scroll_top?: number
}
export class DOMElement {
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    readonly last_element_child: DOMElement
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMElement */
    parent_instance: DOMNode
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::attributes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMElement_ConstructProps)
    _init (config?: DOMElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMEntityReference_ConstructProps extends DOMNode_ConstructProps {
}
export class DOMEntityReference {
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMEntityReference */
    parent_instance: DOMNode
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMEntityReference, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMEntityReference_ConstructProps)
    _init (config?: DOMEntityReference_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMEvent_ConstructProps extends DOMObject_ConstructProps {
    cancel_bubble?: boolean
    return_value?: boolean
}
export class DOMEvent {
    /* Properties of WebKit2WebExtension.DOMEvent */
    readonly bubbles: boolean
    cancel_bubble: boolean
    readonly cancelable: boolean
    readonly current_target: DOMEventTarget
    readonly default_prevented: boolean
    readonly event_phase: number
    return_value: boolean
    readonly src_element: DOMEventTarget
    readonly target: DOMEventTarget
    readonly time_stamp: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMEvent */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_default_prevented(): boolean
    get_event_phase(): number
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_immediate_propagation(): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::bubbles", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-prevented", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-prevented", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::return-value", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src-element", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMEvent_ConstructProps)
    _init (config?: DOMEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMFile_ConstructProps extends DOMBlob_ConstructProps {
}
export class DOMFile {
    /* Properties of WebKit2WebExtension.DOMFile */
    readonly name: string
    readonly webkit_relative_path: string
    /* Properties of WebKit2WebExtension.DOMBlob */
    readonly size: number
    /* Fields of WebKit2WebExtension.DOMFile */
    parent_instance: DOMBlob
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMFile */
    get_name(): string
    get_webkit_relative_path(): string
    /* Methods of WebKit2WebExtension.DOMBlob */
    get_size(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-relative-path", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-relative-path", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMFile, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMFile_ConstructProps)
    _init (config?: DOMFile_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMFileList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMFileList {
    /* Properties of WebKit2WebExtension.DOMFileList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMFileList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMFileList */
    get_length(): number
    item(index: number): DOMFile
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMFileList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMFileList_ConstructProps)
    _init (config?: DOMFileList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMGamepad_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMGamepad {
    /* Properties of WebKit2WebExtension.DOMGamepad */
    readonly id: string
    readonly index: number
    readonly timestamp: number
    /* Fields of WebKit2WebExtension.DOMGamepad */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMGamepad */
    get_id(): string
    get_index(): number
    get_timestamp(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::id", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::index", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::index", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::timestamp", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::timestamp", callback: (($obj: DOMGamepad, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMGamepad_ConstructProps)
    _init (config?: DOMGamepad_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMGamepadList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMGamepadList {
    /* Properties of WebKit2WebExtension.DOMGamepadList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMGamepadList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMGamepadList */
    get_length(): number
    item(index: number): DOMGamepad
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMGamepadList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMGamepadList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMGamepadList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMGamepadList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMGamepadList_ConstructProps)
    _init (config?: DOMGamepadList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMGeolocation_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMGeolocation {
    /* Fields of WebKit2WebExtension.DOMGeolocation */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMGeolocation */
    clear_watch(watchID: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMGeolocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMGeolocation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMGeolocation_ConstructProps)
    _init (config?: DOMGeolocation_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLAnchorElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    charset?: string
    coords?: string
    download?: string
    hash?: string
    host?: string
    hostname?: string
    href?: string
    hreflang?: string
    name?: string
    pathname?: string
    ping?: string
    port?: string
    protocol?: string
    rel?: string
    rev?: string
    search?: string
    shape?: string
    target?: string
    type?: string
}
export class DOMHTMLAnchorElement {
    /* Properties of WebKit2WebExtension.DOMHTMLAnchorElement */
    charset: string
    coords: string
    download: string
    hash: string
    host: string
    hostname: string
    href: string
    hreflang: string
    name: string
    readonly origin: string
    pathname: string
    ping: string
    port: string
    protocol: string
    rel: string
    rev: string
    search: string
    shape: string
    target: string
    readonly text: string
    type: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLAnchorElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLAnchorElement */
    get_charset(): string
    get_coords(): string
    get_download(): string
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_hreflang(): string
    get_name(): string
    get_origin(): string
    get_pathname(): string
    get_ping(): string
    get_port(): string
    get_protocol(): string
    get_rel(): string
    get_rev(): string
    get_search(): string
    get_shape(): string
    get_target(): string
    get_text(): string
    set_charset(value: string): void
    set_coords(value: string): void
    set_download(value: string): void
    set_hash(value: string): void
    set_host(value: string): void
    set_hostname(value: string): void
    set_href(value: string): void
    set_hreflang(value: string): void
    set_name(value: string): void
    set_pathname(value: string): void
    set_ping(value: string): void
    set_port(value: string): void
    set_protocol(value: string): void
    set_rel(value: string): void
    set_rev(value: string): void
    set_search(value: string): void
    set_shape(value: string): void
    set_target(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::coords", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::coords", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::download", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::download", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hash", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hash", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::host", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::host", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hostname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hostname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::href", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hreflang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hreflang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::origin", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pathname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pathname", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ping", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ping", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::port", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::port", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::protocol", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::protocol", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rel", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rel", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rev", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rev", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::search", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shape", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shape", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLAnchorElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLAnchorElement_ConstructProps)
    _init (config?: DOMHTMLAnchorElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLAppletElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    alt?: string
    archive?: string
    code?: string
    code_base?: string
    height?: string
    hspace?: number
    name?: string
    object?: string
    vspace?: number
    width?: string
}
export class DOMHTMLAppletElement {
    /* Properties of WebKit2WebExtension.DOMHTMLAppletElement */
    align: string
    alt: string
    archive: string
    code: string
    code_base: string
    height: string
    hspace: number
    name: string
    object: string
    vspace: number
    width: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLAppletElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLAppletElement */
    get_align(): string
    get_alt(): string
    get_archive(): string
    get_code(): string
    get_code_base(): string
    get_height(): string
    get_hspace(): number
    get_name(): string
    get_object(): string
    get_vspace(): number
    get_width(): string
    set_align(value: string): void
    set_alt(value: string): void
    set_archive(value: string): void
    set_code(value: string): void
    set_code_base(value: string): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_name(value: string): void
    set_object(value: string): void
    set_vspace(value: number): void
    set_width(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::archive", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::archive", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::code", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::code-base", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code-base", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::object", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::object", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vspace", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLAppletElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLAppletElement_ConstructProps)
    _init (config?: DOMHTMLAppletElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLAreaElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    alt?: string
    coords?: string
    href?: string
    no_href?: boolean
    ping?: string
    shape?: string
    target?: string
}
export class DOMHTMLAreaElement {
    /* Properties of WebKit2WebExtension.DOMHTMLAreaElement */
    alt: string
    coords: string
    readonly hash: string
    readonly host: string
    readonly hostname: string
    href: string
    no_href: boolean
    readonly pathname: string
    ping: string
    readonly port: string
    readonly protocol: string
    readonly search: string
    shape: string
    target: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLAreaElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLAreaElement */
    get_alt(): string
    get_coords(): string
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_no_href(): boolean
    get_pathname(): string
    get_ping(): string
    get_port(): string
    get_protocol(): string
    get_search(): string
    get_shape(): string
    get_target(): string
    set_alt(value: string): void
    set_coords(value: string): void
    set_href(value: string): void
    set_no_href(value: boolean): void
    set_ping(value: string): void
    set_shape(value: string): void
    set_target(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::coords", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::coords", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hash", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hash", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::host", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::host", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hostname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hostname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::no-href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-href", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pathname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pathname", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ping", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ping", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::port", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::port", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::protocol", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::protocol", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::search", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shape", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shape", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLAreaElement_ConstructProps)
    _init (config?: DOMHTMLAreaElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLAudioElement_ConstructProps extends DOMHTMLMediaElement_ConstructProps {
}
export class DOMHTMLAudioElement {
    /* Properties of WebKit2WebExtension.DOMHTMLMediaElement */
    autoplay: boolean
    readonly buffered: DOMTimeRanges
    readonly controller: DOMMediaController
    controls: boolean
    readonly current_src: string
    current_time: number
    default_muted: boolean
    default_playback_rate: number
    readonly duration: number
    readonly ended: boolean
    readonly error: DOMMediaError
    loop: boolean
    media_group: string
    muted: boolean
    readonly network_state: number
    readonly paused: boolean
    playback_rate: number
    readonly played: DOMTimeRanges
    preload: string
    readonly ready_state: number
    readonly seekable: DOMTimeRanges
    readonly seeking: boolean
    src: string
    volume: number
    readonly webkit_audio_decoded_byte_count: number
    webkit_closed_captions_visible: boolean
    readonly webkit_current_playback_target_is_wireless: boolean
    readonly webkit_has_closed_captions: boolean
    webkit_preserves_pitch: boolean
    readonly webkit_video_decoded_byte_count: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLAudioElement */
    parent_instance: DOMHTMLMediaElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLMediaElement */
    can_play_type(type: string): string
    fast_seek(time: number): void
    get_autoplay(): boolean
    get_buffered(): DOMTimeRanges
    get_controller(): DOMMediaController
    get_controls(): boolean
    get_current_src(): string
    get_current_time(): number
    get_default_muted(): boolean
    get_default_playback_rate(): number
    get_duration(): number
    get_ended(): boolean
    get_error(): DOMMediaError
    get_initial_time(): number
    get_loop(): boolean
    get_media_group(): string
    get_muted(): boolean
    get_network_state(): number
    get_paused(): boolean
    get_playback_rate(): number
    get_played(): DOMTimeRanges
    get_preload(): string
    get_ready_state(): number
    get_seekable(): DOMTimeRanges
    get_seeking(): boolean
    get_src(): string
    get_start_time(): number
    get_volume(): number
    get_webkit_audio_decoded_byte_count(): number
    get_webkit_closed_captions_visible(): boolean
    get_webkit_current_playback_target_is_wireless(): boolean
    get_webkit_has_closed_captions(): boolean
    get_webkit_preserves_pitch(): boolean
    get_webkit_video_decoded_byte_count(): number
    load(): void
    pause(): void
    play(): void
    set_autoplay(value: boolean): void
    set_controls(value: boolean): void
    set_current_time(value: number): void
    set_default_muted(value: boolean): void
    set_default_playback_rate(value: number): void
    set_loop(value: boolean): void
    set_media_group(value: string): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_preload(value: string): void
    set_src(value: string): void
    set_volume(value: number): void
    set_webkit_closed_captions_visible(value: boolean): void
    set_webkit_preserves_pitch(value: boolean): void
    webkit_show_playback_target_picker(): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autoplay", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autoplay", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::buffered", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::buffered", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::controller", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::controller", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::controls", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::controls", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-src", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-src", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-time", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-time", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-muted", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-muted", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-playback-rate", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-playback-rate", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::duration", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::duration", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ended", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ended", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::error", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::error", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loop", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loop", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media-group", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-group", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::muted", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::muted", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::network-state", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::network-state", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paused", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paused", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::playback-rate", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::playback-rate", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::played", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::played", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preload", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preload", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ready-state", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ready-state", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seekable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seekable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seeking", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seeking", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::volume", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::volume", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-audio-decoded-byte-count", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-audio-decoded-byte-count", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-closed-captions-visible", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-closed-captions-visible", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-current-playback-target-is-wireless", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-current-playback-target-is-wireless", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-has-closed-captions", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-has-closed-captions", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-preserves-pitch", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-preserves-pitch", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-video-decoded-byte-count", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-video-decoded-byte-count", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLAudioElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLAudioElement_ConstructProps)
    _init (config?: DOMHTMLAudioElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLBRElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    clear?: string
}
export class DOMHTMLBRElement {
    /* Properties of WebKit2WebExtension.DOMHTMLBRElement */
    clear: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLBRElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLBRElement */
    get_clear(): string
    set_clear(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::clear", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::clear", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLBRElement_ConstructProps)
    _init (config?: DOMHTMLBRElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLBaseElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    href?: string
    target?: string
}
export class DOMHTMLBaseElement {
    /* Properties of WebKit2WebExtension.DOMHTMLBaseElement */
    href: string
    target: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLBaseElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLBaseElement */
    get_href(): string
    get_target(): string
    set_href(value: string): void
    set_target(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::href", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLBaseElement_ConstructProps)
    _init (config?: DOMHTMLBaseElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLBaseFontElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    color?: string
    face?: string
    size?: number
}
export class DOMHTMLBaseFontElement {
    /* Properties of WebKit2WebExtension.DOMHTMLBaseFontElement */
    color: string
    face: string
    size: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLBaseFontElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLBaseFontElement */
    get_color(): string
    get_face(): string
    get_size(): number
    set_color(value: string): void
    set_face(value: string): void
    set_size(value: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::color", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::color", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::face", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::face", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBaseFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLBaseFontElement_ConstructProps)
    _init (config?: DOMHTMLBaseFontElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLBodyElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    a_link?: string
    background?: string
    bg_color?: string
    link?: string
    text?: string
    v_link?: string
}
export class DOMHTMLBodyElement {
    /* Properties of WebKit2WebExtension.DOMHTMLBodyElement */
    a_link: string
    background: string
    bg_color: string
    link: string
    text: string
    v_link: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLBodyElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLBodyElement */
    get_a_link(): string
    get_background(): string
    get_bg_color(): string
    get_link(): string
    get_text(): string
    get_v_link(): string
    set_a_link(value: string): void
    set_background(value: string): void
    set_bg_color(value: string): void
    set_link(value: string): void
    set_text(value: string): void
    set_v_link(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::a-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::a-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::background", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::background", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::v-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-link", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLBodyElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLBodyElement_ConstructProps)
    _init (config?: DOMHTMLBodyElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLButtonElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    autofocus?: boolean
    disabled?: boolean
    form_action?: string
    form_enctype?: string
    form_method?: string
    form_no_validate?: boolean
    form_target?: string
    name?: string
    type?: string
    value?: string
}
export class DOMHTMLButtonElement {
    /* Properties of WebKit2WebExtension.DOMHTMLButtonElement */
    autofocus: boolean
    disabled: boolean
    readonly form: DOMHTMLFormElement
    form_action: string
    form_enctype: string
    form_method: string
    form_no_validate: boolean
    form_target: string
    readonly labels: DOMNodeList
    name: string
    type: string
    readonly validation_message: string
    readonly validity: DOMValidityState
    value: string
    readonly will_validate: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLButtonElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLButtonElement */
    check_validity(): boolean
    get_autofocus(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_form_action(): string
    get_form_enctype(): string
    get_form_method(): string
    get_form_no_validate(): boolean
    get_form_target(): string
    get_labels(): DOMNodeList
    get_name(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_will_validate(): boolean
    set_autofocus(value: boolean): void
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_form_action(value: string): void
    set_form_enctype(value: string): void
    set_form_method(value: string): void
    set_form_no_validate(value: boolean): void
    set_form_target(value: string): void
    set_name(value: string): void
    set_value(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-action", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-action", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-enctype", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-enctype", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-method", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-method", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-no-validate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-no-validate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-target", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-target", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::labels", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::labels", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validation-message", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validation-message", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validity", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validity", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLButtonElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLButtonElement_ConstructProps)
    _init (config?: DOMHTMLButtonElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLCanvasElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    height?: number
    width?: number
}
export class DOMHTMLCanvasElement {
    /* Properties of WebKit2WebExtension.DOMHTMLCanvasElement */
    height: number
    width: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLCanvasElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLCanvasElement */
    get_height(): number
    get_width(): number
    set_height(value: number): void
    set_width(value: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLCanvasElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLCanvasElement_ConstructProps)
    _init (config?: DOMHTMLCanvasElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLCollection_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMHTMLCollection {
    /* Properties of WebKit2WebExtension.DOMHTMLCollection */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMHTMLCollection */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLCollection */
    get_length(): number
    item(index: number): DOMNode
    named_item(name: string): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLCollection_ConstructProps)
    _init (config?: DOMHTMLCollection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLDListElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    compact?: boolean
}
export class DOMHTMLDListElement {
    /* Properties of WebKit2WebExtension.DOMHTMLDListElement */
    compact: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLDListElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLDListElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLDListElement_ConstructProps)
    _init (config?: DOMHTMLDListElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLDetailsElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    open?: boolean
}
export class DOMHTMLDetailsElement {
    /* Properties of WebKit2WebExtension.DOMHTMLDetailsElement */
    open: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLDetailsElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLDetailsElement */
    get_open(): boolean
    set_open(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::open", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::open", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDetailsElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLDetailsElement_ConstructProps)
    _init (config?: DOMHTMLDetailsElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLDirectoryElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    compact?: boolean
}
export class DOMHTMLDirectoryElement {
    /* Properties of WebKit2WebExtension.DOMHTMLDirectoryElement */
    compact: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLDirectoryElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLDirectoryElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDirectoryElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLDirectoryElement_ConstructProps)
    _init (config?: DOMHTMLDirectoryElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLDivElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
}
export class DOMHTMLDivElement {
    /* Properties of WebKit2WebExtension.DOMHTMLDivElement */
    align: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLDivElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLDivElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDivElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLDivElement_ConstructProps)
    _init (config?: DOMHTMLDivElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLDocument_ConstructProps extends DOMDocument_ConstructProps {
    alink_color?: string
    bg_color?: string
    design_mode?: string
    dir?: string
    fg_color?: string
    link_color?: string
    vlink_color?: string
}
export class DOMHTMLDocument {
    /* Properties of WebKit2WebExtension.DOMHTMLDocument */
    readonly active_element: DOMElement
    alink_color: string
    bg_color: string
    readonly compat_mode: string
    design_mode: string
    dir: string
    readonly embeds: DOMHTMLCollection
    fg_color: string
    readonly height: number
    link_color: string
    readonly plugins: DOMHTMLCollection
    readonly scripts: DOMHTMLCollection
    vlink_color: string
    readonly width: number
    /* Properties of WebKit2WebExtension.DOMDocument */
    readonly anchors: DOMHTMLCollection
    readonly applets: DOMHTMLCollection
    readonly body: DOMHTMLElement
    readonly character_set: string
    charset: string
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly content_type: string
    cookie: string
    readonly current_script: DOMHTMLScriptElement
    readonly default_view: DOMDOMWindow
    readonly doctype: DOMDocumentType
    readonly document_element: DOMElement
    document_uri: string
    readonly domain: string
    readonly first_element_child: DOMElement
    readonly forms: DOMHTMLCollection
    readonly head: DOMHTMLHeadElement
    readonly hidden: boolean
    readonly images: DOMHTMLCollection
    readonly implementation: DOMDOMImplementation
    readonly input_encoding: string
    readonly last_element_child: DOMElement
    readonly last_modified: string
    readonly links: DOMHTMLCollection
    readonly origin: string
    readonly pointer_lock_element: DOMElement
    readonly preferred_stylesheet_set: string
    readonly ready_state: string
    readonly referrer: string
    readonly scrolling_element: DOMElement
    selected_stylesheet_set: string
    readonly style_sheets: DOMStyleSheetList
    title: string
    readonly url: string
    readonly visibility_state: string
    readonly webkit_current_full_screen_element: DOMElement
    readonly webkit_full_screen_keyboard_input_allowed: boolean
    readonly webkit_fullscreen_element: DOMElement
    readonly webkit_fullscreen_enabled: boolean
    readonly webkit_is_full_screen: boolean
    readonly xml_encoding: string
    xml_standalone: boolean
    xml_version: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLDocument */
    parent_instance: DOMDocument
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLDocument */
    capture_events(): void
    clear(): void
    close(): void
    get_active_element(): DOMElement
    get_alink_color(): string
    get_bg_color(): string
    get_compat_mode(): string
    get_design_mode(): string
    get_dir(): string
    get_embeds(): DOMHTMLCollection
    get_fg_color(): string
    get_height(): number
    get_link_color(): string
    get_plugins(): DOMHTMLCollection
    get_scripts(): DOMHTMLCollection
    get_vlink_color(): string
    get_width(): number
    has_focus(): boolean
    open(): void
    release_events(): void
    set_alink_color(value: string): void
    set_bg_color(value: string): void
    set_design_mode(value: string): void
    set_dir(value: string): void
    set_fg_color(value: string): void
    set_link_color(value: string): void
    set_vlink_color(value: string): void
    /* Methods of WebKit2WebExtension.DOMDocument */
    adopt_node(source: DOMNode): DOMNode
    caret_range_from_point(x: number, y: number): DOMRange
    create_attribute(name: string): DOMAttr
    create_attribute_ns(namespaceURI: string | null, qualifiedName: string): DOMAttr
    create_cdata_section(data: string): DOMCDATASection
    create_comment(data: string): DOMComment
    create_css_style_declaration(): DOMCSSStyleDeclaration
    create_document_fragment(): DOMDocumentFragment
    create_element(tagName: string): DOMElement
    create_element_ns(namespaceURI: string | null, qualifiedName: string): DOMElement
    create_entity_reference(name?: string | null): DOMEntityReference
    create_event(eventType: string): DOMEvent
    create_expression(expression: string, resolver: DOMXPathNSResolver): DOMXPathExpression
    create_node_iterator(root: DOMNode, whatToShow: number, filter: DOMNodeFilter | null, expandEntityReferences: boolean): DOMNodeIterator
    create_ns_resolver(nodeResolver: DOMNode): DOMXPathNSResolver
    create_processing_instruction(target: string, data: string): DOMProcessingInstruction
    create_range(): DOMRange
    create_text_node(data: string): DOMText
    create_tree_walker(root: DOMNode, whatToShow: number, filter: DOMNodeFilter | null, expandEntityReferences: boolean): DOMTreeWalker
    element_from_point(x: number, y: number): DOMElement
    evaluate(expression: string, contextNode: DOMNode, resolver: DOMXPathNSResolver | null, type: number, inResult?: DOMXPathResult | null): DOMXPathResult
    exec_command(command: string, userInterface: boolean, value: string): boolean
    exit_pointer_lock(): void
    get_anchors(): DOMHTMLCollection
    get_applets(): DOMHTMLCollection
    get_body(): DOMHTMLElement
    get_character_set(): string
    get_charset(): string
    get_child_element_count(): number
    get_children(): DOMHTMLCollection
    get_content_type(): string
    get_cookie(): string
    get_current_script(): DOMHTMLScriptElement
    get_default_charset(): string
    get_default_view(): DOMDOMWindow
    get_doctype(): DOMDocumentType
    get_document_element(): DOMElement
    get_document_uri(): string
    get_domain(): string
    get_element_by_id(elementId: string): DOMElement
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(classNames: string): DOMHTMLCollection
    get_elements_by_name(elementName: string): DOMNodeList
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(tagname: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_forms(): DOMHTMLCollection
    get_head(): DOMHTMLHeadElement
    get_hidden(): boolean
    get_images(): DOMHTMLCollection
    get_implementation(): DOMDOMImplementation
    get_input_encoding(): string
    get_last_element_child(): DOMElement
    get_last_modified(): string
    get_links(): DOMHTMLCollection
    get_origin(): string
    get_override_style(element: DOMElement, pseudoElement?: string | null): DOMCSSStyleDeclaration
    get_pointer_lock_element(): DOMElement
    get_preferred_stylesheet_set(): string
    get_ready_state(): string
    get_referrer(): string
    get_scrolling_element(): DOMElement
    get_selected_stylesheet_set(): string
    get_style_sheets(): DOMStyleSheetList
    get_title(): string
    get_url(): string
    get_visibility_state(): string
    get_webkit_current_fullscreen_element(): DOMElement
    get_webkit_fullscreen_element(): DOMElement
    get_webkit_fullscreen_enabled(): boolean
    get_webkit_fullscreen_keyboard_input_allowed(): boolean
    get_webkit_is_fullscreen(): boolean
    get_xml_encoding(): string
    get_xml_standalone(): boolean
    get_xml_version(): string
    import_node(importedNode: DOMNode, deep: boolean): DOMNode
    query_command_enabled(command: string): boolean
    query_command_indeterm(command: string): boolean
    query_command_state(command: string): boolean
    query_command_supported(command: string): boolean
    query_command_value(command: string): string
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    set_body(value: DOMHTMLElement): void
    set_charset(value: string): void
    set_cookie(value: string): void
    set_document_uri(value: string): void
    set_selected_stylesheet_set(value: string): void
    set_title(value: string): void
    set_xml_standalone(value: boolean): void
    set_xml_version(value: string): void
    webkit_cancel_fullscreen(): void
    webkit_exit_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::compat-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compat-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::design-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::design-mode", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::embeds", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::embeds", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fg-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::link-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::link-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::plugins", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::plugins", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scripts", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scripts", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vlink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vlink-color", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::anchors", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::anchors", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::applets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::applets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::body", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::body", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::character-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::character-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cookie", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cookie", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-script", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-script", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-view", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-view", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::doctype", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::doctype", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::document-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::document-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::domain", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::domain", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::forms", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::forms", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::head", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::head", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::images", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::images", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::implementation", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::implementation", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::input-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::input-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-modified", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-modified", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::links", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::links", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::origin", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pointer-lock-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-lock-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preferred-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ready-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ready-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::referrer", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::referrer", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scrolling-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrolling-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-stylesheet-set", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style-sheets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style-sheets", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::url", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::url", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::visibility-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::visibility-state", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-current-full-screen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-fullscreen-enabled", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-is-full-screen", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xml-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-encoding", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xml-standalone", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-standalone", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::xml-version", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::xml-version", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLDocument, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLDocument_ConstructProps)
    _init (config?: DOMHTMLDocument_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLElement_ConstructProps extends DOMElement_ConstructProps {
    access_key?: string
    content_editable?: string
    dir?: string
    draggable?: boolean
    hidden?: boolean
    inner_html?: string
    inner_text?: string
    lang?: string
    outer_html?: string
    outer_text?: string
    spellcheck?: boolean
    tab_index?: number
    title?: string
    translate?: boolean
    webkitdropzone?: string
}
export class DOMHTMLElement {
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    readonly children: DOMHTMLCollection
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_html: string
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_html: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLElement */
    parent_instance: DOMElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLElement_ConstructProps)
    _init (config?: DOMHTMLElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLEmbedElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    height?: number
    name?: string
    src?: string
    type?: string
    width?: number
}
export class DOMHTMLEmbedElement {
    /* Properties of WebKit2WebExtension.DOMHTMLEmbedElement */
    align: string
    height: number
    name: string
    src: string
    type: string
    width: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLEmbedElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLEmbedElement */
    get_align(): string
    get_height(): number
    get_name(): string
    get_src(): string
    get_width(): number
    set_align(value: string): void
    set_height(value: number): void
    set_name(value: string): void
    set_src(value: string): void
    set_width(value: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLEmbedElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLEmbedElement_ConstructProps)
    _init (config?: DOMHTMLEmbedElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLFieldSetElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    disabled?: boolean
    name?: string
}
export class DOMHTMLFieldSetElement {
    /* Properties of WebKit2WebExtension.DOMHTMLFieldSetElement */
    disabled: boolean
    readonly elements: DOMHTMLCollection
    readonly form: DOMHTMLFormElement
    name: string
    readonly type: string
    readonly validation_message: string
    readonly validity: DOMValidityState
    readonly will_validate: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLFieldSetElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLFieldSetElement */
    check_validity(): boolean
    get_disabled(): boolean
    get_elements(): DOMHTMLCollection
    get_form(): DOMHTMLFormElement
    get_name(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_will_validate(): boolean
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_name(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::elements", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::elements", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validation-message", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validation-message", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validity", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validity", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFieldSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLFieldSetElement_ConstructProps)
    _init (config?: DOMHTMLFieldSetElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLFontElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    color?: string
    face?: string
    size?: string
}
export class DOMHTMLFontElement {
    /* Properties of WebKit2WebExtension.DOMHTMLFontElement */
    color: string
    face: string
    size: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLFontElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLFontElement */
    get_color(): string
    get_face(): string
    get_size(): string
    set_color(value: string): void
    set_face(value: string): void
    set_size(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::color", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::color", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::face", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::face", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFontElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLFontElement_ConstructProps)
    _init (config?: DOMHTMLFontElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLFormElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    accept_charset?: string
    action?: string
    autocapitalize?: string
    autocomplete?: string
    autocorrect?: boolean
    encoding?: string
    enctype?: string
    method?: string
    name?: string
    no_validate?: boolean
    target?: string
}
export class DOMHTMLFormElement {
    /* Properties of WebKit2WebExtension.DOMHTMLFormElement */
    accept_charset: string
    action: string
    autocapitalize: string
    autocomplete: string
    autocorrect: boolean
    readonly elements: DOMHTMLCollection
    encoding: string
    enctype: string
    readonly length: number
    method: string
    name: string
    no_validate: boolean
    target: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLFormElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLFormElement */
    check_validity(): boolean
    dispatch_form_change(): void
    dispatch_form_input(): void
    get_accept_charset(): string
    get_action(): string
    get_autocapitalize(): string
    get_autocomplete(): string
    get_autocorrect(): boolean
    get_elements(): DOMHTMLCollection
    get_encoding(): string
    get_enctype(): string
    get_length(): number
    get_method(): string
    get_name(): string
    get_no_validate(): boolean
    get_target(): string
    reset(): void
    set_accept_charset(value: string): void
    set_action(value: string): void
    set_autocapitalize(value: string): void
    set_autocomplete(value: string): void
    set_autocorrect(value: boolean): void
    set_encoding(value: string): void
    set_enctype(value: string): void
    set_method(value: string): void
    set_name(value: string): void
    set_no_validate(value: boolean): void
    set_target(value: string): void
    submit(): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accept-charset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accept-charset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::action", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::action", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autocapitalize", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocapitalize", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autocomplete", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocomplete", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autocorrect", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocorrect", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::elements", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::elements", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::encoding", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::encoding", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::enctype", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::enctype", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::method", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::method", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::no-validate", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-validate", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFormElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLFormElement_ConstructProps)
    _init (config?: DOMHTMLFormElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLFrameElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    frame_border?: string
    long_desc?: string
    margin_height?: string
    margin_width?: string
    name?: string
    no_resize?: boolean
    scrolling?: string
    src?: string
}
export class DOMHTMLFrameElement {
    /* Properties of WebKit2WebExtension.DOMHTMLFrameElement */
    readonly content_document: DOMDocument
    readonly content_window: DOMDOMWindow
    frame_border: string
    readonly height: number
    long_desc: string
    margin_height: string
    margin_width: string
    name: string
    no_resize: boolean
    scrolling: string
    src: string
    readonly width: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLFrameElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLFrameElement */
    get_content_document(): DOMDocument
    get_content_window(): DOMDOMWindow
    get_frame_border(): string
    get_height(): number
    get_long_desc(): string
    get_margin_height(): string
    get_margin_width(): string
    get_name(): string
    get_no_resize(): boolean
    get_scrolling(): string
    get_src(): string
    get_width(): number
    set_frame_border(value: string): void
    set_long_desc(value: string): void
    set_margin_height(value: string): void
    set_margin_width(value: string): void
    set_name(value: string): void
    set_no_resize(value: boolean): void
    set_scrolling(value: string): void
    set_src(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::content-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-window", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-window", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::frame-border", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frame-border", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::long-desc", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::long-desc", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::no-resize", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-resize", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scrolling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrolling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLFrameElement_ConstructProps)
    _init (config?: DOMHTMLFrameElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLFrameSetElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    cols?: string
    rows?: string
}
export class DOMHTMLFrameSetElement {
    /* Properties of WebKit2WebExtension.DOMHTMLFrameSetElement */
    cols: string
    rows: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLFrameSetElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLFrameSetElement */
    get_cols(): string
    get_rows(): string
    set_cols(value: string): void
    set_rows(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::cols", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cols", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLFrameSetElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLFrameSetElement_ConstructProps)
    _init (config?: DOMHTMLFrameSetElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLHRElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    no_shade?: boolean
    size?: string
    width?: string
}
export class DOMHTMLHRElement {
    /* Properties of WebKit2WebExtension.DOMHTMLHRElement */
    align: string
    no_shade: boolean
    size: string
    width: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLHRElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLHRElement */
    get_align(): string
    get_no_shade(): boolean
    get_size(): string
    get_width(): string
    set_align(value: string): void
    set_no_shade(value: boolean): void
    set_size(value: string): void
    set_width(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::no-shade", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-shade", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHRElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLHRElement_ConstructProps)
    _init (config?: DOMHTMLHRElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLHeadElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    profile?: string
}
export class DOMHTMLHeadElement {
    /* Properties of WebKit2WebExtension.DOMHTMLHeadElement */
    profile: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLHeadElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLHeadElement */
    get_profile(): string
    set_profile(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::profile", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::profile", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLHeadElement_ConstructProps)
    _init (config?: DOMHTMLHeadElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLHeadingElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
}
export class DOMHTMLHeadingElement {
    /* Properties of WebKit2WebExtension.DOMHTMLHeadingElement */
    align: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLHeadingElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLHeadingElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHeadingElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLHeadingElement_ConstructProps)
    _init (config?: DOMHTMLHeadingElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLHtmlElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    manifest?: string
    version?: string
}
export class DOMHTMLHtmlElement {
    /* Properties of WebKit2WebExtension.DOMHTMLHtmlElement */
    manifest: string
    version: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLHtmlElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLHtmlElement */
    get_manifest(): string
    get_version(): string
    set_manifest(value: string): void
    set_version(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::manifest", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::manifest", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::version", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::version", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLHtmlElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLHtmlElement_ConstructProps)
    _init (config?: DOMHTMLHtmlElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLIFrameElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    frame_border?: string
    height?: string
    long_desc?: string
    margin_height?: string
    margin_width?: string
    name?: string
    sandbox?: string
    scrolling?: string
    seamless?: boolean
    src?: string
    srcdoc?: string
    width?: string
}
export class DOMHTMLIFrameElement {
    /* Properties of WebKit2WebExtension.DOMHTMLIFrameElement */
    align: string
    readonly content_document: DOMDocument
    readonly content_window: DOMDOMWindow
    frame_border: string
    height: string
    long_desc: string
    margin_height: string
    margin_width: string
    name: string
    sandbox: string
    scrolling: string
    seamless: boolean
    src: string
    srcdoc: string
    width: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLIFrameElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLIFrameElement */
    get_align(): string
    get_content_document(): DOMDocument
    get_content_window(): DOMDOMWindow
    get_frame_border(): string
    get_height(): string
    get_long_desc(): string
    get_margin_height(): string
    get_margin_width(): string
    get_name(): string
    get_sandbox(): string
    get_scrolling(): string
    get_seamless(): boolean
    get_src(): string
    get_srcdoc(): string
    get_width(): string
    set_align(value: string): void
    set_frame_border(value: string): void
    set_height(value: string): void
    set_long_desc(value: string): void
    set_margin_height(value: string): void
    set_margin_width(value: string): void
    set_name(value: string): void
    set_sandbox(value: string): void
    set_scrolling(value: string): void
    set_seamless(value: boolean): void
    set_src(value: string): void
    set_srcdoc(value: string): void
    set_width(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-window", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-window", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::frame-border", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frame-border", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::long-desc", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::long-desc", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::margin-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::margin-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sandbox", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sandbox", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scrolling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scrolling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seamless", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seamless", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::srcdoc", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::srcdoc", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLIFrameElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLIFrameElement_ConstructProps)
    _init (config?: DOMHTMLIFrameElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLImageElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    alt?: string
    border?: string
    cross_origin?: string
    height?: number
    hspace?: number
    is_map?: boolean
    long_desc?: string
    lowsrc?: string
    name?: string
    src?: string
    srcset?: string
    use_map?: string
    vspace?: number
    width?: number
}
export class DOMHTMLImageElement {
    /* Properties of WebKit2WebExtension.DOMHTMLImageElement */
    align: string
    alt: string
    border: string
    readonly complete: boolean
    cross_origin: string
    height: number
    hspace: number
    is_map: boolean
    long_desc: string
    lowsrc: string
    name: string
    readonly natural_height: number
    readonly natural_width: number
    src: string
    srcset: string
    use_map: string
    vspace: number
    width: number
    readonly x: number
    readonly y: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLImageElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLImageElement */
    get_align(): string
    get_alt(): string
    get_border(): string
    get_complete(): boolean
    get_cross_origin(): string
    get_height(): number
    get_hspace(): number
    get_is_map(): boolean
    get_long_desc(): string
    get_lowsrc(): string
    get_name(): string
    get_natural_height(): number
    get_natural_width(): number
    get_src(): string
    get_srcset(): string
    get_use_map(): string
    get_vspace(): number
    get_width(): number
    get_x(): number
    get_y(): number
    set_align(value: string): void
    set_alt(value: string): void
    set_border(value: string): void
    set_cross_origin(value: string): void
    set_height(value: number): void
    set_hspace(value: number): void
    set_is_map(value: boolean): void
    set_long_desc(value: string): void
    set_lowsrc(value: string): void
    set_name(value: string): void
    set_src(value: string): void
    set_srcset(value: string): void
    set_use_map(value: string): void
    set_vspace(value: number): void
    set_width(value: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::border", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::border", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::complete", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::complete", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cross-origin", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cross-origin", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::long-desc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::long-desc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lowsrc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lowsrc", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::natural-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::natural-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::natural-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::natural-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::srcset", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::srcset", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-map", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vspace", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::x", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::y", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::y", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLImageElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLImageElement_ConstructProps)
    _init (config?: DOMHTMLImageElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLInputElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    accept?: string
    align?: string
    alt?: string
    autocapitalize?: string
    autocomplete?: string
    autocorrect?: boolean
    autofocus?: boolean
    capture?: string
    checked?: boolean
    default_checked?: boolean
    default_value?: string
    dir_name?: string
    disabled?: boolean
    form_action?: string
    form_enctype?: string
    form_method?: string
    form_no_validate?: boolean
    form_target?: string
    height?: number
    incremental?: boolean
    indeterminate?: boolean
    max?: string
    max_length?: number
    min?: string
    multiple?: boolean
    name?: string
    pattern?: string
    placeholder?: string
    read_only?: boolean
    required?: boolean
    size?: number
    src?: string
    step?: string
    type?: string
    use_map?: string
    value?: string
    value_as_number?: number
    webkit_grammar?: boolean
    webkit_speech?: boolean
    webkitdirectory?: boolean
    width?: number
}
export class DOMHTMLInputElement {
    /* Properties of WebKit2WebExtension.DOMHTMLInputElement */
    accept: string
    align: string
    alt: string
    autocapitalize: string
    autocomplete: string
    autocorrect: boolean
    autofocus: boolean
    capture: string
    checked: boolean
    default_checked: boolean
    default_value: string
    dir_name: string
    disabled: boolean
    readonly files: DOMFileList
    readonly form: DOMHTMLFormElement
    form_action: string
    form_enctype: string
    form_method: string
    form_no_validate: boolean
    form_target: string
    height: number
    incremental: boolean
    indeterminate: boolean
    readonly labels: DOMNodeList
    readonly list: DOMHTMLElement
    max: string
    max_length: number
    min: string
    multiple: boolean
    name: string
    pattern: string
    placeholder: string
    read_only: boolean
    required: boolean
    size: number
    src: string
    step: string
    type: string
    use_map: string
    readonly validation_message: string
    readonly validity: DOMValidityState
    value: string
    value_as_number: number
    webkit_grammar: boolean
    webkit_speech: boolean
    webkitdirectory: boolean
    width: number
    readonly will_validate: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLInputElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLInputElement */
    check_validity(): boolean
    get_accept(): string
    get_align(): string
    get_alt(): string
    get_autocapitalize(): string
    get_autocomplete(): string
    get_autocorrect(): boolean
    get_autofocus(): boolean
    get_capture(): string
    get_checked(): boolean
    get_default_checked(): boolean
    get_default_value(): string
    get_dir_name(): string
    get_disabled(): boolean
    get_files(): DOMFileList
    get_form(): DOMHTMLFormElement
    get_form_action(): string
    get_form_enctype(): string
    get_form_method(): string
    get_form_no_validate(): boolean
    get_form_target(): string
    get_height(): number
    get_incremental(): boolean
    get_indeterminate(): boolean
    get_labels(): DOMNodeList
    get_list(): DOMHTMLElement
    get_max(): string
    get_max_length(): number
    get_min(): string
    get_multiple(): boolean
    get_name(): string
    get_pattern(): string
    get_placeholder(): string
    get_read_only(): boolean
    get_required(): boolean
    get_size(): number
    get_src(): string
    get_step(): string
    get_use_map(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_value_as_number(): number
    get_webkit_grammar(): boolean
    get_webkit_speech(): boolean
    get_webkitdirectory(): boolean
    get_width(): number
    get_will_validate(): boolean
    is_edited(): boolean
    select(): void
    set_accept(value: string): void
    set_align(value: string): void
    set_alt(value: string): void
    set_autocapitalize(value: string): void
    set_autocomplete(value: string): void
    set_autocorrect(value: boolean): void
    set_autofocus(value: boolean): void
    set_capture(value: string): void
    set_checked(value: boolean): void
    set_custom_validity(error: string): void
    set_default_checked(value: boolean): void
    set_default_value(value: string): void
    set_dir_name(value: string): void
    set_disabled(value: boolean): void
    set_files(value: DOMFileList): void
    set_form_action(value: string): void
    set_form_enctype(value: string): void
    set_form_method(value: string): void
    set_form_no_validate(value: boolean): void
    set_form_target(value: string): void
    set_height(value: number): void
    set_incremental(value: boolean): void
    set_indeterminate(value: boolean): void
    set_max(value: string): void
    set_max_length(value: number): void
    set_min(value: string): void
    set_multiple(value: boolean): void
    set_name(value: string): void
    set_pattern(value: string): void
    set_placeholder(value: string): void
    set_range_text(replacement: string, start: number, end: number, selectionMode: string): void
    set_read_only(value: boolean): void
    set_required(value: boolean): void
    set_size(value: number): void
    set_src(value: string): void
    set_step(value: string): void
    set_use_map(value: string): void
    set_value(value: string): void
    set_value_as_number(value: number): void
    set_value_for_user(value: string): void
    set_webkit_grammar(value: boolean): void
    set_webkit_speech(value: boolean): void
    set_webkitdirectory(value: boolean): void
    set_width(value: number): void
    step_down(n: number): void
    step_up(n: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accept", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::accept", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alt", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autocapitalize", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocapitalize", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autocomplete", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocomplete", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autocorrect", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocorrect", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::capture", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::capture", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-checked", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::files", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::files", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-action", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-action", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-enctype", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-enctype", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-method", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-method", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-no-validate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-no-validate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form-target", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form-target", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::incremental", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::incremental", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::indeterminate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::indeterminate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::labels", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::labels", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::list", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::list", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-length", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-length", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::min", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::min", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::multiple", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::multiple", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pattern", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pattern", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::required", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::required", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::step", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::step", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-map", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-map", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validation-message", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validation-message", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validity", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validity", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value-as-number", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value-as-number", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-grammar", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-grammar", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-speech", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-speech", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdirectory", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdirectory", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLInputElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLInputElement_ConstructProps)
    _init (config?: DOMHTMLInputElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLKeygenElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    autofocus?: boolean
    challenge?: string
    disabled?: boolean
    keytype?: string
    name?: string
}
export class DOMHTMLKeygenElement {
    /* Properties of WebKit2WebExtension.DOMHTMLKeygenElement */
    autofocus: boolean
    challenge: string
    disabled: boolean
    readonly form: DOMHTMLFormElement
    keytype: string
    readonly labels: DOMNodeList
    name: string
    readonly type: string
    readonly validation_message: string
    readonly validity: DOMValidityState
    readonly will_validate: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLKeygenElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLKeygenElement */
    check_validity(): boolean
    get_autofocus(): boolean
    get_challenge(): string
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_keytype(): string
    get_labels(): DOMNodeList
    get_name(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_will_validate(): boolean
    set_autofocus(value: boolean): void
    set_challenge(value: string): void
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_keytype(value: string): void
    set_name(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::challenge", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::challenge", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::keytype", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::keytype", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::labels", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::labels", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validation-message", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validation-message", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validity", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validity", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLKeygenElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLKeygenElement_ConstructProps)
    _init (config?: DOMHTMLKeygenElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLLIElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    type?: string
    value?: number
}
export class DOMHTMLLIElement {
    /* Properties of WebKit2WebExtension.DOMHTMLLIElement */
    type: string
    value: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLLIElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLLIElement */
    get_value(): number
    set_value(value: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLIElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLLIElement_ConstructProps)
    _init (config?: DOMHTMLLIElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLLabelElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    html_for?: string
}
export class DOMHTMLLabelElement {
    /* Properties of WebKit2WebExtension.DOMHTMLLabelElement */
    readonly control: DOMHTMLElement
    readonly form: DOMHTMLFormElement
    html_for: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLLabelElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLLabelElement */
    get_control(): DOMHTMLElement
    get_form(): DOMHTMLFormElement
    get_html_for(): string
    set_html_for(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::control", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::control", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::html-for", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::html-for", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLabelElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLLabelElement_ConstructProps)
    _init (config?: DOMHTMLLabelElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLLegendElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
}
export class DOMHTMLLegendElement {
    /* Properties of WebKit2WebExtension.DOMHTMLLegendElement */
    align: string
    readonly form: DOMHTMLFormElement
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLLegendElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLLegendElement */
    get_align(): string
    get_form(): DOMHTMLFormElement
    set_align(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLegendElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLLegendElement_ConstructProps)
    _init (config?: DOMHTMLLegendElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLLinkElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    charset?: string
    disabled?: boolean
    href?: string
    hreflang?: string
    media?: string
    rel?: string
    rev?: string
    target?: string
    type?: string
}
export class DOMHTMLLinkElement {
    /* Properties of WebKit2WebExtension.DOMHTMLLinkElement */
    charset: string
    disabled: boolean
    href: string
    hreflang: string
    media: string
    rel: string
    rev: string
    readonly sheet: DOMStyleSheet
    target: string
    type: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLLinkElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLLinkElement */
    get_charset(): string
    get_disabled(): boolean
    get_href(): string
    get_hreflang(): string
    get_media(): string
    get_rel(): string
    get_rev(): string
    get_sheet(): DOMStyleSheet
    get_target(): string
    set_charset(value: string): void
    set_disabled(value: boolean): void
    set_href(value: string): void
    set_hreflang(value: string): void
    set_media(value: string): void
    set_rel(value: string): void
    set_rev(value: string): void
    set_target(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::href", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hreflang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hreflang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rel", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rel", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rev", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rev", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sheet", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sheet", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLLinkElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLLinkElement_ConstructProps)
    _init (config?: DOMHTMLLinkElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLMapElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    name?: string
}
export class DOMHTMLMapElement {
    /* Properties of WebKit2WebExtension.DOMHTMLMapElement */
    readonly areas: DOMHTMLCollection
    name: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLMapElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLMapElement */
    get_areas(): DOMHTMLCollection
    get_name(): string
    set_name(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::areas", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::areas", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMapElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLMapElement_ConstructProps)
    _init (config?: DOMHTMLMapElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLMarqueeElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    behavior?: string
    bg_color?: string
    direction?: string
    height?: string
    hspace?: number
    loop?: number
    scroll_amount?: number
    scroll_delay?: number
    true_speed?: boolean
    vspace?: number
    width?: string
}
export class DOMHTMLMarqueeElement {
    /* Properties of WebKit2WebExtension.DOMHTMLMarqueeElement */
    behavior: string
    bg_color: string
    direction: string
    height: string
    hspace: number
    loop: number
    scroll_amount: number
    scroll_delay: number
    true_speed: boolean
    vspace: number
    width: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLMarqueeElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLMarqueeElement */
    get_behavior(): string
    get_bg_color(): string
    get_direction(): string
    get_height(): string
    get_hspace(): number
    get_loop(): number
    get_scroll_amount(): number
    get_scroll_delay(): number
    get_true_speed(): boolean
    get_vspace(): number
    get_width(): string
    set_behavior(value: string): void
    set_bg_color(value: string): void
    set_direction(value: string): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_loop(value: number): void
    set_scroll_amount(value: number): void
    set_scroll_delay(value: number): void
    set_true_speed(value: boolean): void
    set_vspace(value: number): void
    set_width(value: string): void
    start(): void
    stop(): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::behavior", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::behavior", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::direction", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::direction", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hspace", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hspace", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loop", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loop", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-amount", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-amount", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-delay", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-delay", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::true-speed", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::true-speed", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vspace", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vspace", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMarqueeElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLMarqueeElement_ConstructProps)
    _init (config?: DOMHTMLMarqueeElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLMediaElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    autoplay?: boolean
    controls?: boolean
    current_time?: number
    default_muted?: boolean
    default_playback_rate?: number
    loop?: boolean
    media_group?: string
    muted?: boolean
    playback_rate?: number
    preload?: string
    src?: string
    volume?: number
    webkit_closed_captions_visible?: boolean
    webkit_preserves_pitch?: boolean
}
export class DOMHTMLMediaElement {
    /* Properties of WebKit2WebExtension.DOMHTMLMediaElement */
    autoplay: boolean
    readonly buffered: DOMTimeRanges
    readonly controller: DOMMediaController
    controls: boolean
    readonly current_src: string
    current_time: number
    default_muted: boolean
    default_playback_rate: number
    readonly duration: number
    readonly ended: boolean
    readonly error: DOMMediaError
    loop: boolean
    media_group: string
    muted: boolean
    readonly network_state: number
    readonly paused: boolean
    playback_rate: number
    readonly played: DOMTimeRanges
    preload: string
    readonly ready_state: number
    readonly seekable: DOMTimeRanges
    readonly seeking: boolean
    src: string
    volume: number
    readonly webkit_audio_decoded_byte_count: number
    webkit_closed_captions_visible: boolean
    readonly webkit_current_playback_target_is_wireless: boolean
    readonly webkit_has_closed_captions: boolean
    webkit_preserves_pitch: boolean
    readonly webkit_video_decoded_byte_count: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLMediaElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLMediaElement */
    can_play_type(type: string): string
    fast_seek(time: number): void
    get_autoplay(): boolean
    get_buffered(): DOMTimeRanges
    get_controller(): DOMMediaController
    get_controls(): boolean
    get_current_src(): string
    get_current_time(): number
    get_default_muted(): boolean
    get_default_playback_rate(): number
    get_duration(): number
    get_ended(): boolean
    get_error(): DOMMediaError
    get_initial_time(): number
    get_loop(): boolean
    get_media_group(): string
    get_muted(): boolean
    get_network_state(): number
    get_paused(): boolean
    get_playback_rate(): number
    get_played(): DOMTimeRanges
    get_preload(): string
    get_ready_state(): number
    get_seekable(): DOMTimeRanges
    get_seeking(): boolean
    get_src(): string
    get_start_time(): number
    get_volume(): number
    get_webkit_audio_decoded_byte_count(): number
    get_webkit_closed_captions_visible(): boolean
    get_webkit_current_playback_target_is_wireless(): boolean
    get_webkit_has_closed_captions(): boolean
    get_webkit_preserves_pitch(): boolean
    get_webkit_video_decoded_byte_count(): number
    load(): void
    pause(): void
    play(): void
    set_autoplay(value: boolean): void
    set_controls(value: boolean): void
    set_current_time(value: number): void
    set_default_muted(value: boolean): void
    set_default_playback_rate(value: number): void
    set_loop(value: boolean): void
    set_media_group(value: string): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_preload(value: string): void
    set_src(value: string): void
    set_volume(value: number): void
    set_webkit_closed_captions_visible(value: boolean): void
    set_webkit_preserves_pitch(value: boolean): void
    webkit_show_playback_target_picker(): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autoplay", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autoplay", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::buffered", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::buffered", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::controller", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::controller", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::controls", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::controls", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-src", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-src", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-time", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-time", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-muted", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-muted", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-playback-rate", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-playback-rate", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::duration", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::duration", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ended", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ended", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::error", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::error", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loop", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loop", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media-group", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-group", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::muted", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::muted", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::network-state", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::network-state", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paused", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paused", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::playback-rate", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::playback-rate", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::played", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::played", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preload", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preload", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ready-state", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ready-state", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seekable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seekable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seeking", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seeking", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::volume", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::volume", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-audio-decoded-byte-count", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-audio-decoded-byte-count", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-closed-captions-visible", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-closed-captions-visible", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-current-playback-target-is-wireless", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-current-playback-target-is-wireless", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-has-closed-captions", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-has-closed-captions", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-preserves-pitch", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-preserves-pitch", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-video-decoded-byte-count", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-video-decoded-byte-count", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMediaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLMediaElement_ConstructProps)
    _init (config?: DOMHTMLMediaElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLMenuElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    compact?: boolean
}
export class DOMHTMLMenuElement {
    /* Properties of WebKit2WebExtension.DOMHTMLMenuElement */
    compact: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLMenuElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLMenuElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMenuElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLMenuElement_ConstructProps)
    _init (config?: DOMHTMLMenuElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLMetaElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    content?: string
    http_equiv?: string
    name?: string
    scheme?: string
}
export class DOMHTMLMetaElement {
    /* Properties of WebKit2WebExtension.DOMHTMLMetaElement */
    content: string
    http_equiv: string
    name: string
    scheme: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLMetaElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLMetaElement */
    get_content(): string
    get_http_equiv(): string
    get_name(): string
    get_scheme(): string
    set_content(value: string): void
    set_http_equiv(value: string): void
    set_name(value: string): void
    set_scheme(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::http-equiv", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::http-equiv", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scheme", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scheme", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLMetaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLMetaElement_ConstructProps)
    _init (config?: DOMHTMLMetaElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLModElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    cite?: string
    date_time?: string
}
export class DOMHTMLModElement {
    /* Properties of WebKit2WebExtension.DOMHTMLModElement */
    cite: string
    date_time: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLModElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLModElement */
    get_cite(): string
    get_date_time(): string
    set_cite(value: string): void
    set_date_time(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::cite", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cite", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::date-time", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::date-time", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLModElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLModElement_ConstructProps)
    _init (config?: DOMHTMLModElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLOListElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    compact?: boolean
    reversed?: boolean
    start?: number
    type?: string
}
export class DOMHTMLOListElement {
    /* Properties of WebKit2WebExtension.DOMHTMLOListElement */
    compact: boolean
    reversed: boolean
    start: number
    type: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLOListElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLOListElement */
    get_compact(): boolean
    get_reversed(): boolean
    get_start(): number
    set_compact(value: boolean): void
    set_reversed(value: boolean): void
    set_start(value: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reversed", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reversed", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLOListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLOListElement_ConstructProps)
    _init (config?: DOMHTMLOListElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLObjectElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    archive?: string
    border?: string
    code?: string
    code_base?: string
    code_type?: string
    data?: string
    declare?: boolean
    height?: string
    hspace?: number
    name?: string
    standby?: string
    type?: string
    use_map?: string
    vspace?: number
    width?: string
}
export class DOMHTMLObjectElement {
    /* Properties of WebKit2WebExtension.DOMHTMLObjectElement */
    align: string
    archive: string
    border: string
    code: string
    code_base: string
    code_type: string
    readonly content_document: DOMDocument
    data: string
    declare: boolean
    readonly form: DOMHTMLFormElement
    height: string
    hspace: number
    name: string
    standby: string
    type: string
    use_map: string
    readonly validation_message: string
    readonly validity: DOMValidityState
    vspace: number
    width: string
    readonly will_validate: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLObjectElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLObjectElement */
    check_validity(): boolean
    get_align(): string
    get_archive(): string
    get_border(): string
    get_code(): string
    get_code_base(): string
    get_code_type(): string
    get_content_document(): DOMDocument
    get_data(): string
    get_declare(): boolean
    get_form(): DOMHTMLFormElement
    get_height(): string
    get_hspace(): number
    get_name(): string
    get_standby(): string
    get_use_map(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_vspace(): number
    get_width(): string
    get_will_validate(): boolean
    set_align(value: string): void
    set_archive(value: string): void
    set_border(value: string): void
    set_code(value: string): void
    set_code_base(value: string): void
    set_code_type(value: string): void
    set_custom_validity(error: string): void
    set_data(value: string): void
    set_declare(value: boolean): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_name(value: string): void
    set_standby(value: string): void
    set_use_map(value: string): void
    set_vspace(value: number): void
    set_width(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::archive", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::archive", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::border", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::border", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::code", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::code-base", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code-base", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::code-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::declare", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::declare", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::standby", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::standby", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::use-map", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::use-map", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validation-message", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validation-message", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validity", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validity", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vspace", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLObjectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLObjectElement_ConstructProps)
    _init (config?: DOMHTMLObjectElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLOptGroupElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    disabled?: boolean
    label?: string
}
export class DOMHTMLOptGroupElement {
    /* Properties of WebKit2WebExtension.DOMHTMLOptGroupElement */
    disabled: boolean
    label: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLOptGroupElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLOptGroupElement */
    get_disabled(): boolean
    get_label(): string
    set_disabled(value: boolean): void
    set_label(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptGroupElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLOptGroupElement_ConstructProps)
    _init (config?: DOMHTMLOptGroupElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLOptionElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    default_selected?: boolean
    disabled?: boolean
    label?: string
    selected?: boolean
    value?: string
}
export class DOMHTMLOptionElement {
    /* Properties of WebKit2WebExtension.DOMHTMLOptionElement */
    default_selected: boolean
    disabled: boolean
    readonly form: DOMHTMLFormElement
    readonly index: number
    label: string
    selected: boolean
    readonly text: string
    value: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLOptionElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLOptionElement */
    get_default_selected(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_index(): number
    get_label(): string
    get_selected(): boolean
    get_text(): string
    get_value(): string
    set_default_selected(value: boolean): void
    set_disabled(value: boolean): void
    set_label(value: string): void
    set_selected(value: boolean): void
    set_value(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::default-selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLOptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLOptionElement_ConstructProps)
    _init (config?: DOMHTMLOptionElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLOptionsCollection_ConstructProps extends DOMHTMLCollection_ConstructProps {
    selected_index?: number
}
export class DOMHTMLOptionsCollection {
    /* Properties of WebKit2WebExtension.DOMHTMLOptionsCollection */
    readonly length: number
    selected_index: number
    /* Fields of WebKit2WebExtension.DOMHTMLOptionsCollection */
    parent_instance: DOMHTMLCollection
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLOptionsCollection */
    get_length(): number
    get_selected_index(): number
    named_item(name: string): DOMNode
    set_selected_index(value: number): void
    /* Methods of WebKit2WebExtension.DOMHTMLCollection */
    item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-index", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-index", callback: (($obj: DOMHTMLOptionsCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLOptionsCollection_ConstructProps)
    _init (config?: DOMHTMLOptionsCollection_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLParagraphElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
}
export class DOMHTMLParagraphElement {
    /* Properties of WebKit2WebExtension.DOMHTMLParagraphElement */
    align: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLParagraphElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLParagraphElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLParagraphElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLParagraphElement_ConstructProps)
    _init (config?: DOMHTMLParagraphElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLParamElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    name?: string
    type?: string
    value?: string
    value_type?: string
}
export class DOMHTMLParamElement {
    /* Properties of WebKit2WebExtension.DOMHTMLParamElement */
    name: string
    type: string
    value: string
    value_type: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLParamElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLParamElement */
    get_name(): string
    get_value(): string
    get_value_type(): string
    set_name(value: string): void
    set_value(value: string): void
    set_value_type(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLParamElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLParamElement_ConstructProps)
    _init (config?: DOMHTMLParamElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLPreElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    width?: number
    wrap?: boolean
}
export class DOMHTMLPreElement {
    /* Properties of WebKit2WebExtension.DOMHTMLPreElement */
    width: number
    wrap: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLPreElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLPreElement */
    get_width(): number
    get_wrap(): boolean
    set_width(value: number): void
    set_wrap(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLPreElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLPreElement_ConstructProps)
    _init (config?: DOMHTMLPreElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLPropertiesCollection_ConstructProps extends DOMHTMLCollection_ConstructProps {
}
export class DOMHTMLPropertiesCollection {
    /* Properties of WebKit2WebExtension.DOMHTMLPropertiesCollection */
    readonly length: number
    readonly names: DOMDOMStringList
    /* Fields of WebKit2WebExtension.DOMHTMLCollection */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLCollection */
    get_length(): number
    item(index: number): DOMNode
    named_item(name: string): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLPropertiesCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLPropertiesCollection, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMHTMLPropertiesCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLPropertiesCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::names", callback: (($obj: DOMHTMLPropertiesCollection, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::names", callback: (($obj: DOMHTMLPropertiesCollection, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLPropertiesCollection_ConstructProps)
    _init (config?: DOMHTMLPropertiesCollection_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_length(self: object): number
    static get_names(self: object): DOMDOMStringList
    static item(self: object, index: number): DOMNode
    static named_item(self: object, name: string): object
    static $gtype: GObject.Type
}
export interface DOMHTMLQuoteElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    cite?: string
}
export class DOMHTMLQuoteElement {
    /* Properties of WebKit2WebExtension.DOMHTMLQuoteElement */
    cite: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLQuoteElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLQuoteElement */
    get_cite(): string
    set_cite(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::cite", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cite", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLQuoteElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLQuoteElement_ConstructProps)
    _init (config?: DOMHTMLQuoteElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLScriptElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    async?: boolean
    charset?: string
    cross_origin?: string
    defer?: boolean
    event?: string
    html_for?: string
    nonce?: string
    src?: string
    text?: string
    type?: string
}
export class DOMHTMLScriptElement {
    /* Properties of WebKit2WebExtension.DOMHTMLScriptElement */
    async: boolean
    charset: string
    cross_origin: string
    defer: boolean
    event: string
    html_for: string
    nonce: string
    src: string
    text: string
    type: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLScriptElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLScriptElement */
    get_async(): boolean
    get_charset(): string
    get_cross_origin(): string
    get_defer(): boolean
    get_event(): string
    get_html_for(): string
    get_nonce(): string
    get_src(): string
    get_text(): string
    set_async(value: boolean): void
    set_charset(value: string): void
    set_cross_origin(value: string): void
    set_defer(value: boolean): void
    set_event(value: string): void
    set_html_for(value: string): void
    set_nonce(value: string): void
    set_src(value: string): void
    set_text(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::async", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::async", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::charset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::charset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cross-origin", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cross-origin", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::defer", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::defer", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::html-for", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::html-for", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::nonce", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::nonce", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLScriptElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLScriptElement_ConstructProps)
    _init (config?: DOMHTMLScriptElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLSelectElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    autofocus?: boolean
    disabled?: boolean
    length?: number
    multiple?: boolean
    name?: string
    required?: boolean
    selected_index?: number
    size?: number
    value?: string
}
export class DOMHTMLSelectElement {
    /* Properties of WebKit2WebExtension.DOMHTMLSelectElement */
    autofocus: boolean
    disabled: boolean
    readonly form: DOMHTMLFormElement
    readonly labels: DOMNodeList
    length: number
    multiple: boolean
    name: string
    readonly options: DOMHTMLOptionsCollection
    required: boolean
    selected_index: number
    readonly selected_options: DOMHTMLCollection
    size: number
    readonly type: string
    readonly validation_message: string
    readonly validity: DOMValidityState
    value: string
    readonly will_validate: boolean
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLSelectElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLSelectElement */
    add(element: DOMHTMLElement, before: DOMHTMLElement): void
    check_validity(): boolean
    get_autofocus(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_labels(): DOMNodeList
    get_length(): number
    get_multiple(): boolean
    get_name(): string
    get_options(): DOMHTMLOptionsCollection
    get_required(): boolean
    get_selected_index(): number
    get_selected_options(): DOMHTMLCollection
    get_size(): number
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_will_validate(): boolean
    item(index: number): DOMNode
    named_item(name: string): DOMNode
    remove(index: number): void
    set_autofocus(value: boolean): void
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_length(value: number): void
    set_multiple(value: boolean): void
    set_name(value: string): void
    set_required(value: boolean): void
    set_selected_index(value: number): void
    set_size(value: number): void
    set_value(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::labels", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::labels", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::multiple", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::multiple", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::options", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::options", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::required", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::required", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected-options", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected-options", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validation-message", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validation-message", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validity", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validity", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLSelectElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLSelectElement_ConstructProps)
    _init (config?: DOMHTMLSelectElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLStyleElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    disabled?: boolean
    media?: string
    type?: string
}
export class DOMHTMLStyleElement {
    /* Properties of WebKit2WebExtension.DOMHTMLStyleElement */
    disabled: boolean
    media: string
    readonly sheet: DOMStyleSheet
    type: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLStyleElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLStyleElement */
    get_disabled(): boolean
    get_media(): string
    get_scoped(): boolean
    get_sheet(): DOMStyleSheet
    set_disabled(value: boolean): void
    set_media(value: string): void
    set_scoped(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::sheet", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sheet", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLStyleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLStyleElement_ConstructProps)
    _init (config?: DOMHTMLStyleElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTableCaptionElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
}
export class DOMHTMLTableCaptionElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTableCaptionElement */
    align: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTableCaptionElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTableCaptionElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCaptionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTableCaptionElement_ConstructProps)
    _init (config?: DOMHTMLTableCaptionElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTableCellElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    abbr?: string
    align?: string
    axis?: string
    bg_color?: string
    ch?: string
    ch_off?: string
    col_span?: number
    headers?: string
    height?: string
    no_wrap?: boolean
    row_span?: number
    scope?: string
    v_align?: string
    width?: string
}
export class DOMHTMLTableCellElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTableCellElement */
    abbr: string
    align: string
    axis: string
    bg_color: string
    readonly cell_index: number
    ch: string
    ch_off: string
    col_span: number
    headers: string
    height: string
    no_wrap: boolean
    row_span: number
    scope: string
    v_align: string
    width: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTableCellElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTableCellElement */
    get_abbr(): string
    get_align(): string
    get_axis(): string
    get_bg_color(): string
    get_cell_index(): number
    get_ch(): string
    get_ch_off(): string
    get_col_span(): number
    get_headers(): string
    get_height(): string
    get_no_wrap(): boolean
    get_row_span(): number
    get_scope(): string
    get_v_align(): string
    get_width(): string
    set_abbr(value: string): void
    set_align(value: string): void
    set_axis(value: string): void
    set_bg_color(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_col_span(value: number): void
    set_headers(value: string): void
    set_height(value: string): void
    set_no_wrap(value: boolean): void
    set_row_span(value: number): void
    set_scope(value: string): void
    set_v_align(value: string): void
    set_width(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::abbr", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::abbr", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::axis", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::axis", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::col-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::col-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::headers", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::headers", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::no-wrap", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::no-wrap", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-span", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scope", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scope", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableCellElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTableCellElement_ConstructProps)
    _init (config?: DOMHTMLTableCellElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTableColElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    ch?: string
    ch_off?: string
    span?: number
    v_align?: string
    width?: string
}
export class DOMHTMLTableColElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTableColElement */
    align: string
    ch: string
    ch_off: string
    span: number
    v_align: string
    width: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTableColElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTableColElement */
    get_align(): string
    get_ch(): string
    get_ch_off(): string
    get_span(): number
    get_v_align(): string
    get_width(): string
    set_align(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_span(value: number): void
    set_v_align(value: string): void
    set_width(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::span", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::span", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableColElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTableColElement_ConstructProps)
    _init (config?: DOMHTMLTableColElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTableElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    bg_color?: string
    border?: string
    cell_padding?: string
    cell_spacing?: string
    frame?: string
    rules?: string
    summary?: string
    width?: string
}
export class DOMHTMLTableElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTableElement */
    align: string
    bg_color: string
    border: string
    readonly caption: DOMHTMLTableCaptionElement
    cell_padding: string
    cell_spacing: string
    frame: string
    readonly rows: DOMHTMLCollection
    rules: string
    summary: string
    readonly t_bodies: DOMHTMLCollection
    readonly t_foot: DOMHTMLTableSectionElement
    readonly t_head: DOMHTMLTableSectionElement
    width: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTableElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTableElement */
    create_caption(): DOMHTMLElement
    create_t_body(): DOMHTMLElement
    create_t_foot(): DOMHTMLElement
    create_t_head(): DOMHTMLElement
    delete_caption(): void
    delete_row(index: number): void
    delete_t_foot(): void
    delete_t_head(): void
    get_align(): string
    get_bg_color(): string
    get_border(): string
    get_caption(): DOMHTMLTableCaptionElement
    get_cell_padding(): string
    get_cell_spacing(): string
    get_frame(): string
    get_rows(): DOMHTMLCollection
    get_rules(): string
    get_summary(): string
    get_t_bodies(): DOMHTMLCollection
    get_t_foot(): DOMHTMLTableSectionElement
    get_t_head(): DOMHTMLTableSectionElement
    get_width(): string
    insert_row(index: number): DOMHTMLElement
    set_align(value: string): void
    set_bg_color(value: string): void
    set_border(value: string): void
    set_caption(value: DOMHTMLTableCaptionElement): void
    set_cell_padding(value: string): void
    set_cell_spacing(value: string): void
    set_frame(value: string): void
    set_rules(value: string): void
    set_summary(value: string): void
    set_t_foot(value: DOMHTMLTableSectionElement): void
    set_t_head(value: DOMHTMLTableSectionElement): void
    set_width(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::border", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::border", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::caption", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::caption", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-padding", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-padding", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cell-spacing", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cell-spacing", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::frame", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::frame", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rules", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rules", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::summary", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::summary", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::t-bodies", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::t-bodies", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::t-foot", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::t-foot", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::t-head", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::t-head", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTableElement_ConstructProps)
    _init (config?: DOMHTMLTableElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTableRowElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    bg_color?: string
    ch?: string
    ch_off?: string
    v_align?: string
}
export class DOMHTMLTableRowElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTableRowElement */
    align: string
    bg_color: string
    readonly cells: DOMHTMLCollection
    ch: string
    ch_off: string
    readonly row_index: number
    readonly section_row_index: number
    v_align: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTableRowElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTableRowElement */
    delete_cell(index: number): void
    get_align(): string
    get_bg_color(): string
    get_cells(): DOMHTMLCollection
    get_ch(): string
    get_ch_off(): string
    get_row_index(): number
    get_section_row_index(): number
    get_v_align(): string
    insert_cell(index: number): DOMHTMLElement
    set_align(value: string): void
    set_bg_color(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_v_align(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bg-color", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cells", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cells", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::section-row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::section-row-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableRowElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTableRowElement_ConstructProps)
    _init (config?: DOMHTMLTableRowElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTableSectionElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    align?: string
    ch?: string
    ch_off?: string
    v_align?: string
}
export class DOMHTMLTableSectionElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTableSectionElement */
    align: string
    ch: string
    ch_off: string
    readonly rows: DOMHTMLCollection
    v_align: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTableSectionElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTableSectionElement */
    delete_row(index: number): void
    get_align(): string
    get_ch(): string
    get_ch_off(): string
    get_rows(): DOMHTMLCollection
    get_v_align(): string
    insert_row(index: number): DOMHTMLElement
    set_align(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_v_align(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ch-off", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::v-align", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTableSectionElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTableSectionElement_ConstructProps)
    _init (config?: DOMHTMLTableSectionElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTextAreaElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    autocapitalize?: string
    autocorrect?: boolean
    autofocus?: boolean
    cols?: number
    default_value?: string
    dir_name?: string
    disabled?: boolean
    max_length?: number
    name?: string
    placeholder?: string
    read_only?: boolean
    required?: boolean
    rows?: number
    selection_direction?: string
    selection_end?: number
    selection_start?: number
    value?: string
    wrap?: string
}
export class DOMHTMLTextAreaElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTextAreaElement */
    autocapitalize: string
    autocorrect: boolean
    autofocus: boolean
    cols: number
    default_value: string
    dir_name: string
    disabled: boolean
    readonly form: DOMHTMLFormElement
    readonly labels: DOMNodeList
    max_length: number
    name: string
    placeholder: string
    read_only: boolean
    required: boolean
    rows: number
    selection_direction: string
    selection_end: number
    selection_start: number
    readonly text_length: number
    readonly type: string
    readonly validation_message: string
    readonly validity: DOMValidityState
    value: string
    readonly will_validate: boolean
    wrap: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTextAreaElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTextAreaElement */
    check_validity(): boolean
    get_autocapitalize(): string
    get_autocorrect(): boolean
    get_autofocus(): boolean
    get_cols(): number
    get_default_value(): string
    get_dir_name(): string
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_labels(): DOMNodeList
    get_max_length(): number
    get_name(): string
    get_placeholder(): string
    get_read_only(): boolean
    get_required(): boolean
    get_rows(): number
    get_selection_direction(): string
    get_selection_end(): number
    get_selection_start(): number
    get_text_length(): number
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_will_validate(): boolean
    get_wrap(): string
    is_edited(): boolean
    select(): void
    set_autocapitalize(value: string): void
    set_autocorrect(value: boolean): void
    set_autofocus(value: boolean): void
    set_cols(value: number): void
    set_custom_validity(error: string): void
    set_default_value(value: string): void
    set_dir_name(value: string): void
    set_disabled(value: boolean): void
    set_max_length(value: number): void
    set_name(value: string): void
    set_placeholder(value: string): void
    set_range_text(replacement: string, start: number, end: number, selectionMode: string): void
    set_read_only(value: boolean): void
    set_required(value: boolean): void
    set_rows(value: number): void
    set_selection_direction(value: string): void
    set_selection_end(value: number): void
    set_selection_range(start: number, end: number, direction: string): void
    set_selection_start(value: number): void
    set_value(value: string): void
    set_wrap(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::autocapitalize", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocapitalize", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autocorrect", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autocorrect", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autofocus", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autofocus", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cols", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cols", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::disabled", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::form", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::form", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::labels", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::labels", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::max-length", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::max-length", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::placeholder", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::placeholder", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::read-only", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::read-only", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::required", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::required", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::rows", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::rows", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-direction", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-direction", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-end", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-end", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selection-start", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selection-start", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-length", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-length", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validation-message", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validation-message", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::validity", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::validity", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::will-validate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::will-validate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wrap", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wrap", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTextAreaElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTextAreaElement_ConstructProps)
    _init (config?: DOMHTMLTextAreaElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLTitleElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    text?: string
}
export class DOMHTMLTitleElement {
    /* Properties of WebKit2WebExtension.DOMHTMLTitleElement */
    text: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLTitleElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLTitleElement */
    get_text(): string
    set_text(value: string): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLTitleElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLTitleElement_ConstructProps)
    _init (config?: DOMHTMLTitleElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLUListElement_ConstructProps extends DOMHTMLElement_ConstructProps {
    compact?: boolean
    type?: string
}
export class DOMHTMLUListElement {
    /* Properties of WebKit2WebExtension.DOMHTMLUListElement */
    compact: boolean
    type: string
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLUListElement */
    parent_instance: DOMHTMLElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLUListElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::compact", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::compact", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLUListElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLUListElement_ConstructProps)
    _init (config?: DOMHTMLUListElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHTMLVideoElement_ConstructProps extends DOMHTMLMediaElement_ConstructProps {
    height?: number
    poster?: string
    webkit_wireless_video_playback_disabled?: boolean
    width?: number
}
export class DOMHTMLVideoElement {
    /* Properties of WebKit2WebExtension.DOMHTMLVideoElement */
    height: number
    poster: string
    readonly video_height: number
    readonly video_width: number
    readonly webkit_decoded_frame_count: number
    readonly webkit_displaying_fullscreen: boolean
    readonly webkit_dropped_frame_count: number
    readonly webkit_supports_fullscreen: boolean
    webkit_wireless_video_playback_disabled: boolean
    width: number
    /* Properties of WebKit2WebExtension.DOMHTMLMediaElement */
    autoplay: boolean
    readonly buffered: DOMTimeRanges
    readonly controller: DOMMediaController
    controls: boolean
    readonly current_src: string
    current_time: number
    default_muted: boolean
    default_playback_rate: number
    readonly duration: number
    readonly ended: boolean
    readonly error: DOMMediaError
    loop: boolean
    media_group: string
    muted: boolean
    readonly network_state: number
    readonly paused: boolean
    playback_rate: number
    readonly played: DOMTimeRanges
    preload: string
    readonly ready_state: number
    readonly seekable: DOMTimeRanges
    readonly seeking: boolean
    src: string
    volume: number
    readonly webkit_audio_decoded_byte_count: number
    webkit_closed_captions_visible: boolean
    readonly webkit_current_playback_target_is_wireless: boolean
    readonly webkit_has_closed_captions: boolean
    webkit_preserves_pitch: boolean
    readonly webkit_video_decoded_byte_count: number
    /* Properties of WebKit2WebExtension.DOMHTMLElement */
    access_key: string
    content_editable: string
    dir: string
    draggable: boolean
    hidden: boolean
    inner_text: string
    readonly is_content_editable: boolean
    lang: string
    outer_text: string
    spellcheck: boolean
    tab_index: number
    title: string
    translate: boolean
    webkitdropzone: string
    /* Properties of WebKit2WebExtension.DOMElement */
    readonly attributes: DOMNamedNodeMap
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly class_list: DOMDOMTokenList
    class_name: string
    readonly client_height: number
    readonly client_left: number
    readonly client_top: number
    readonly client_width: number
    readonly first_element_child: DOMElement
    id: string
    inner_html: string
    readonly last_element_child: DOMElement
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_element_sibling: DOMElement
    readonly offset_height: number
    readonly offset_left: number
    readonly offset_parent: DOMElement
    readonly offset_top: number
    readonly offset_width: number
    outer_html: string
    readonly prefix: string
    readonly previous_element_sibling: DOMElement
    readonly scroll_height: number
    scroll_left: number
    scroll_top: number
    readonly scroll_width: number
    readonly style: DOMCSSStyleDeclaration
    readonly tag_name: string
    readonly webkit_region_overset: string
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMHTMLVideoElement */
    parent_instance: DOMHTMLMediaElement
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHTMLVideoElement */
    get_height(): number
    get_poster(): string
    get_video_height(): number
    get_video_width(): number
    get_webkit_decoded_frame_count(): number
    get_webkit_displaying_fullscreen(): boolean
    get_webkit_dropped_frame_count(): number
    get_webkit_supports_fullscreen(): boolean
    get_webkit_wireless_video_playback_disabled(): boolean
    get_width(): number
    set_height(value: number): void
    set_poster(value: string): void
    set_webkit_wireless_video_playback_disabled(value: boolean): void
    set_width(value: number): void
    webkit_enter_full_screen(): void
    webkit_enter_fullscreen(): void
    webkit_exit_full_screen(): void
    webkit_exit_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMHTMLMediaElement */
    can_play_type(type: string): string
    fast_seek(time: number): void
    get_autoplay(): boolean
    get_buffered(): DOMTimeRanges
    get_controller(): DOMMediaController
    get_controls(): boolean
    get_current_src(): string
    get_current_time(): number
    get_default_muted(): boolean
    get_default_playback_rate(): number
    get_duration(): number
    get_ended(): boolean
    get_error(): DOMMediaError
    get_initial_time(): number
    get_loop(): boolean
    get_media_group(): string
    get_muted(): boolean
    get_network_state(): number
    get_paused(): boolean
    get_playback_rate(): number
    get_played(): DOMTimeRanges
    get_preload(): string
    get_ready_state(): number
    get_seekable(): DOMTimeRanges
    get_seeking(): boolean
    get_src(): string
    get_start_time(): number
    get_volume(): number
    get_webkit_audio_decoded_byte_count(): number
    get_webkit_closed_captions_visible(): boolean
    get_webkit_current_playback_target_is_wireless(): boolean
    get_webkit_has_closed_captions(): boolean
    get_webkit_preserves_pitch(): boolean
    get_webkit_video_decoded_byte_count(): number
    load(): void
    pause(): void
    play(): void
    set_autoplay(value: boolean): void
    set_controls(value: boolean): void
    set_current_time(value: number): void
    set_default_muted(value: boolean): void
    set_default_playback_rate(value: number): void
    set_loop(value: boolean): void
    set_media_group(value: string): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_preload(value: string): void
    set_src(value: string): void
    set_volume(value: number): void
    set_webkit_closed_captions_visible(value: boolean): void
    set_webkit_preserves_pitch(value: boolean): void
    webkit_show_playback_target_picker(): void
    /* Methods of WebKit2WebExtension.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    set_access_key(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_inner_html(contents: string): void
    set_inner_text(value: string): void
    set_lang(value: string): void
    set_outer_html(contents: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit2WebExtension.DOMElement */
    blur(): void
    closest(selectors: string): DOMElement
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_bounding_client_rect(): DOMClientRect
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_rects(): DOMClientRectList
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(class_name: string): DOMNodeList
    get_elements_by_class_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name(tag_name: string): DOMNodeList
    get_elements_by_tag_name_as_html_collection(name: string): DOMHTMLCollection
    get_elements_by_tag_name_ns(namespace_uri: string, tag_name: string): DOMNodeList
    get_elements_by_tag_name_ns_as_html_collection(namespaceURI: string, localName: string): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_local_name(): string
    get_namespace_uri(): string
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_prefix(): string
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    html_input_element_get_auto_filled(): boolean
    html_input_element_is_user_edited(): boolean
    html_input_element_set_auto_filled(auto_filled: boolean): void
    html_input_element_set_editing_value(value: string): void
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    matches(selectors: string): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    request_pointer_lock(): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_outer_html(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_fullscreen(): void
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::poster", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::poster", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::video-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::video-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::video-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::video-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-decoded-frame-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-decoded-frame-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-displaying-fullscreen", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-displaying-fullscreen", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-dropped-frame-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-dropped-frame-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-supports-fullscreen", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-supports-fullscreen", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-wireless-video-playback-disabled", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-wireless-video-playback-disabled", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::autoplay", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::autoplay", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::buffered", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::buffered", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::controller", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::controller", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::controls", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::controls", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-src", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-src", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-time", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-time", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-muted", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-muted", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-playback-rate", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-playback-rate", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::duration", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::duration", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ended", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ended", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::error", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::error", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::loop", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::loop", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media-group", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-group", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::muted", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::muted", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::network-state", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::network-state", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paused", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paused", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::playback-rate", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::playback-rate", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::played", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::played", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::preload", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::preload", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ready-state", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ready-state", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seekable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seekable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seeking", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seeking", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::volume", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::volume", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-audio-decoded-byte-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-audio-decoded-byte-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-closed-captions-visible", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-closed-captions-visible", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-current-playback-target-is-wireless", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-current-playback-target-is-wireless", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-has-closed-captions", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-has-closed-captions", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-preserves-pitch", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-preserves-pitch", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-video-decoded-byte-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-video-decoded-byte-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::access-key", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::access-key", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::content-editable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-editable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dir", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dir", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::draggable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::draggable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hidden", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hidden", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-text", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-text", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::is-content-editable", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::lang", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::lang", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-text", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-text", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::spellcheck", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tab-index", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tab-index", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::translate", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::translate", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkitdropzone", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::attributes", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::attributes", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-list", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-list", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::class-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::class-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-left", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-left", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-top", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-top", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-element-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-left", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-left", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-parent", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-top", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-top", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::outer-html", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::outer-html", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-element-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-height", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-left", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-top", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::scroll-width", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::style", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::style", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::tag-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::tag-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-region-overset", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMHTMLVideoElement, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHTMLVideoElement_ConstructProps)
    _init (config?: DOMHTMLVideoElement_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMHistory_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMHistory {
    /* Properties of WebKit2WebExtension.DOMHistory */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMHistory */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMHistory */
    back(): void
    forward(): void
    get_length(): number
    go(distance: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMHistory, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMHistory, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMHistory, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMHistory, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMHistory_ConstructProps)
    _init (config?: DOMHistory_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMKeyboardEvent_ConstructProps extends DOMUIEvent_ConstructProps {
}
export class DOMKeyboardEvent {
    /* Properties of WebKit2WebExtension.DOMKeyboardEvent */
    readonly alt_graph_key: boolean
    readonly alt_key: boolean
    readonly ctrl_key: boolean
    readonly key_identifier: string
    readonly key_location: number
    readonly meta_key: boolean
    readonly shift_key: boolean
    /* Properties of WebKit2WebExtension.DOMUIEvent */
    readonly char_code: number
    readonly detail: number
    readonly key_code: number
    readonly layer_x: number
    readonly layer_y: number
    readonly page_x: number
    readonly page_y: number
    readonly view: DOMDOMWindow
    /* Properties of WebKit2WebExtension.DOMEvent */
    readonly bubbles: boolean
    cancel_bubble: boolean
    readonly cancelable: boolean
    readonly current_target: DOMEventTarget
    readonly event_phase: number
    return_value: boolean
    readonly src_element: DOMEventTarget
    readonly target: DOMEventTarget
    readonly time_stamp: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMKeyboardEvent */
    parent_instance: DOMUIEvent
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMKeyboardEvent */
    get_alt_graph_key(): boolean
    get_alt_key(): boolean
    get_ctrl_key(): boolean
    get_key_identifier(): string
    get_key_location(): number
    get_meta_key(): boolean
    get_modifier_state(keyIdentifierArg: string): boolean
    get_shift_key(): boolean
    init_keyboard_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, keyIdentifier: string, location: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, altGraphKey: boolean): void
    /* Methods of WebKit2WebExtension.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit2WebExtension.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_event_phase(): number
    get_event_type(): string
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::alt-graph-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-graph-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alt-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ctrl-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ctrl-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::key-identifier", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-identifier", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::key-location", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-location", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::meta-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::meta-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shift-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shift-key", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::char-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::detail", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::key-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::view", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bubbles", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::return-value", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src-element", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMKeyboardEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMKeyboardEvent_ConstructProps)
    _init (config?: DOMKeyboardEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMLocation_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMLocation {
    /* Properties of WebKit2WebExtension.DOMLocation */
    readonly ancestor_origins: DOMDOMStringList
    readonly hash: string
    readonly host: string
    readonly hostname: string
    readonly href: string
    readonly origin: string
    readonly pathname: string
    readonly port: string
    readonly protocol: string
    readonly search: string
    /* Fields of WebKit2WebExtension.DOMLocation */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMLocation */
    get_ancestor_origins(): DOMDOMStringList
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_origin(): string
    get_pathname(): string
    get_port(): string
    get_protocol(): string
    get_search(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::ancestor-origins", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ancestor-origins", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hash", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hash", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::host", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::host", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::hostname", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::hostname", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::href", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::origin", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::origin", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pathname", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pathname", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::port", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::port", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::protocol", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::protocol", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::search", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::search", callback: (($obj: DOMLocation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMLocation_ConstructProps)
    _init (config?: DOMLocation_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMMediaController_ConstructProps extends DOMObject_ConstructProps {
    current_time?: number
    default_playback_rate?: number
    muted?: boolean
    playback_rate?: number
    volume?: number
}
export class DOMMediaController {
    /* Properties of WebKit2WebExtension.DOMMediaController */
    readonly buffered: DOMTimeRanges
    current_time: number
    default_playback_rate: number
    readonly duration: number
    muted: boolean
    readonly paused: boolean
    playback_rate: number
    readonly playback_state: string
    readonly played: DOMTimeRanges
    readonly seekable: DOMTimeRanges
    volume: number
    /* Fields of WebKit2WebExtension.DOMMediaController */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMMediaController */
    get_buffered(): DOMTimeRanges
    get_current_time(): number
    get_default_playback_rate(): number
    get_duration(): number
    get_muted(): boolean
    get_paused(): boolean
    get_playback_rate(): number
    get_playback_state(): string
    get_played(): DOMTimeRanges
    get_seekable(): DOMTimeRanges
    get_volume(): number
    pause(): void
    play(): void
    set_current_time(value: number): void
    set_default_playback_rate(value: number): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_volume(value: number): void
    unpause(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMMediaController */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::buffered", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::buffered", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-time", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-time", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::default-playback-rate", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::default-playback-rate", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::duration", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::duration", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::muted", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::muted", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::paused", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::paused", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::playback-rate", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::playback-rate", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::playback-state", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::playback-state", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::played", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::played", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::seekable", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::seekable", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::volume", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::volume", callback: (($obj: DOMMediaController, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMediaController_ConstructProps)
    _init (config?: DOMMediaController_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMMediaError_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMMediaError {
    /* Properties of WebKit2WebExtension.DOMMediaError */
    readonly code: number
    /* Fields of WebKit2WebExtension.DOMMediaError */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMMediaError */
    get_code(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMediaError, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMediaError, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::code", callback: (($obj: DOMMediaError, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::code", callback: (($obj: DOMMediaError, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMediaError_ConstructProps)
    _init (config?: DOMMediaError_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMMediaList_ConstructProps extends DOMObject_ConstructProps {
    media_text?: string
}
export class DOMMediaList {
    /* Properties of WebKit2WebExtension.DOMMediaList */
    readonly length: number
    media_text: string
    /* Fields of WebKit2WebExtension.DOMMediaList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMMediaList */
    append_medium(newMedium: string): void
    delete_medium(oldMedium: string): void
    get_length(): number
    get_media_text(): string
    item(index: number): string
    set_media_text(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media-text", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media-text", callback: (($obj: DOMMediaList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMediaList_ConstructProps)
    _init (config?: DOMMediaList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMMediaQueryList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMMediaQueryList {
    /* Properties of WebKit2WebExtension.DOMMediaQueryList */
    readonly matches: boolean
    readonly media: string
    /* Fields of WebKit2WebExtension.DOMMediaQueryList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMMediaQueryList */
    get_matches(): boolean
    get_media(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMediaQueryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMediaQueryList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::matches", callback: (($obj: DOMMediaQueryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::matches", callback: (($obj: DOMMediaQueryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media", callback: (($obj: DOMMediaQueryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMMediaQueryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMediaQueryList_ConstructProps)
    _init (config?: DOMMediaQueryList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMMemoryInfo_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMMemoryInfo {
    /* Properties of WebKit2WebExtension.DOMMemoryInfo */
    readonly js_heap_size_limit: number
    readonly total_js_heap_size: number
    readonly used_js_heap_size: number
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::js-heap-size-limit", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::js-heap-size-limit", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::total-js-heap-size", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::total-js-heap-size", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::used-js-heap-size", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::used-js-heap-size", callback: (($obj: DOMMemoryInfo, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMemoryInfo_ConstructProps)
    _init (config?: DOMMemoryInfo_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_js_heap_size_limit(self: object): number
    static get_total_js_heap_size(self: object): number
    static get_used_js_heap_size(self: object): number
    static $gtype: GObject.Type
}
export interface DOMMessagePort_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMMessagePort {
    /* Fields of WebKit2WebExtension.DOMMessagePort */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMMessagePort */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMessagePort, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMessagePort, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMessagePort_ConstructProps)
    _init (config?: DOMMessagePort_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMMicroDataItemValue_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMMicroDataItemValue {
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMicroDataItemValue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMicroDataItemValue, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMicroDataItemValue_ConstructProps)
    _init (config?: DOMMicroDataItemValue_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMMouseEvent_ConstructProps extends DOMUIEvent_ConstructProps {
}
export class DOMMouseEvent {
    /* Properties of WebKit2WebExtension.DOMMouseEvent */
    readonly alt_key: boolean
    readonly button: number
    readonly client_x: number
    readonly client_y: number
    readonly ctrl_key: boolean
    readonly from_element: DOMNode
    readonly meta_key: boolean
    readonly offset_x: number
    readonly offset_y: number
    readonly related_target: DOMEventTarget
    readonly screen_x: number
    readonly screen_y: number
    readonly shift_key: boolean
    readonly to_element: DOMNode
    readonly webkit_movement_x: number
    readonly webkit_movement_y: number
    readonly x: number
    readonly y: number
    /* Properties of WebKit2WebExtension.DOMUIEvent */
    readonly char_code: number
    readonly detail: number
    readonly key_code: number
    readonly layer_x: number
    readonly layer_y: number
    readonly page_x: number
    readonly page_y: number
    readonly view: DOMDOMWindow
    /* Properties of WebKit2WebExtension.DOMEvent */
    readonly bubbles: boolean
    cancel_bubble: boolean
    readonly cancelable: boolean
    readonly current_target: DOMEventTarget
    readonly event_phase: number
    return_value: boolean
    readonly src_element: DOMEventTarget
    readonly target: DOMEventTarget
    readonly time_stamp: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMMouseEvent */
    parent_instance: DOMUIEvent
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMMouseEvent */
    get_alt_key(): boolean
    get_button(): number
    get_client_x(): number
    get_client_y(): number
    get_ctrl_key(): boolean
    get_from_element(): DOMNode
    get_meta_key(): boolean
    get_offset_x(): number
    get_offset_y(): number
    get_related_target(): DOMEventTarget
    get_screen_x(): number
    get_screen_y(): number
    get_shift_key(): boolean
    get_to_element(): DOMNode
    get_webkit_movement_x(): number
    get_webkit_movement_y(): number
    get_x(): number
    get_y(): number
    init_mouse_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, button: number, relatedTarget: DOMEventTarget): void
    /* Methods of WebKit2WebExtension.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit2WebExtension.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_event_phase(): number
    get_event_type(): string
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::alt-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::button", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ctrl-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ctrl-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::from-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::from-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::meta-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::meta-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::related-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::related-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shift-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shift-key", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::to-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::to-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-movement-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-movement-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-movement-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-movement-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::char-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::detail", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::key-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::view", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bubbles", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::return-value", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMMouseEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMMouseEvent_ConstructProps)
    _init (config?: DOMMouseEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMNamedNodeMap_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMNamedNodeMap {
    /* Properties of WebKit2WebExtension.DOMNamedNodeMap */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMNamedNodeMap */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNamedNodeMap */
    get_length(): number
    get_named_item(name: string): DOMNode
    get_named_item_ns(namespaceURI: string, localName: string): DOMNode
    item(index: number): DOMNode
    remove_named_item(name: string): DOMNode
    remove_named_item_ns(namespaceURI: string, localName: string): DOMNode
    set_named_item(node: DOMNode): DOMNode
    set_named_item_ns(node: DOMNode): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMNamedNodeMap, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMNamedNodeMap_ConstructProps)
    _init (config?: DOMNamedNodeMap_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMNavigator_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMNavigator {
    /* Properties of WebKit2WebExtension.DOMNavigator */
    readonly app_code_name: string
    readonly app_name: string
    readonly app_version: string
    readonly cookie_enabled: boolean
    readonly geolocation: DOMGeolocation
    readonly language: string
    readonly mime_types: DOMDOMMimeTypeArray
    readonly on_line: boolean
    readonly platform: string
    readonly plugins: DOMDOMPluginArray
    readonly product: string
    readonly product_sub: string
    readonly user_agent: string
    readonly vendor: string
    readonly vendor_sub: string
    readonly webkit_battery: DOMBatteryManager
    readonly webkit_persistent_storage: DOMStorageQuota
    readonly webkit_temporary_storage: DOMStorageQuota
    /* Fields of WebKit2WebExtension.DOMNavigator */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNavigator */
    get_app_code_name(): string
    get_app_name(): string
    get_app_version(): string
    get_cookie_enabled(): boolean
    get_geolocation(): DOMGeolocation
    get_language(): string
    get_mime_types(): DOMDOMMimeTypeArray
    get_on_line(): boolean
    get_platform(): string
    get_plugins(): DOMDOMPluginArray
    get_product(): string
    get_product_sub(): string
    get_storage_updates(): void
    get_user_agent(): string
    get_vendor(): string
    get_vendor_sub(): string
    get_webkit_battery(): DOMBatteryManager
    get_webkit_persistent_storage(): DOMStorageQuota
    get_webkit_temporary_storage(): DOMStorageQuota
    is_protocol_handler_registered(scheme: string, url: string): string
    java_enabled(): boolean
    register_protocol_handler(scheme: string, url: string, title: string): void
    unregister_protocol_handler(scheme: string, url: string): void
    webkit_get_gamepads(): DOMGamepadList
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::app-code-name", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::app-code-name", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::app-name", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::app-name", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::app-version", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::app-version", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cookie-enabled", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cookie-enabled", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::geolocation", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::geolocation", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mime-types", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mime-types", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::on-line", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::on-line", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::platform", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::platform", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::plugins", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::plugins", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::product", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::product", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::product-sub", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::product-sub", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::user-agent", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::user-agent", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vendor", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vendor", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vendor-sub", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vendor-sub", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-battery", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-battery", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-persistent-storage", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-persistent-storage", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-temporary-storage", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-temporary-storage", callback: (($obj: DOMNavigator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMNavigator_ConstructProps)
    _init (config?: DOMNavigator_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMNode_ConstructProps extends DOMObject_ConstructProps {
    node_value?: string
    prefix?: string
    text_content?: string
}
export class DOMNode {
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly local_name: string
    readonly namespace_uri: string
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    prefix: string
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMNode */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::base-uri", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::local-name", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::local-name", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::namespace-uri", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::namespace-uri", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::prefix", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::prefix", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMNode, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMNode_ConstructProps)
    _init (config?: DOMNode_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMNodeFilter_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMNodeFilter {
    /* Fields of WebKit2WebExtension.DOMNodeFilter */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNodeFilter */
    accept_node(n: DOMNode): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMNodeFilter, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMNodeFilter, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMNodeFilter_ConstructProps)
    _init (config?: DOMNodeFilter_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMNodeIterator_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMNodeIterator {
    /* Properties of WebKit2WebExtension.DOMNodeIterator */
    readonly expand_entity_references: boolean
    readonly filter: DOMNodeFilter
    readonly pointer_before_reference_node: boolean
    readonly reference_node: DOMNode
    readonly root: DOMNode
    readonly what_to_show: number
    /* Fields of WebKit2WebExtension.DOMNodeIterator */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNodeIterator */
    detach(): void
    get_expand_entity_references(): boolean
    get_filter(): DOMNodeFilter
    get_pointer_before_reference_node(): boolean
    get_reference_node(): DOMNode
    get_root(): DOMNode
    get_what_to_show(): number
    next_node(): DOMNode
    previous_node(): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::expand-entity-references", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expand-entity-references", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pointer-before-reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pointer-before-reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reference-node", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::what-to-show", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: DOMNodeIterator, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMNodeIterator_ConstructProps)
    _init (config?: DOMNodeIterator_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMNodeList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMNodeList {
    /* Properties of WebKit2WebExtension.DOMNodeList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMNodeList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNodeList */
    get_length(): number
    item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMNodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMNodeList_ConstructProps)
    _init (config?: DOMNodeList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMObject_ConstructProps extends GObject.Object_ConstructProps {
    core_object?: object
}
export class DOMObject {
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMObject, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMObject, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMObject_ConstructProps)
    _init (config?: DOMObject_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMPerformance_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMPerformance {
    /* Properties of WebKit2WebExtension.DOMPerformance */
    readonly navigation: DOMPerformanceNavigation
    readonly timing: DOMPerformanceTiming
    /* Fields of WebKit2WebExtension.DOMPerformance */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMPerformance */
    get_memory(): object
    get_navigation(): DOMPerformanceNavigation
    get_timing(): DOMPerformanceTiming
    now(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMPerformance */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMPerformance, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMPerformance, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::navigation", callback: (($obj: DOMPerformance, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::navigation", callback: (($obj: DOMPerformance, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::timing", callback: (($obj: DOMPerformance, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::timing", callback: (($obj: DOMPerformance, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMPerformance_ConstructProps)
    _init (config?: DOMPerformance_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMPerformanceEntry_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMPerformanceEntry {
    /* Properties of WebKit2WebExtension.DOMPerformanceEntry */
    readonly duration: number
    readonly entry_type: string
    readonly name: string
    readonly start_time: number
    /* Fields of WebKit2WebExtension.DOMPerformanceEntry */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMPerformanceEntry */
    get_duration(): number
    get_entry_type(): string
    get_name(): string
    get_start_time(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::duration", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::duration", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::entry-type", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::entry-type", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start-time", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-time", callback: (($obj: DOMPerformanceEntry, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMPerformanceEntry_ConstructProps)
    _init (config?: DOMPerformanceEntry_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMPerformanceEntryList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMPerformanceEntryList {
    /* Properties of WebKit2WebExtension.DOMPerformanceEntryList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMPerformanceEntryList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMPerformanceEntryList */
    get_length(): number
    item(index: number): DOMPerformanceEntry
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMPerformanceEntryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMPerformanceEntryList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMPerformanceEntryList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMPerformanceEntryList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMPerformanceEntryList_ConstructProps)
    _init (config?: DOMPerformanceEntryList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMPerformanceNavigation_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMPerformanceNavigation {
    /* Properties of WebKit2WebExtension.DOMPerformanceNavigation */
    readonly redirect_count: number
    readonly type: number
    /* Fields of WebKit2WebExtension.DOMPerformanceNavigation */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMPerformanceNavigation */
    get_redirect_count(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMPerformanceNavigation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMPerformanceNavigation, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::redirect-count", callback: (($obj: DOMPerformanceNavigation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::redirect-count", callback: (($obj: DOMPerformanceNavigation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMPerformanceNavigation, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMPerformanceNavigation, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMPerformanceNavigation_ConstructProps)
    _init (config?: DOMPerformanceNavigation_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMPerformanceTiming_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMPerformanceTiming {
    /* Properties of WebKit2WebExtension.DOMPerformanceTiming */
    readonly connect_end: number
    readonly connect_start: number
    readonly dom_complete: number
    readonly dom_content_loaded_event_end: number
    readonly dom_content_loaded_event_start: number
    readonly dom_interactive: number
    readonly dom_loading: number
    readonly domain_lookup_end: number
    readonly domain_lookup_start: number
    readonly fetch_start: number
    readonly load_event_end: number
    readonly load_event_start: number
    readonly navigation_start: number
    readonly redirect_end: number
    readonly redirect_start: number
    readonly request_start: number
    readonly response_end: number
    readonly response_start: number
    readonly secure_connection_start: number
    readonly unload_event_end: number
    readonly unload_event_start: number
    /* Fields of WebKit2WebExtension.DOMPerformanceTiming */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMPerformanceTiming */
    get_connect_end(): number
    get_connect_start(): number
    get_dom_complete(): number
    get_dom_content_loaded_event_end(): number
    get_dom_content_loaded_event_start(): number
    get_dom_interactive(): number
    get_dom_loading(): number
    get_domain_lookup_end(): number
    get_domain_lookup_start(): number
    get_fetch_start(): number
    get_load_event_end(): number
    get_load_event_start(): number
    get_navigation_start(): number
    get_redirect_end(): number
    get_redirect_start(): number
    get_request_start(): number
    get_response_end(): number
    get_response_start(): number
    get_secure_connection_start(): number
    get_unload_event_end(): number
    get_unload_event_start(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::connect-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::connect-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::connect-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::connect-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dom-complete", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dom-complete", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dom-content-loaded-event-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dom-content-loaded-event-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dom-content-loaded-event-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dom-content-loaded-event-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dom-interactive", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dom-interactive", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dom-loading", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dom-loading", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::domain-lookup-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::domain-lookup-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::domain-lookup-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::domain-lookup-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::fetch-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::fetch-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::load-event-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::load-event-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::load-event-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::load-event-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::navigation-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::navigation-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::redirect-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::redirect-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::redirect-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::redirect-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::request-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::request-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::response-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::response-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::response-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::response-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::secure-connection-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::secure-connection-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unload-event-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unload-event-end", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::unload-event-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::unload-event-start", callback: (($obj: DOMPerformanceTiming, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMPerformanceTiming_ConstructProps)
    _init (config?: DOMPerformanceTiming_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMProcessingInstruction_ConstructProps extends DOMCharacterData_ConstructProps {
}
export class DOMProcessingInstruction {
    /* Properties of WebKit2WebExtension.DOMProcessingInstruction */
    readonly sheet: DOMStyleSheet
    readonly target: string
    /* Properties of WebKit2WebExtension.DOMCharacterData */
    data: string
    readonly length: number
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMProcessingInstruction */
    parent_instance: DOMCharacterData
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMProcessingInstruction */
    get_data(): string
    get_sheet(): DOMStyleSheet
    get_target(): string
    set_data(value: string): void
    /* Methods of WebKit2WebExtension.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_length(): number
    insert_data(offset: number, data: string): void
    replace_data(offset: number, length: number, data: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::sheet", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::sheet", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMProcessingInstruction, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMProcessingInstruction_ConstructProps)
    _init (config?: DOMProcessingInstruction_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMPropertyNodeList_ConstructProps extends DOMNodeList_ConstructProps {
}
export class DOMPropertyNodeList {
    /* Properties of WebKit2WebExtension.DOMPropertyNodeList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMNodeList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMNodeList */
    get_length(): number
    item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMPropertyNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMPropertyNodeList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMPropertyNodeList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMPropertyNodeList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMPropertyNodeList_ConstructProps)
    _init (config?: DOMPropertyNodeList_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static get_length(self: object): number
    static item(self: object, index: number): DOMNode
    static $gtype: GObject.Type
}
export interface DOMRange_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMRange {
    /* Properties of WebKit2WebExtension.DOMRange */
    readonly collapsed: boolean
    readonly common_ancestor_container: DOMNode
    readonly end_container: DOMNode
    readonly end_offset: number
    readonly start_container: DOMNode
    readonly start_offset: number
    readonly text: string
    /* Fields of WebKit2WebExtension.DOMRange */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMRange */
    clone_contents(): DOMDocumentFragment
    clone_range(): DOMRange
    collapse(toStart: boolean): void
    compare_boundary_points(how: number, sourceRange: DOMRange): number
    compare_node(refNode: DOMNode): number
    compare_point(refNode: DOMNode, offset: number): number
    create_contextual_fragment(html: string): DOMDocumentFragment
    delete_contents(): void
    detach(): void
    expand(unit: string): void
    extract_contents(): DOMDocumentFragment
    get_collapsed(): boolean
    get_common_ancestor_container(): DOMNode
    get_end_container(): DOMNode
    get_end_offset(): number
    get_start_container(): DOMNode
    get_start_offset(): number
    get_text(): string
    insert_node(newNode: DOMNode): void
    intersects_node(refNode: DOMNode): boolean
    is_point_in_range(refNode: DOMNode, offset: number): boolean
    select_node(refNode: DOMNode): void
    select_node_contents(refNode: DOMNode): void
    set_end(refNode: DOMNode, offset: number): void
    set_end_after(refNode: DOMNode): void
    set_end_before(refNode: DOMNode): void
    set_start(refNode: DOMNode, offset: number): void
    set_start_after(refNode: DOMNode): void
    set_start_before(refNode: DOMNode): void
    surround_contents(newParent: DOMNode): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::collapsed", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::collapsed", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::common-ancestor-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::common-ancestor-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::end-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::end-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-container", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-offset", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMRange, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMRange_ConstructProps)
    _init (config?: DOMRange_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMScreen_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMScreen {
    /* Properties of WebKit2WebExtension.DOMScreen */
    readonly avail_height: number
    readonly avail_left: number
    readonly avail_top: number
    readonly avail_width: number
    readonly color_depth: number
    readonly height: number
    readonly pixel_depth: number
    readonly width: number
    /* Fields of WebKit2WebExtension.DOMScreen */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMScreen */
    get_avail_height(): number
    get_avail_left(): number
    get_avail_top(): number
    get_avail_width(): number
    get_color_depth(): number
    get_height(): number
    get_pixel_depth(): number
    get_width(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::avail-height", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::avail-height", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::avail-left", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::avail-left", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::avail-top", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::avail-top", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::avail-width", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::avail-width", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::color-depth", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::color-depth", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::height", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::height", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pixel-depth", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pixel-depth", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::width", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::width", callback: (($obj: DOMScreen, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMScreen_ConstructProps)
    _init (config?: DOMScreen_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMShadowRoot_ConstructProps extends DOMDocumentFragment_ConstructProps {
    apply_author_styles?: boolean
    inner_html?: string
    reset_style_inheritance?: boolean
}
export class DOMShadowRoot {
    /* Properties of WebKit2WebExtension.DOMShadowRoot */
    readonly active_element: DOMElement
    apply_author_styles: boolean
    inner_html: string
    reset_style_inheritance: boolean
    /* Properties of WebKit2WebExtension.DOMDocumentFragment */
    readonly child_element_count: number
    readonly children: DOMHTMLCollection
    readonly first_element_child: DOMElement
    readonly last_element_child: DOMElement
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMShadowRoot */
    parent_instance: DOMDocumentFragment
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMShadowRoot */
    element_from_point(x: number, y: number): DOMElement
    get_active_element(): DOMElement
    get_apply_author_styles(): boolean
    get_element_by_id(elementId: string): DOMElement
    get_elements_by_class_name(className: string): DOMNodeList
    get_elements_by_tag_name(tagName: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_inner_html(): string
    get_reset_style_inheritance(): boolean
    get_selection(): DOMDOMSelection
    set_apply_author_styles(value: boolean): void
    set_inner_html(value: string): void
    set_reset_style_inheritance(value: boolean): void
    /* Methods of WebKit2WebExtension.DOMDocumentFragment */
    get_child_element_count(): number
    get_children(): DOMHTMLCollection
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active-element", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-element", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::apply-author-styles", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::apply-author-styles", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::inner-html", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::inner-html", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::reset-style-inheritance", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::reset-style-inheritance", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-element-count", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-element-count", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::children", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::children", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-element-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-element-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-element-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-element-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMShadowRoot, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMShadowRoot_ConstructProps)
    _init (config?: DOMShadowRoot_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMStorage_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMStorage {
    /* Properties of WebKit2WebExtension.DOMStorage */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMStorage */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMStorage */
    clear(): void
    get_item(key: string): string
    get_length(): number
    key(index: number): string
    remove_item(key: string): void
    set_item(key: string, data: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMStorage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMStorage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMStorage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMStorage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMStorage_ConstructProps)
    _init (config?: DOMStorage_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMStorageInfo_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMStorageInfo {
    /* Fields of WebKit2WebExtension.DOMStorageInfo */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMStorageInfo, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMStorageInfo, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMStorageInfo_ConstructProps)
    _init (config?: DOMStorageInfo_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMStorageQuota_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMStorageQuota {
    /* Fields of WebKit2WebExtension.DOMStorageQuota */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMStorageQuota, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMStorageQuota, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMStorageQuota_ConstructProps)
    _init (config?: DOMStorageQuota_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMStyleMedia_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMStyleMedia {
    /* Properties of WebKit2WebExtension.DOMStyleMedia */
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMStyleMedia */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMStyleMedia */
    match_medium(mediaquery: string): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMStyleMedia, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMStyleMedia, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::type", callback: (($obj: DOMStyleMedia, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMStyleMedia, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMStyleMedia_ConstructProps)
    _init (config?: DOMStyleMedia_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMStyleSheet_ConstructProps extends DOMObject_ConstructProps {
    disabled?: boolean
}
export class DOMStyleSheet {
    /* Properties of WebKit2WebExtension.DOMStyleSheet */
    disabled: boolean
    readonly href: string
    readonly media: DOMMediaList
    readonly owner_node: DOMNode
    readonly parent_style_sheet: DOMStyleSheet
    readonly title: string
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMStyleSheet */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMStyleSheet */
    get_disabled(): boolean
    get_href(): string
    get_media(): DOMMediaList
    get_owner_node(): DOMNode
    get_parent_style_sheet(): DOMStyleSheet
    get_title(): string
    set_disabled(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::disabled", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::disabled", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::href", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::href", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::media", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::media", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-node", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-node", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-style-sheet", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-style-sheet", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::title", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::title", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMStyleSheet, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMStyleSheet_ConstructProps)
    _init (config?: DOMStyleSheet_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMStyleSheetList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMStyleSheetList {
    /* Properties of WebKit2WebExtension.DOMStyleSheetList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMStyleSheetList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMStyleSheetList */
    get_length(): number
    item(index: number): DOMStyleSheet
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMStyleSheetList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMStyleSheetList_ConstructProps)
    _init (config?: DOMStyleSheetList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMText_ConstructProps extends DOMCharacterData_ConstructProps {
}
export class DOMText {
    /* Properties of WebKit2WebExtension.DOMText */
    readonly whole_text: string
    /* Properties of WebKit2WebExtension.DOMCharacterData */
    data: string
    readonly length: number
    /* Properties of WebKit2WebExtension.DOMNode */
    readonly base_uri: string
    readonly child_nodes: DOMNodeList
    readonly first_child: DOMNode
    readonly last_child: DOMNode
    readonly next_sibling: DOMNode
    readonly node_name: string
    readonly node_type: number
    node_value: string
    readonly owner_document: DOMDocument
    readonly parent_element: DOMElement
    readonly parent_node: DOMNode
    readonly previous_sibling: DOMNode
    text_content: string
    /* Fields of WebKit2WebExtension.DOMText */
    parent_instance: DOMCharacterData
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMText */
    get_whole_text(): string
    replace_whole_text(content: string): DOMText
    split_text(offset: number): DOMText
    /* Methods of WebKit2WebExtension.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit2WebExtension.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    clone_node_with_error(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild?: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMNode */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::whole-text", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::whole-text", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::data", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::data", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::length", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::base-uri", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::base-uri", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::child-nodes", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::child-nodes", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::first-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::last-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::last-child", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::next-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::next-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-name", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-name", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-type", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-type", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::node-value", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::node-value", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::owner-document", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::owner-document", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-element", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-element", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::parent-node", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::parent-node", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::previous-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::previous-sibling", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text-content", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text-content", callback: (($obj: DOMText, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMText_ConstructProps)
    _init (config?: DOMText_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTextTrack_ConstructProps extends DOMObject_ConstructProps {
    mode?: string
}
export class DOMTextTrack {
    /* Properties of WebKit2WebExtension.DOMTextTrack */
    readonly active_cues: DOMTextTrackCueList
    readonly cues: DOMTextTrackCueList
    readonly id: string
    readonly kind: string
    readonly label: string
    readonly language: string
    mode: string
    /* Fields of WebKit2WebExtension.DOMTextTrack */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMTextTrack */
    add_cue(cue: DOMTextTrackCue): void
    dispatch_event(evt: DOMEvent): boolean
    get_active_cues(): DOMTextTrackCueList
    get_cues(): DOMTextTrackCueList
    get_id(): string
    get_kind(): string
    get_label(): string
    get_language(): string
    get_mode(): string
    remove_cue(cue: DOMTextTrackCue): void
    set_mode(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMTextTrack */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active-cues", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::active-cues", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cues", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cues", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::kind", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::kind", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mode", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mode", callback: (($obj: DOMTextTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTextTrack_ConstructProps)
    _init (config?: DOMTextTrack_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTextTrackCue_ConstructProps extends DOMObject_ConstructProps {
    align?: string
    end_time?: number
    id?: string
    line?: number
    pause_on_exit?: boolean
    position?: number
    size?: number
    snap_to_lines?: boolean
    start_time?: number
    text?: string
    vertical?: string
}
export class DOMTextTrackCue {
    /* Properties of WebKit2WebExtension.DOMTextTrackCue */
    align: string
    end_time: number
    id: string
    line: number
    pause_on_exit: boolean
    position: number
    size: number
    snap_to_lines: boolean
    start_time: number
    text: string
    readonly track: DOMTextTrack
    vertical: string
    /* Fields of WebKit2WebExtension.DOMTextTrackCue */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMTextTrackCue */
    dispatch_event(evt: DOMEvent): boolean
    get_align(): string
    get_cue_as_html(): DOMDocumentFragment
    get_end_time(): number
    get_id(): string
    get_line(): number
    get_pause_on_exit(): boolean
    get_position(): number
    get_size(): number
    get_snap_to_lines(): boolean
    get_start_time(): number
    get_text(): string
    get_track(): DOMTextTrack
    get_vertical(): string
    set_align(value: string): void
    set_end_time(value: number): void
    set_id(value: string): void
    set_line(value: number): void
    set_pause_on_exit(value: boolean): void
    set_position(value: number): void
    set_size(value: number): void
    set_snap_to_lines(value: boolean): void
    set_start_time(value: number): void
    set_text(value: string): void
    set_vertical(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMTextTrackCue */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::align", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::align", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::end-time", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::end-time", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::id", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::line", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::line", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pause-on-exit", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pause-on-exit", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::position", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::position", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::size", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::size", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::snap-to-lines", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::snap-to-lines", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::start-time", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::start-time", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::text", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::text", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::track", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::track", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::vertical", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::vertical", callback: (($obj: DOMTextTrackCue, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTextTrackCue_ConstructProps)
    _init (config?: DOMTextTrackCue_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTextTrackCueList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMTextTrackCueList {
    /* Properties of WebKit2WebExtension.DOMTextTrackCueList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMTextTrackCueList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMTextTrackCueList */
    get_cue_by_id(id: string): DOMTextTrackCue
    get_length(): number
    item(index: number): DOMTextTrackCue
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTextTrackCueList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTextTrackCueList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMTextTrackCueList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMTextTrackCueList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTextTrackCueList_ConstructProps)
    _init (config?: DOMTextTrackCueList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTextTrackList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMTextTrackList {
    /* Properties of WebKit2WebExtension.DOMTextTrackList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMTextTrackList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMTextTrackList */
    dispatch_event(evt: DOMEvent): boolean
    get_length(): number
    get_track_by_id(id: string): DOMTextTrack
    item(index: number): DOMTextTrack
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMTextTrackList */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTextTrackList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTextTrackList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMTextTrackList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMTextTrackList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTextTrackList_ConstructProps)
    _init (config?: DOMTextTrackList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTimeRanges_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMTimeRanges {
    /* Properties of WebKit2WebExtension.DOMTimeRanges */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMTimeRanges */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMTimeRanges */
    end(index: number): number
    get_length(): number
    start(index: number): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTimeRanges, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTimeRanges, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMTimeRanges, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMTimeRanges, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTimeRanges_ConstructProps)
    _init (config?: DOMTimeRanges_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTouch_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMTouch {
    /* Properties of WebKit2WebExtension.DOMTouch */
    readonly client_x: number
    readonly client_y: number
    readonly identifier: number
    readonly page_x: number
    readonly page_y: number
    readonly screen_x: number
    readonly screen_y: number
    readonly target: DOMEventTarget
    readonly webkit_force: number
    readonly webkit_radius_x: number
    readonly webkit_radius_y: number
    readonly webkit_rotation_angle: number
    /* Fields of WebKit2WebExtension.DOMTouch */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMTouch */
    get_client_x(): number
    get_client_y(): number
    get_identifier(): number
    get_page_x(): number
    get_page_y(): number
    get_screen_x(): number
    get_screen_y(): number
    get_target(): DOMEventTarget
    get_webkit_force(): number
    get_webkit_radius_x(): number
    get_webkit_radius_y(): number
    get_webkit_rotation_angle(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::client-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::identifier", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::identifier", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-force", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-force", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-radius-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-radius-x", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-radius-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-radius-y", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-rotation-angle", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-rotation-angle", callback: (($obj: DOMTouch, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTouch_ConstructProps)
    _init (config?: DOMTouch_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTrackEvent_ConstructProps extends DOMEvent_ConstructProps {
}
export class DOMTrackEvent {
    /* Properties of WebKit2WebExtension.DOMEvent */
    readonly bubbles: boolean
    cancel_bubble: boolean
    readonly cancelable: boolean
    readonly current_target: DOMEventTarget
    readonly event_phase: number
    return_value: boolean
    readonly src_element: DOMEventTarget
    readonly target: DOMEventTarget
    readonly time_stamp: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMTrackEvent */
    parent_instance: DOMEvent
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_event_phase(): number
    get_event_type(): string
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::bubbles", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::return-value", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src-element", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMTrackEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTrackEvent_ConstructProps)
    _init (config?: DOMTrackEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMTreeWalker_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMTreeWalker {
    /* Properties of WebKit2WebExtension.DOMTreeWalker */
    readonly current_node: DOMNode
    readonly expand_entity_references: boolean
    readonly filter: DOMNodeFilter
    readonly root: DOMNode
    readonly what_to_show: number
    /* Fields of WebKit2WebExtension.DOMTreeWalker */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMTreeWalker */
    first_child(): DOMNode
    get_current_node(): DOMNode
    get_expand_entity_references(): boolean
    get_filter(): DOMNodeFilter
    get_root(): DOMNode
    get_what_to_show(): number
    last_child(): DOMNode
    next_node(): DOMNode
    next_sibling(): DOMNode
    parent_node(): DOMNode
    previous_node(): DOMNode
    previous_sibling(): DOMNode
    set_current_node(value: DOMNode): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::current-node", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-node", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::expand-entity-references", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::expand-entity-references", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::filter", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::filter", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::root", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::root", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::what-to-show", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::what-to-show", callback: (($obj: DOMTreeWalker, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMTreeWalker_ConstructProps)
    _init (config?: DOMTreeWalker_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMUIEvent_ConstructProps extends DOMEvent_ConstructProps {
}
export class DOMUIEvent {
    /* Properties of WebKit2WebExtension.DOMUIEvent */
    readonly char_code: number
    readonly detail: number
    readonly key_code: number
    readonly layer_x: number
    readonly layer_y: number
    readonly page_x: number
    readonly page_y: number
    readonly view: DOMDOMWindow
    readonly which: number
    /* Properties of WebKit2WebExtension.DOMEvent */
    readonly bubbles: boolean
    cancel_bubble: boolean
    readonly cancelable: boolean
    readonly current_target: DOMEventTarget
    readonly event_phase: number
    return_value: boolean
    readonly src_element: DOMEventTarget
    readonly target: DOMEventTarget
    readonly time_stamp: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMUIEvent */
    parent_instance: DOMEvent
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    get_which(): number
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit2WebExtension.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_event_phase(): number
    get_event_type(): string
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::char-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::detail", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::key-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::view", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::which", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::which", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bubbles", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::return-value", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src-element", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMUIEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMUIEvent_ConstructProps)
    _init (config?: DOMUIEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMValidityState_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMValidityState {
    /* Properties of WebKit2WebExtension.DOMValidityState */
    readonly bad_input: boolean
    readonly custom_error: boolean
    readonly pattern_mismatch: boolean
    readonly range_overflow: boolean
    readonly range_underflow: boolean
    readonly step_mismatch: boolean
    readonly too_long: boolean
    readonly type_mismatch: boolean
    readonly valid: boolean
    readonly value_missing: boolean
    /* Fields of WebKit2WebExtension.DOMValidityState */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMValidityState */
    get_bad_input(): boolean
    get_custom_error(): boolean
    get_pattern_mismatch(): boolean
    get_range_overflow(): boolean
    get_range_underflow(): boolean
    get_step_mismatch(): boolean
    get_too_long(): boolean
    get_type_mismatch(): boolean
    get_valid(): boolean
    get_value_missing(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::bad-input", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bad-input", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::custom-error", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::custom-error", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::pattern-mismatch", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::pattern-mismatch", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::range-overflow", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::range-overflow", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::range-underflow", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::range-underflow", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::step-mismatch", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::step-mismatch", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::too-long", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::too-long", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type-mismatch", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type-mismatch", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::valid", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::valid", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::value-missing", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::value-missing", callback: (($obj: DOMValidityState, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMValidityState_ConstructProps)
    _init (config?: DOMValidityState_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMVideoPlaybackQuality_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMVideoPlaybackQuality {
    /* Properties of WebKit2WebExtension.DOMVideoPlaybackQuality */
    readonly corrupted_video_frames: number
    readonly creation_time: number
    readonly dropped_video_frames: number
    readonly total_frame_delay: number
    readonly total_video_frames: number
    /* Fields of WebKit2WebExtension.DOMVideoPlaybackQuality */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMVideoPlaybackQuality */
    get_corrupted_video_frames(): number
    get_creation_time(): number
    get_dropped_video_frames(): number
    get_total_frame_delay(): number
    get_total_video_frames(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::corrupted-video-frames", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::corrupted-video-frames", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::creation-time", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::creation-time", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::dropped-video-frames", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::dropped-video-frames", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::total-frame-delay", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::total-frame-delay", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::total-video-frames", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::total-video-frames", callback: (($obj: DOMVideoPlaybackQuality, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMVideoPlaybackQuality_ConstructProps)
    _init (config?: DOMVideoPlaybackQuality_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMVideoTrack_ConstructProps extends DOMObject_ConstructProps {
    selected?: boolean
}
export class DOMVideoTrack {
    /* Properties of WebKit2WebExtension.DOMVideoTrack */
    readonly id: string
    readonly kind: string
    readonly label: string
    readonly language: string
    selected: boolean
    /* Fields of WebKit2WebExtension.DOMVideoTrack */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMVideoTrack */
    get_id(): string
    get_kind(): string
    get_label(): string
    get_language(): string
    get_selected(): boolean
    set_selected(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::id", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::id", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::kind", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::kind", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::label", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::label", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::language", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::language", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::selected", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::selected", callback: (($obj: DOMVideoTrack, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMVideoTrack_ConstructProps)
    _init (config?: DOMVideoTrack_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMVideoTrackList_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMVideoTrackList {
    /* Properties of WebKit2WebExtension.DOMVideoTrackList */
    readonly length: number
    /* Fields of WebKit2WebExtension.DOMVideoTrackList */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMVideoTrackList */
    dispatch_event(evt: DOMEvent): boolean
    get_length(): number
    get_track_by_id(id: string): DOMVideoTrack
    item(index: number): DOMVideoTrack
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMVideoTrackList */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMVideoTrackList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMVideoTrackList, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::length", callback: (($obj: DOMVideoTrackList, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::length", callback: (($obj: DOMVideoTrackList, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMVideoTrackList_ConstructProps)
    _init (config?: DOMVideoTrackList_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMWebKitNamedFlow_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMWebKitNamedFlow {
    /* Properties of WebKit2WebExtension.DOMWebKitNamedFlow */
    readonly first_empty_region_index: number
    readonly name: string
    readonly overset: boolean
    /* Fields of WebKit2WebExtension.DOMWebKitNamedFlow */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMWebKitNamedFlow */
    dispatch_event(event: DOMEvent): boolean
    get_content(): DOMNodeList
    get_content_nodes(): DOMNodeList
    get_first_empty_region_index(): number
    get_name(): string
    get_overflow(): boolean
    get_overset(): boolean
    get_regions(): DOMNodeList
    get_regions_by_content(contentNode: DOMNode): DOMNodeList
    get_regions_by_content_node(content_node: DOMNode): DOMNodeList
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of WebKit2WebExtension.DOMEventTarget */
    add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of WebKit2WebExtension.DOMWebKitNamedFlow */
    vfunc_add_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: Function, use_capture: boolean): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::first-empty-region-index", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::first-empty-region-index", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::name", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::name", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::overset", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::overset", callback: (($obj: DOMWebKitNamedFlow, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMWebKitNamedFlow_ConstructProps)
    _init (config?: DOMWebKitNamedFlow_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMWebKitPoint_ConstructProps extends DOMObject_ConstructProps {
    x?: number
    y?: number
}
export class DOMWebKitPoint {
    /* Properties of WebKit2WebExtension.DOMWebKitPoint */
    x: number
    y: number
    /* Fields of WebKit2WebExtension.DOMWebKitPoint */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMWebKitPoint */
    get_x(): number
    get_y(): number
    set_x(value: number): void
    set_y(value: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMWebKitPoint, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMWebKitPoint, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::x", callback: (($obj: DOMWebKitPoint, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x", callback: (($obj: DOMWebKitPoint, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::y", callback: (($obj: DOMWebKitPoint, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::y", callback: (($obj: DOMWebKitPoint, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMWebKitPoint_ConstructProps)
    _init (config?: DOMWebKitPoint_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMWheelEvent_ConstructProps extends DOMMouseEvent_ConstructProps {
}
export class DOMWheelEvent {
    /* Properties of WebKit2WebExtension.DOMWheelEvent */
    readonly delta_mode: number
    readonly delta_x: number
    readonly delta_y: number
    readonly delta_z: number
    readonly webkit_direction_inverted_from_device: boolean
    readonly wheel_delta: number
    readonly wheel_delta_x: number
    readonly wheel_delta_y: number
    /* Properties of WebKit2WebExtension.DOMMouseEvent */
    readonly alt_key: boolean
    readonly button: number
    readonly client_x: number
    readonly client_y: number
    readonly ctrl_key: boolean
    readonly from_element: DOMNode
    readonly meta_key: boolean
    readonly offset_x: number
    readonly offset_y: number
    readonly related_target: DOMEventTarget
    readonly screen_x: number
    readonly screen_y: number
    readonly shift_key: boolean
    readonly to_element: DOMNode
    readonly x: number
    readonly y: number
    /* Properties of WebKit2WebExtension.DOMUIEvent */
    readonly char_code: number
    readonly detail: number
    readonly key_code: number
    readonly layer_x: number
    readonly layer_y: number
    readonly page_x: number
    readonly page_y: number
    readonly view: DOMDOMWindow
    /* Properties of WebKit2WebExtension.DOMEvent */
    readonly bubbles: boolean
    cancel_bubble: boolean
    readonly cancelable: boolean
    readonly current_target: DOMEventTarget
    readonly event_phase: number
    return_value: boolean
    readonly src_element: DOMEventTarget
    readonly target: DOMEventTarget
    readonly time_stamp: number
    readonly type: string
    /* Fields of WebKit2WebExtension.DOMWheelEvent */
    parent_instance: DOMMouseEvent
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMWheelEvent */
    get_delta_mode(): number
    get_delta_x(): number
    get_delta_y(): number
    get_delta_z(): number
    get_webkit_direction_inverted_from_device(): boolean
    get_wheel_delta(): number
    get_wheel_delta_x(): number
    get_wheel_delta_y(): number
    init_wheel_event(wheelDeltaX: number, wheelDeltaY: number, view: DOMDOMWindow, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean): void
    /* Methods of WebKit2WebExtension.DOMMouseEvent */
    get_alt_key(): boolean
    get_button(): number
    get_client_x(): number
    get_client_y(): number
    get_ctrl_key(): boolean
    get_from_element(): DOMNode
    get_meta_key(): boolean
    get_offset_x(): number
    get_offset_y(): number
    get_related_target(): DOMEventTarget
    get_screen_x(): number
    get_screen_y(): number
    get_shift_key(): boolean
    get_to_element(): DOMNode
    get_x(): number
    get_y(): number
    init_mouse_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, button: number, relatedTarget: DOMEventTarget): void
    /* Methods of WebKit2WebExtension.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit2WebExtension.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_event_phase(): number
    get_event_type(): string
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::delta-mode", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::delta-mode", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::delta-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::delta-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::delta-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::delta-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::delta-z", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::delta-z", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::webkit-direction-inverted-from-device", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::webkit-direction-inverted-from-device", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wheel-delta", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wheel-delta", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wheel-delta-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wheel-delta-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::wheel-delta-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::wheel-delta-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::alt-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::alt-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::button", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::button", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::client-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::client-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::ctrl-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::ctrl-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::from-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::from-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::meta-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::meta-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::offset-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::offset-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::related-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::related-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::screen-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::screen-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::shift-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::shift-key", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::to-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::to-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::char-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::char-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::detail", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::detail", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::key-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::key-code", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::layer-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::layer-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-x", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::page-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::page-y", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::view", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::view", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::bubbles", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::bubbles", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancel-bubble", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancel-bubble", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::cancelable", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::cancelable", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::current-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::current-target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::event-phase", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::event-phase", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::return-value", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::return-value", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::src-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::src-element", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::target", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::time-stamp", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::time-stamp", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::type", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::type", callback: (($obj: DOMWheelEvent, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMWheelEvent_ConstructProps)
    _init (config?: DOMWheelEvent_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMXPathExpression_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMXPathExpression {
    /* Fields of WebKit2WebExtension.DOMXPathExpression */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMXPathExpression */
    evaluate(contextNode: DOMNode, type: number, inResult: DOMXPathResult): DOMXPathResult
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMXPathExpression, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMXPathExpression, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMXPathExpression_ConstructProps)
    _init (config?: DOMXPathExpression_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMXPathNSResolver_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMXPathNSResolver {
    /* Fields of WebKit2WebExtension.DOMXPathNSResolver */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMXPathNSResolver */
    lookup_namespace_uri(prefix: string): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMXPathNSResolver, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMXPathNSResolver, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMXPathNSResolver_ConstructProps)
    _init (config?: DOMXPathNSResolver_ConstructProps): void
    static $gtype: GObject.Type
}
export interface DOMXPathResult_ConstructProps extends DOMObject_ConstructProps {
}
export class DOMXPathResult {
    /* Properties of WebKit2WebExtension.DOMXPathResult */
    readonly boolean_value: boolean
    readonly invalid_iterator_state: boolean
    readonly number_value: number
    readonly result_type: number
    readonly single_node_value: DOMNode
    readonly snapshot_length: number
    readonly string_value: string
    /* Fields of WebKit2WebExtension.DOMXPathResult */
    parent_instance: DOMObject
    /* Fields of WebKit2WebExtension.DOMObject */
    parentInstance: GObject.Object
    coreObject: object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.DOMXPathResult */
    get_boolean_value(): boolean
    get_invalid_iterator_state(): boolean
    get_number_value(): number
    get_result_type(): number
    get_single_node_value(): DOMNode
    get_snapshot_length(): number
    get_string_value(): string
    iterate_next(): DOMNode
    snapshot_item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::boolean-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::boolean-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::invalid-iterator-state", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::invalid-iterator-state", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::number-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::number-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::result-type", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::result-type", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::single-node-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::single-node-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::snapshot-length", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::snapshot-length", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::string-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::string-value", callback: (($obj: DOMXPathResult, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: DOMXPathResult_ConstructProps)
    _init (config?: DOMXPathResult_ConstructProps): void
    static $gtype: GObject.Type
}
export interface Frame_ConstructProps extends GObject.Object_ConstructProps {
}
export class Frame {
    /* Fields of WebKit2WebExtension.Frame */
    parent: GObject.Object
    priv: FramePrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.Frame */
    get_javascript_context_for_script_world(world: ScriptWorld): JavaScriptCore.GlobalContext
    get_javascript_global_context(): JavaScriptCore.GlobalContext
    get_uri(): string
    is_main_frame(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: Frame, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: Frame_ConstructProps)
    _init (config?: Frame_ConstructProps): void
    static $gtype: GObject.Type
}
export interface ScriptWorld_ConstructProps extends GObject.Object_ConstructProps {
}
export class ScriptWorld {
    /* Fields of WebKit2WebExtension.ScriptWorld */
    parent: GObject.Object
    priv: ScriptWorldPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit2WebExtension.ScriptWorld */
    connect(sigName: "window-object-cleared", callback: (($obj: ScriptWorld, page: WebPage, frame: Frame) => void)): number
    connect_after(sigName: "window-object-cleared", callback: (($obj: ScriptWorld, page: WebPage, frame: Frame) => void)): number
    emit(sigName: "window-object-cleared", page: WebPage, frame: Frame): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: ScriptWorld, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: ScriptWorld, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: ScriptWorld_ConstructProps)
    _init (config?: ScriptWorld_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(): ScriptWorld
    static get_default(): ScriptWorld
    static $gtype: GObject.Type
}
export interface URIRequest_ConstructProps extends GObject.Object_ConstructProps {
    uri?: string
}
export class URIRequest {
    /* Properties of WebKit2WebExtension.URIRequest */
    uri: string
    /* Fields of WebKit2WebExtension.URIRequest */
    parent: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.URIRequest */
    get_uri(): string
    set_uri(uri: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: URIRequest, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: URIRequest, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::uri", callback: (($obj: URIRequest, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: URIRequest, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: URIRequest_ConstructProps)
    _init (config?: URIRequest_ConstructProps): void
    /* Static methods and pseudo-constructors */
    static new(uri: string): URIRequest
    static $gtype: GObject.Type
}
export interface URIResponse_ConstructProps extends GObject.Object_ConstructProps {
}
export class URIResponse {
    /* Properties of WebKit2WebExtension.URIResponse */
    readonly content_length: number
    readonly mime_type: string
    readonly status_code: number
    readonly suggested_filename: string
    readonly uri: string
    /* Fields of WebKit2WebExtension.URIResponse */
    parent: GObject.Object
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.URIResponse */
    get_content_length(): number
    get_mime_type(): string
    get_status_code(): number
    get_suggested_filename(): string
    get_uri(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::content-length", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::content-length", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::mime-type", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::mime-type", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::status-code", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::status-code", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::suggested-filename", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::suggested-filename", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: "notify::uri", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: URIResponse, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: URIResponse_ConstructProps)
    _init (config?: URIResponse_ConstructProps): void
    static $gtype: GObject.Type
}
export interface WebExtension_ConstructProps extends GObject.Object_ConstructProps {
}
export class WebExtension {
    /* Fields of WebKit2WebExtension.WebExtension */
    parent: GObject.Object
    priv: WebExtensionPrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.WebExtension */
    get_page(page_id: number): WebPage
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit2WebExtension.WebExtension */
    connect(sigName: "page-created", callback: (($obj: WebExtension, web_page: WebPage) => void)): number
    connect_after(sigName: "page-created", callback: (($obj: WebExtension, web_page: WebPage) => void)): number
    emit(sigName: "page-created", web_page: WebPage): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: WebExtension, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: WebExtension, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: WebExtension_ConstructProps)
    _init (config?: WebExtension_ConstructProps): void
    static $gtype: GObject.Type
}
export interface WebPage_ConstructProps extends GObject.Object_ConstructProps {
}
export class WebPage {
    /* Properties of WebKit2WebExtension.WebPage */
    readonly uri: string
    /* Fields of WebKit2WebExtension.WebPage */
    parent: GObject.Object
    priv: WebPagePrivate
    /* Fields of GObject.Object */
    g_type_instance: GObject.TypeInstance
    /* Methods of WebKit2WebExtension.WebPage */
    get_dom_document(): DOMDocument
    get_id(): number
    get_main_frame(): Frame
    get_uri(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit2WebExtension.WebPage */
    connect(sigName: "document-loaded", callback: (($obj: WebPage) => void)): number
    connect_after(sigName: "document-loaded", callback: (($obj: WebPage) => void)): number
    emit(sigName: "document-loaded"): void
    connect(sigName: "send-request", callback: (($obj: WebPage, request: URIRequest, redirected_response: URIResponse) => boolean)): number
    connect_after(sigName: "send-request", callback: (($obj: WebPage, request: URIRequest, redirected_response: URIResponse) => boolean)): number
    emit(sigName: "send-request", request: URIRequest, redirected_response: URIResponse): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: (($obj: WebPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify", callback: (($obj: WebPage, pspec: GObject.ParamSpec) => void)): number
    emit(sigName: "notify", pspec: GObject.ParamSpec): void
    connect(sigName: "notify::uri", callback: (($obj: WebPage, pspec: GObject.ParamSpec) => void)): number
    connect_after(sigName: "notify::uri", callback: (($obj: WebPage, pspec: GObject.ParamSpec) => void)): number
    connect(sigName: string, callback: any): number
    connect_after(sigName: string, callback: any): number
    emit(sigName: string, ...args: any[]): void
    disconnect(id: number): void
    static name: string
    constructor (config?: WebPage_ConstructProps)
    _init (config?: WebPage_ConstructProps): void
    static $gtype: GObject.Type
}
export abstract class DOMAttrClass {
    /* Fields of WebKit2WebExtension.DOMAttrClass */
    parent_class: DOMNodeClass
    static name: string
}
export abstract class DOMAudioTrackClass {
    /* Fields of WebKit2WebExtension.DOMAudioTrackClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMAudioTrackListClass {
    /* Fields of WebKit2WebExtension.DOMAudioTrackListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMBarPropClass {
    /* Fields of WebKit2WebExtension.DOMBarPropClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMBatteryManagerClass {
    /* Fields of WebKit2WebExtension.DOMBatteryManagerClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMBlobClass {
    /* Fields of WebKit2WebExtension.DOMBlobClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMCDATASectionClass {
    /* Fields of WebKit2WebExtension.DOMCDATASectionClass */
    parent_class: DOMTextClass
    static name: string
}
export abstract class DOMCSSRuleClass {
    /* Fields of WebKit2WebExtension.DOMCSSRuleClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMCSSRuleListClass {
    /* Fields of WebKit2WebExtension.DOMCSSRuleListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMCSSStyleDeclarationClass {
    /* Fields of WebKit2WebExtension.DOMCSSStyleDeclarationClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMCSSStyleSheetClass {
    /* Fields of WebKit2WebExtension.DOMCSSStyleSheetClass */
    parent_class: DOMStyleSheetClass
    static name: string
}
export abstract class DOMCSSValueClass {
    /* Fields of WebKit2WebExtension.DOMCSSValueClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMCharacterDataClass {
    /* Fields of WebKit2WebExtension.DOMCharacterDataClass */
    parent_class: DOMNodeClass
    static name: string
}
export abstract class DOMCommentClass {
    /* Fields of WebKit2WebExtension.DOMCommentClass */
    parent_class: DOMCharacterDataClass
    static name: string
}
export abstract class DOMConsoleClass {
    /* Fields of WebKit2WebExtension.DOMConsoleClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMApplicationCacheClass {
    /* Fields of WebKit2WebExtension.DOMDOMApplicationCacheClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMImplementationClass {
    /* Fields of WebKit2WebExtension.DOMDOMImplementationClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMMimeTypeArrayClass {
    /* Fields of WebKit2WebExtension.DOMDOMMimeTypeArrayClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMMimeTypeClass {
    /* Fields of WebKit2WebExtension.DOMDOMMimeTypeClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMNamedFlowCollectionClass {
    /* Fields of WebKit2WebExtension.DOMDOMNamedFlowCollectionClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMPluginArrayClass {
    /* Fields of WebKit2WebExtension.DOMDOMPluginArrayClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMPluginClass {
    /* Fields of WebKit2WebExtension.DOMDOMPluginClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMSecurityPolicyClass {
    /* Fields of WebKit2WebExtension.DOMDOMSecurityPolicyClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMSelectionClass {
    /* Fields of WebKit2WebExtension.DOMDOMSelectionClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMSettableTokenListClass {
    /* Fields of WebKit2WebExtension.DOMDOMSettableTokenListClass */
    parent_class: DOMDOMTokenListClass
    static name: string
}
export abstract class DOMDOMStringListClass {
    /* Fields of WebKit2WebExtension.DOMDOMStringListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMStringMapClass {
    /* Fields of WebKit2WebExtension.DOMDOMStringMapClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMTokenListClass {
    /* Fields of WebKit2WebExtension.DOMDOMTokenListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMWindowCSSClass {
    /* Fields of WebKit2WebExtension.DOMDOMWindowCSSClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDOMWindowClass {
    /* Fields of WebKit2WebExtension.DOMDOMWindowClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDatabaseClass {
    /* Fields of WebKit2WebExtension.DOMDatabaseClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMDocumentClass {
    /* Fields of WebKit2WebExtension.DOMDocumentClass */
    parent_class: DOMNodeClass
    static name: string
}
export abstract class DOMDocumentFragmentClass {
    /* Fields of WebKit2WebExtension.DOMDocumentFragmentClass */
    parent_class: DOMNodeClass
    static name: string
}
export abstract class DOMDocumentTypeClass {
    /* Fields of WebKit2WebExtension.DOMDocumentTypeClass */
    parent_class: DOMNodeClass
    static name: string
}
export abstract class DOMElementClass {
    /* Fields of WebKit2WebExtension.DOMElementClass */
    parent_class: DOMNodeClass
    static name: string
}
export abstract class DOMEntityReferenceClass {
    /* Fields of WebKit2WebExtension.DOMEntityReferenceClass */
    parent_class: DOMNodeClass
    static name: string
}
export abstract class DOMEventClass {
    /* Fields of WebKit2WebExtension.DOMEventClass */
    parent_class: DOMObjectClass
    static name: string
}
export class DOMEventTargetClass {
    static name: string
}
export abstract class DOMEventTargetIface {
    /* Fields of WebKit2WebExtension.DOMEventTargetIface */
    gIface: GObject.TypeInterface
    dispatch_event: (target: DOMEventTarget, event: DOMEvent) => boolean
    add_event_listener: (target: DOMEventTarget, event_name: string, handler: Function, use_capture: boolean) => boolean
    remove_event_listener: (target: DOMEventTarget, event_name: string, handler: Function, use_capture: boolean) => boolean
    static name: string
}
export abstract class DOMFileClass {
    /* Fields of WebKit2WebExtension.DOMFileClass */
    parent_class: DOMBlobClass
    static name: string
}
export abstract class DOMFileListClass {
    /* Fields of WebKit2WebExtension.DOMFileListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMGamepadClass {
    /* Fields of WebKit2WebExtension.DOMGamepadClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMGamepadListClass {
    /* Fields of WebKit2WebExtension.DOMGamepadListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMGeolocationClass {
    /* Fields of WebKit2WebExtension.DOMGeolocationClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMHTMLAnchorElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLAnchorElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLAppletElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLAppletElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLAreaElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLAreaElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLAudioElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLAudioElementClass */
    parent_class: DOMHTMLMediaElementClass
    static name: string
}
export abstract class DOMHTMLBRElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLBRElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLBaseElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLBaseElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLBaseFontElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLBaseFontElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLBodyElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLBodyElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLButtonElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLButtonElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLCanvasElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLCanvasElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLCollectionClass {
    /* Fields of WebKit2WebExtension.DOMHTMLCollectionClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMHTMLDListElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLDListElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLDetailsElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLDetailsElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLDirectoryElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLDirectoryElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLDivElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLDivElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLDocumentClass {
    /* Fields of WebKit2WebExtension.DOMHTMLDocumentClass */
    parent_class: DOMDocumentClass
    static name: string
}
export abstract class DOMHTMLElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLElementClass */
    parent_class: DOMElementClass
    static name: string
}
export abstract class DOMHTMLEmbedElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLEmbedElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLFieldSetElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLFieldSetElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLFontElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLFontElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLFormElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLFormElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLFrameElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLFrameElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLFrameSetElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLFrameSetElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLHRElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLHRElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLHeadElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLHeadElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLHeadingElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLHeadingElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLHtmlElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLHtmlElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLIFrameElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLIFrameElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLImageElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLImageElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLInputElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLInputElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLKeygenElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLKeygenElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLLIElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLLIElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLLabelElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLLabelElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLLegendElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLLegendElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLLinkElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLLinkElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLMapElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLMapElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLMarqueeElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLMarqueeElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLMediaElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLMediaElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLMenuElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLMenuElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLMetaElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLMetaElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLModElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLModElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLOListElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLOListElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLObjectElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLObjectElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLOptGroupElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLOptGroupElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLOptionElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLOptionElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLOptionsCollectionClass {
    /* Fields of WebKit2WebExtension.DOMHTMLOptionsCollectionClass */
    parent_class: DOMHTMLCollectionClass
    static name: string
}
export abstract class DOMHTMLParagraphElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLParagraphElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLParamElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLParamElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLPreElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLPreElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLQuoteElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLQuoteElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLScriptElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLScriptElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLSelectElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLSelectElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLStyleElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLStyleElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTableCaptionElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTableCaptionElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTableCellElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTableCellElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTableColElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTableColElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTableElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTableElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTableRowElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTableRowElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTableSectionElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTableSectionElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTextAreaElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTextAreaElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLTitleElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLTitleElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLUListElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLUListElementClass */
    parent_class: DOMHTMLElementClass
    static name: string
}
export abstract class DOMHTMLVideoElementClass {
    /* Fields of WebKit2WebExtension.DOMHTMLVideoElementClass */
    parent_class: DOMHTMLMediaElementClass
    static name: string
}
export abstract class DOMHistoryClass {
    /* Fields of WebKit2WebExtension.DOMHistoryClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMKeyboardEventClass {
    /* Fields of WebKit2WebExtension.DOMKeyboardEventClass */
    parent_class: DOMUIEventClass
    static name: string
}
export abstract class DOMLocationClass {
    /* Fields of WebKit2WebExtension.DOMLocationClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMMediaControllerClass {
    /* Fields of WebKit2WebExtension.DOMMediaControllerClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMMediaErrorClass {
    /* Fields of WebKit2WebExtension.DOMMediaErrorClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMMediaListClass {
    /* Fields of WebKit2WebExtension.DOMMediaListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMMediaQueryListClass {
    /* Fields of WebKit2WebExtension.DOMMediaQueryListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMMessagePortClass {
    /* Fields of WebKit2WebExtension.DOMMessagePortClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMMouseEventClass {
    /* Fields of WebKit2WebExtension.DOMMouseEventClass */
    parent_class: DOMUIEventClass
    static name: string
}
export abstract class DOMNamedNodeMapClass {
    /* Fields of WebKit2WebExtension.DOMNamedNodeMapClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMNavigatorClass {
    /* Fields of WebKit2WebExtension.DOMNavigatorClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMNodeClass {
    /* Fields of WebKit2WebExtension.DOMNodeClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMNodeFilterClass {
    /* Fields of WebKit2WebExtension.DOMNodeFilterClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMNodeIteratorClass {
    /* Fields of WebKit2WebExtension.DOMNodeIteratorClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMNodeListClass {
    /* Fields of WebKit2WebExtension.DOMNodeListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMObjectClass {
    /* Fields of WebKit2WebExtension.DOMObjectClass */
    parentClass: GObject.ObjectClass
    static name: string
}
export class DOMObjectPrivate {
    static name: string
}
export abstract class DOMPerformanceClass {
    /* Fields of WebKit2WebExtension.DOMPerformanceClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMPerformanceEntryClass {
    /* Fields of WebKit2WebExtension.DOMPerformanceEntryClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMPerformanceEntryListClass {
    /* Fields of WebKit2WebExtension.DOMPerformanceEntryListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMPerformanceNavigationClass {
    /* Fields of WebKit2WebExtension.DOMPerformanceNavigationClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMPerformanceTimingClass {
    /* Fields of WebKit2WebExtension.DOMPerformanceTimingClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMProcessingInstructionClass {
    /* Fields of WebKit2WebExtension.DOMProcessingInstructionClass */
    parent_class: DOMCharacterDataClass
    static name: string
}
export abstract class DOMRangeClass {
    /* Fields of WebKit2WebExtension.DOMRangeClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMScreenClass {
    /* Fields of WebKit2WebExtension.DOMScreenClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMShadowRootClass {
    /* Fields of WebKit2WebExtension.DOMShadowRootClass */
    parent_class: DOMDocumentFragmentClass
    static name: string
}
export abstract class DOMStorageClass {
    /* Fields of WebKit2WebExtension.DOMStorageClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMStorageInfoClass {
    /* Fields of WebKit2WebExtension.DOMStorageInfoClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMStorageQuotaClass {
    /* Fields of WebKit2WebExtension.DOMStorageQuotaClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMStyleMediaClass {
    /* Fields of WebKit2WebExtension.DOMStyleMediaClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMStyleSheetClass {
    /* Fields of WebKit2WebExtension.DOMStyleSheetClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMStyleSheetListClass {
    /* Fields of WebKit2WebExtension.DOMStyleSheetListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMTextClass {
    /* Fields of WebKit2WebExtension.DOMTextClass */
    parent_class: DOMCharacterDataClass
    static name: string
}
export abstract class DOMTextTrackClass {
    /* Fields of WebKit2WebExtension.DOMTextTrackClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMTextTrackCueClass {
    /* Fields of WebKit2WebExtension.DOMTextTrackCueClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMTextTrackCueListClass {
    /* Fields of WebKit2WebExtension.DOMTextTrackCueListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMTextTrackListClass {
    /* Fields of WebKit2WebExtension.DOMTextTrackListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMTimeRangesClass {
    /* Fields of WebKit2WebExtension.DOMTimeRangesClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMTouchClass {
    /* Fields of WebKit2WebExtension.DOMTouchClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMTrackEventClass {
    /* Fields of WebKit2WebExtension.DOMTrackEventClass */
    parent_class: DOMEventClass
    static name: string
}
export abstract class DOMTreeWalkerClass {
    /* Fields of WebKit2WebExtension.DOMTreeWalkerClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMUIEventClass {
    /* Fields of WebKit2WebExtension.DOMUIEventClass */
    parent_class: DOMEventClass
    static name: string
}
export abstract class DOMValidityStateClass {
    /* Fields of WebKit2WebExtension.DOMValidityStateClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMVideoPlaybackQualityClass {
    /* Fields of WebKit2WebExtension.DOMVideoPlaybackQualityClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMVideoTrackClass {
    /* Fields of WebKit2WebExtension.DOMVideoTrackClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMVideoTrackListClass {
    /* Fields of WebKit2WebExtension.DOMVideoTrackListClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMWebKitNamedFlowClass {
    /* Fields of WebKit2WebExtension.DOMWebKitNamedFlowClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMWebKitPointClass {
    /* Fields of WebKit2WebExtension.DOMWebKitPointClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMWheelEventClass {
    /* Fields of WebKit2WebExtension.DOMWheelEventClass */
    parent_class: DOMMouseEventClass
    static name: string
}
export abstract class DOMXPathExpressionClass {
    /* Fields of WebKit2WebExtension.DOMXPathExpressionClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMXPathNSResolverClass {
    /* Fields of WebKit2WebExtension.DOMXPathNSResolverClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class DOMXPathResultClass {
    /* Fields of WebKit2WebExtension.DOMXPathResultClass */
    parent_class: DOMObjectClass
    static name: string
}
export abstract class FrameClass {
    /* Fields of WebKit2WebExtension.FrameClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class FramePrivate {
    static name: string
}
export abstract class ScriptWorldClass {
    /* Fields of WebKit2WebExtension.ScriptWorldClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class ScriptWorldPrivate {
    static name: string
}
export abstract class URIRequestClass {
    /* Fields of WebKit2WebExtension.URIRequestClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class URIRequestPrivate {
    static name: string
}
export abstract class URIResponseClass {
    /* Fields of WebKit2WebExtension.URIResponseClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class URIResponsePrivate {
    static name: string
}
export abstract class WebExtensionClass {
    /* Fields of WebKit2WebExtension.WebExtensionClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class WebExtensionPrivate {
    static name: string
}
export abstract class WebPageClass {
    /* Fields of WebKit2WebExtension.WebPageClass */
    parent_class: GObject.ObjectClass
    static name: string
}
export class WebPagePrivate {
    static name: string
}